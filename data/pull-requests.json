[
  {
    "html_url": "https://github.com/bluealloy/revm/pull/1746",
    "id": 2504122316,
    "number": 1746,
    "title": "fix(inspector): always call selfdestruct if entry is made",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-09-04T01:47:58Z",
    "updated_at": "2024-09-04T11:31:27Z",
    "closed_at": "2024-09-04T11:30:04Z",
    "draft": false,
    "body": "fix https://github.com/paradigmxyz/reth/issues/10554\r\n\r\n\r\nIf EIP-6780 is enabled and selfdestruct is called not in the same create transaction, then no `AccountDestroyed` event will be returned: \r\nhttps://github.com/bluealloy/revm/blob/cabd1d1abbe9a1c58ded7316f3f4756eaacba559/crates/revm/src/journaled_state.rs#L510-L519\r\n\r\nbut actually in that case we also need to log the selfdestruct event. ",
    "merged_at": "2024-09-04T11:30:04Z",
    "repo": "revm"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/10600",
    "id": 2492545085,
    "number": 10600,
    "title": "feat(rpc): dedup rpc getTxBySenderAndNonce",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-08-28T16:31:52Z",
    "updated_at": "2024-08-31T17:45:44Z",
    "closed_at": "2024-08-31T17:09:17Z",
    "draft": false,
    "body": "closes https://github.com/paradigmxyz/reth/issues/10544",
    "merged_at": "2024-08-31T17:09:17Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/10540",
    "id": 2486780146,
    "number": 10540,
    "title": "feat(rpc): implement eth_getTransactionBySenderAndNonce",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-08-26T12:44:44Z",
    "updated_at": "2024-08-28T16:27:36Z",
    "closed_at": "2024-08-26T16:37:16Z",
    "draft": false,
    "body": "implement https://github.com/ethereum/execution-apis/issues/494\r\n\r\nThis API is similar to ots_getTransactionBySenderAndNonce, but this one(eth_getTransactionBySenderAndNonce) will check the tx pool first, and then request with block data. \r\n\r\nSo I'll try to merge the two implementations into one function.",
    "merged_at": "2024-08-26T16:37:16Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/erigontech/erigon/pull/11745",
    "id": 2485751559,
    "number": 11745,
    "title": "fix(lib/state): cursor iterate should check error ",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-08-26T03:06:29Z",
    "updated_at": "2024-09-02T09:47:07Z",
    "closed_at": "2024-08-26T06:51:18Z",
    "draft": false,
    "body": null,
    "merged_at": "2024-08-26T06:51:18Z",
    "repo": "erigon"
  },
  {
    "html_url": "https://github.com/erigontech/erigon/pull/11722",
    "id": 2482270560,
    "number": 11722,
    "title": "feat(eth/calltracer): the captured to address's value is not used",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-08-23T04:30:22Z",
    "updated_at": "2024-09-05T01:49:02Z",
    "closed_at": "2024-09-05T01:49:02Z",
    "draft": false,
    "body": "As the value for each to address is not used, keep the same logic for `froms` and `tos`, ",
    "merged_at": "2024-09-05T01:49:02Z",
    "repo": "erigon"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/10473",
    "id": 2482257921,
    "number": 10473,
    "title": "chore(txpool): rename the function of tx_by_sender_and_nonce",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-08-23T04:26:42Z",
    "updated_at": "2024-08-24T13:24:17Z",
    "closed_at": "2024-08-24T08:16:28Z",
    "draft": false,
    "body": "This function only returns one tx, so we should use `transaction` instead of `transactions`, else the user may be confused about whether a `sender+nonce` will return one or more txs.",
    "merged_at": "2024-08-24T08:16:28Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/10421",
    "id": 2478162659,
    "number": 10421,
    "title": "fix(rpc/otterscan): set fullblock.tx_count with block's",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-08-21T14:17:17Z",
    "updated_at": "2024-08-21T14:57:23Z",
    "closed_at": "2024-08-21T14:54:04Z",
    "draft": false,
    "body": "Otterscan use `fullblock.transactionCount` to indicate the paginate, so we should set this field always to the full block's one, instead of the drained block.\r\n\r\nref https://github.com/erigontech/erigon/blob/a0049fe9687e79f33e2b191a933aca8a90bda42a/turbo/jsonrpc/otterscan_api.go#L490",
    "merged_at": "2024-08-21T14:54:04Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/revm-inspectors/pull/180",
    "id": 2469415425,
    "number": 180,
    "title": "feat(tracing): add position for gethTrace",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2024-08-16T03:57:59Z",
    "updated_at": "2024-08-29T13:03:55Z",
    "closed_at": "2024-08-29T13:03:54Z",
    "draft": false,
    "body": "ref https://github.com/alloy-rs/alloy/pull/1150",
    "merged_at": null,
    "repo": "revm-inspectors"
  },
  {
    "html_url": "https://github.com/alloy-rs/alloy/pull/1150",
    "id": 2469412156,
    "number": 1150,
    "title": "feat(geth/trace): add field log.position",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-08-16T03:54:28Z",
    "updated_at": "2024-08-18T13:59:21Z",
    "closed_at": "2024-08-17T16:56:28Z",
    "draft": false,
    "body": "<!--\r\nThank you for your Pull Request. Please provide a description above and review\r\nthe requirements below.\r\n\r\nBug fixes and new features should include tests.\r\n\r\nContributors guide: https://github.com/alloy-rs/core/blob/main/CONTRIBUTING.md\r\n\r\nThe contributors guide includes instructions for running rustfmt and building the\r\ndocumentation.\r\n-->\r\n\r\n<!-- ** Please select \"Allow edits from maintainers\" in the PR Options ** -->\r\n\r\n## Motivation\r\n\r\nAdd a field `log.position` in the response of debug_traceXXX RPC with `withLog:true` config(which was added in https://github.com/ethereum/go-ethereum/pull/28389)\r\n\r\nref https://github.com/paradigmxyz/reth/issues/10258\r\n\r\n<!--\r\nExplain the context and why you're making that change. What is the problem\r\nyou're trying to solve? In some cases there is not a problem and this can be\r\nthought of as being the motivation for your change.\r\n-->\r\n\r\n## Solution\r\n\r\n<!--\r\nSummarize the solution and provide any necessary context needed to understand\r\nthe code change.\r\n-->\r\n\r\n## PR Checklist\r\n\r\n- [ ] Added Tests\r\n- [ ] Added Documentation\r\n- [ ] Breaking changes\r\n",
    "merged_at": "2024-08-17T16:56:28Z",
    "repo": "alloy"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/30267",
    "id": 2448916836,
    "number": 30267,
    "title": "eth/catalyst: get params.ExcessBlobGas but check with params.BlobGasUsed",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-08-05T15:58:13Z",
    "updated_at": "2024-08-05T20:12:22Z",
    "closed_at": "2024-08-05T17:14:23Z",
    "draft": false,
    "body": "Seems it is checked with the wrong argument",
    "merged_at": "2024-08-05T17:14:23Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/9891",
    "id": 2437455855,
    "number": 9891,
    "title": "chore(blockchain-tree): rename BlockchainId to SidechainId",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-07-30T10:14:31Z",
    "updated_at": "2024-07-31T00:22:27Z",
    "closed_at": "2024-07-30T23:02:56Z",
    "draft": false,
    "body": "As the `BlockchainId` is a little confused with the `chainId`(or rpc response of `eth_chainId`), so I suggest renaming it to `SidechainId` for better clarity.",
    "merged_at": "2024-07-30T23:02:56Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/9847",
    "id": 2433225005,
    "number": 9847,
    "title": "fix: make clippy happy",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2024-07-27T04:17:20Z",
    "updated_at": "2024-07-27T12:54:21Z",
    "closed_at": "2024-07-27T05:09:08Z",
    "draft": false,
    "body": "ref https://github.com/paradigmxyz/reth/actions/runs/10120723912/job/27990813016?pr=9846",
    "merged_at": null,
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/9846",
    "id": 2433220802,
    "number": 9846,
    "title": "fix(txpool/blob): make blob delete failed more accurate",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-07-27T04:05:35Z",
    "updated_at": "2024-07-29T14:36:59Z",
    "closed_at": "2024-07-29T09:50:22Z",
    "draft": false,
    "body": "From the metric of `reth_transaction_pool_blobstore_failed_deletes` I saw too many blob failed:\r\n\r\n<img width=\"1511\" alt=\"image\" src=\"https://github.com/user-attachments/assets/b806cbc0-c25b-4993-bcc7-78688b299ee4\">\r\n\r\nThen run the reth node with `-vvvv` debug mode, found all the blob delete failed logs was caused by file not found:\r\n\r\n```bash\r\n2024-07-26T12:38:06.848876Z DEBUG txpool::blob: err=[0xc4dedce22285ec1747b2a916d32c2106c59bf55701d6f18193bec639519b6f6a] failed to delete blob file at /data/blobstore/c4dedce22285ec1747b2a916d32c2106c59bf55701d6f18193bec639519b6f6a: No such file or directory (os error 2)\r\n2024-07-26T12:38:06.848888Z DEBUG txpool::blob: err=[0xf8acf98e52632ff89cc76e07d3095bfb7be27ea3aed6a2432e30a8fc7f8070d8] failed to delete blob file at /data/blobstore/f8acf98e52632ff89cc76e07d3095bfb7be27ea3aed6a2432e30a8fc7f8070d8: No such file or directory (os error 2)\r\n2024-07-26T12:38:06.848900Z DEBUG txpool::blob: err=[0xf1cb35953efd2868ed049f6fd1d43b675e0f18daef5be6f979eac4cc9efcba7e] failed to delete blob file at /data/blobstore/f1cb35953efd2868ed049f6fd1d43b675e0f18daef5be6f979eac4cc9efcba7e: No such file or directory (os error 2)\r\n```\r\n\r\nAfter some digging, I think maybe the blob sidecar was inserted in the txpool module:\r\nhttps://github.com/paradigmxyz/reth/blob/1ffa3d147df51328e27140faf7038b090c0b4955/crates/transaction-pool/src/pool/mod.rs#L429-L458\r\n\r\nhowever, some blobs were not propagated into our node, so the blob wasn't tracked in the blobstore.\r\n\r\nBut the to be cleaned the blobs were extracted from the blocks, the results were mucher than our tracked ones.\r\n\r\nhttps://github.com/paradigmxyz/reth/blob/1ffa3d147df51328e27140faf7038b090c0b4955/crates/transaction-pool/src/blobstore/tracker.rs#L36-L67\r\n",
    "merged_at": "2024-07-29T09:50:22Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/9830",
    "id": 2432176404,
    "number": 9830,
    "title": "chore(revm): rm no longer used BlockExecutorStats",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-07-26T12:51:04Z",
    "updated_at": "2024-07-26T19:03:25Z",
    "closed_at": "2024-07-26T15:46:37Z",
    "draft": false,
    "body": "I found some wired logs from the reth's debug log(`-vvvv`):\r\n\r\n```\r\n2024-07-26T12:11:05.501982Z DEBUG evm: Execution time evm_transact=0ns apply_state=0ns apply_post_state=0ns merge_transitions=0ns receipt_root=0ns\r\n2024-07-26T12:11:21.520248Z DEBUG evm: Execution time evm_transact=0ns apply_state=0ns apply_post_state=0ns merge_transitions=0ns receipt_root=0ns\r\n2024-07-26T12:11:45.635212Z DEBUG evm: Execution time evm_transact=0ns apply_state=0ns apply_post_state=0ns merge_transitions=0ns receipt_root=0ns\r\n2024-07-26T12:12:01.102102Z DEBUG evm: Execution time evm_transact=0ns apply_state=0ns apply_post_state=0ns merge_transitions=0ns receipt_root=0ns\r\n```\r\n\r\nthen found the stats is no longer used, I think it's safe to delete it.",
    "merged_at": "2024-07-26T15:46:37Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/9789",
    "id": 2429384317,
    "number": 9789,
    "title": "chore(node/event): reduce the dup of extract eta and checkpoint",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-07-25T08:40:48Z",
    "updated_at": "2024-07-25T09:18:07Z",
    "closed_at": "2024-07-25T09:18:07Z",
    "draft": false,
    "body": null,
    "merged_at": "2024-07-25T09:18:07Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/9775",
    "id": 2428031731,
    "number": 9775,
    "title": "fix(rpc/eth): remove cache when reorg occured",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-07-24T16:38:02Z",
    "updated_at": "2024-07-25T01:34:51Z",
    "closed_at": "2024-07-24T21:45:54Z",
    "draft": false,
    "body": "# What's the problem?\r\n\r\n`eth_getBlockByHash` returns the ReOrged block;\r\n\r\n# How to reproduce\r\n\r\nWe're running ETL process to fetch blocks and transactions from the RPC server, and then save them into our DB, and after some epoch(eg: 64 blocks), recheck the saved blocks to see if it's forked blocks or canonical ones. \r\n\r\nIf it's a forked one(**by checking the block hash can continue to be queried to determine**), we need to remove the saved transactions and re-fetch the block with the same block number. \r\n\r\nAnd this process runs when in geth's RPC, but failed on reth. After some digging, found geth will remove the hash -> number mapping when reorg occurs: https://github.com/ethereum/go-ethereum/blob/df3f0a81a7ef6fd56c90675c32b6d732380a9fd2/core/blockchain.go#L1322-L1327\r\n\r\nReth will also remove the mapping in the underlying DB(by restarting reth, this issue disappeared), but the cache is not fully removed, so I propose this PR.",
    "merged_at": "2024-07-24T21:45:54Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/9722",
    "id": 2424044040,
    "number": 9722,
    "title": "fix(rpc/trace): trace_filter filting with trace's address",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-07-23T01:19:22Z",
    "updated_at": "2024-08-02T13:41:33Z",
    "closed_at": "2024-08-02T12:38:34Z",
    "draft": false,
    "body": "waiting for https://github.com/alloy-rs/alloy/pull/1090 to be merged first.\r\n\r\nCurrently, we're filtering the trace result by transaction's from and to address, but indeed this API should filtering with trace {action, result}'s address, the latter is more useful and meaningful.\r\n\r\n\r\neg I want to fetch the traces with the below RPC:\r\n\r\n```json\r\n{\r\n  \"jsonrpc\": \"2.0\",\r\n  \"method\": \"trace_filter\",\r\n  \"id\": 67,\r\n  \"params\": [\r\n    {\r\n      \"fromBlock\": \"0x134FD29\",\r\n      \"toBlock\": \"0x134FD29\", \r\n      \"fromAddress\": [\"0x6b75d8af000000e20b7a7ddf000ba900b4009a80\"],\r\n      \"toAddress\": [\"0x420690b0736e88ea43373a6dd7e1c8f225050e7b\"]\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\nreth's can't produce any results, because https://etherscan.io/address/0x6b75d8af000000e20b7a7ddf000ba900b4009a80 is a contract, no exists in tx's from_address.\r\n",
    "merged_at": "2024-08-02T12:38:34Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/alloy-rs/alloy/pull/1090",
    "id": 2424035545,
    "number": 1090,
    "title": "feat(rpc/trace): filter matches with trace",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-07-23T01:09:18Z",
    "updated_at": "2024-07-24T15:29:25Z",
    "closed_at": "2024-07-23T16:33:05Z",
    "draft": false,
    "body": "<!--\r\nThank you for your Pull Request. Please provide a description above and review\r\nthe requirements below.\r\n\r\nBug fixes and new features should include tests.\r\n\r\nContributors guide: https://github.com/alloy-rs/core/blob/main/CONTRIBUTING.md\r\n\r\nThe contributors guide includes instructions for running rustfmt and building the\r\ndocumentation.\r\n-->\r\n\r\n<!-- ** Please select \"Allow edits from maintainers\" in the PR Options ** -->\r\n\r\n## Motivation\r\n\r\n<!--\r\nExplain the context and why you're making that change. What is the problem\r\nyou're trying to solve? In some cases there is not a problem and this can be\r\nthought of as being the motivation for your change.\r\n-->\r\n\r\nFilter the trace with trace {action,result}'s address, not by tx's {from, to}_address, inspired by https://github.com/openethereum/openethereum/blob/6c2d392d867b058ff867c4373e40850ca3f96969/crates/ethcore/src/trace/types/filter.rs#L95-L131 and https://github.com/ledgerwatch/erigon/blob/72ab70be8b28964a8446e52b7a9975958c6726bf/turbo/jsonrpc/trace_filtering.go#L238-L289\r\n\r\n## Solution\r\n\r\n<!--\r\nSummarize the solution and provide any necessary context needed to understand\r\nthe code change.\r\n-->\r\n\r\n## PR Checklist\r\n\r\n- [x] Added Tests\r\n- [x] Added Documentation\r\n- [x] Breaking changes\r\n",
    "merged_at": "2024-07-23T16:33:05Z",
    "repo": "alloy"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/9477",
    "id": 2405679484,
    "number": 9477,
    "title": "feat(rpc/otterscan): set total_fees in ots_getBlockDetails",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-07-12T13:59:22Z",
    "updated_at": "2024-07-16T22:22:47Z",
    "closed_at": "2024-07-16T21:48:28Z",
    "draft": false,
    "body": "wait for alloy new release ref https://github.com/alloy-rs/alloy/pull/1043",
    "merged_at": "2024-07-16T21:48:28Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/9471",
    "id": 2405104620,
    "number": 9471,
    "title": "feat(net/peer): simple support rank higher with static peer",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-07-12T09:05:13Z",
    "updated_at": "2024-07-12T12:32:35Z",
    "closed_at": "2024-07-12T11:33:48Z",
    "draft": false,
    "body": "closes https://github.com/paradigmxyz/reth/issues/9213\r\n\r\n\r\n@mattsse sorry for the long time delay, but currently I only add the `|| peer.is_static()` along with `peer.is_trusted()` as you mentioned in the task. \r\n\r\nI think this\u2019s not enough for the original issue, at least we need to distinguish the differ of trusted and static, but can't get more ideas, could you please give more advice, thanks. ",
    "merged_at": "2024-07-12T11:33:48Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/9469",
    "id": 2404965049,
    "number": 9469,
    "title": "feat(rpc/otterscan): change BlockId to u64 in has_code",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-07-12T07:43:48Z",
    "updated_at": "2024-07-12T09:39:23Z",
    "closed_at": "2024-07-12T09:06:10Z",
    "draft": false,
    "body": "similar to (#9302)",
    "merged_at": "2024-07-12T09:06:10Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/alloy-rs/alloy/pull/1044",
    "id": 2404929170,
    "number": 1044,
    "title": "fix: cargo fmt",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-07-12T07:21:34Z",
    "updated_at": "2024-07-12T09:05:21Z",
    "closed_at": "2024-07-12T09:03:08Z",
    "draft": false,
    "body": "<!--\r\nThank you for your Pull Request. Please provide a description above and review\r\nthe requirements below.\r\n\r\nBug fixes and new features should include tests.\r\n\r\nContributors guide: https://github.com/alloy-rs/core/blob/main/CONTRIBUTING.md\r\n\r\nThe contributors guide includes instructions for running rustfmt and building the\r\ndocumentation.\r\n-->\r\n\r\n<!-- ** Please select \"Allow edits from maintainers\" in the PR Options ** -->\r\n\r\n## Motivation\r\n\r\n<!--\r\nExplain the context and why you're making that change. What is the problem\r\nyou're trying to solve? In some cases there is not a problem and this can be\r\nthought of as being the motivation for your change.\r\n-->\r\n\r\nerror from https://github.com/alloy-rs/alloy/actions/runs/9904006769/job/27360566257?pr=1043\r\n\r\n```\r\nRun cargo fmt --all --check\r\nDiff in /home/runner/work/alloy/alloy/crates/eips/src/eip7702/auth_list.rs:13:\r\n #[derive(Debug, Clone, Hash, RlpEncodable, RlpDecodable, Eq, PartialEq)]\r\n #[cfg_attr(feature = \"serde\", derive(serde::Serialize, serde::Deserialize))]\r\n #[cfg_attr(feature = \"serde\", serde(rename_all = \"camelCase\"))]\r\n-#[cfg_attr(\r\n-    any(test, feature = \"arbitrary\"),\r\n-    derive(arbitrary::Arbitrary)\r\n-)]\r\n+#[cfg_attr(any(test, feature = \"arbitrary\"), derive(arbitrary::Arbitrary))]\r\n pub struct Authorization {\r\n     /// The chain ID of the authorization.\r\n     pub chain_id: ChainId,\r\nDiff in /home/runner/work/alloy/alloy/crates/eips/src/eip7702/auth_list.rs:233:\r\n /// The wrapper type is used for RLP encoding and decoding.\r\n #[derive(Default, Debug, Copy, Clone, Hash, Eq, PartialEq)]\r\n #[cfg_attr(feature = \"serde\", derive(serde::Serialize, serde::Deserialize))]\r\n-#[cfg_attr(\r\n-    any(test, feature = \"arbitrary\"),\r\n-    derive(arbitrary::Arbitrary)\r\n-)]\r\n+#[cfg_attr(any(test, feature = \"arbitrary\"), derive(arbitrary::Arbitrary))]\r\n pub struct OptionalNonce(Option<u64>);\r\n \r\n impl OptionalNonce {\r\nError: Process completed with exit code 1.\r\n```\r\n\r\n\r\n## Solution\r\n\r\n<!--\r\nSummarize the solution and provide any necessary context needed to understand\r\nthe code change.\r\n-->\r\n\r\n## PR Checklist\r\n\r\n- [ ] Added Tests\r\n- [ ] Added Documentation\r\n- [ ] Breaking changes\r\n",
    "merged_at": "2024-07-12T09:03:08Z",
    "repo": "alloy"
  },
  {
    "html_url": "https://github.com/alloy-rs/alloy/pull/1043",
    "id": 2404922384,
    "number": 1043,
    "title": "feat(otterscan): add ots slim block and serialze OperationType to int",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-07-12T07:17:08Z",
    "updated_at": "2024-07-12T12:32:42Z",
    "closed_at": "2024-07-12T10:47:29Z",
    "draft": false,
    "body": "<!--\r\nThank you for your Pull Request. Please provide a description above and review\r\nthe requirements below.\r\n\r\nBug fixes and new features should include tests.\r\n\r\nContributors guide: https://github.com/alloy-rs/core/blob/main/CONTRIBUTING.md\r\n\r\nThe contributors guide includes instructions for running rustfmt and building the\r\ndocumentation.\r\n-->\r\n\r\n<!-- ** Please select \"Allow edits from maintainers\" in the PR Options ** -->\r\n\r\n## Motivation\r\n\r\n<!--\r\nExplain the context and why you're making that change. What is the problem\r\nyou're trying to solve? In some cases there is not a problem and this can be\r\nthought of as being the motivation for your change.\r\n-->\r\n\r\nI'm running reth along with otterscan, and find some more rpc mismatches:\r\n\r\n1. `ots_getInternalOperations` returns `type` as int, but the default serde json serialize will return as String instead, use `serde_repr` to serialize it;\r\n2. the response of `ots_getBlockDetails` without transactions, https://github.com/otterscan/otterscan/blob/3adcc62c4eedc56f812fab5ca4b85e3c5fd4b595/docs/custom-jsonrpc.md#L76 https://github.com/ledgerwatch/erigon/blob/6097c05cc914801132e7897427956f196efbbba1/turbo/jsonrpc/otterscan_api.go#L259-L261\r\n3. add a new function to set `issuance` and `total_fees` for `BlockDetails`\r\n\r\nAfter this prototypes changed, I think reth can almost run along with otterscan(without the transaction before/after listing and ots2 API)\r\n\r\n## Solution\r\n\r\n<!--\r\nSummarize the solution and provide any necessary context needed to understand\r\nthe code change.\r\n-->\r\n\r\n## PR Checklist\r\n\r\n- [ ] Added Tests\r\n- [ ] Added Documentation\r\n- [ ] Breaking changes\r\n",
    "merged_at": "2024-07-12T10:47:29Z",
    "repo": "alloy"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/9468",
    "id": 2404492590,
    "number": 9468,
    "title": "fix(chainspec): set dao_fork_support=true for mainnet,sepolia,holesky",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-07-12T01:51:54Z",
    "updated_at": "2024-07-15T01:21:18Z",
    "closed_at": "2024-07-12T09:26:05Z",
    "draft": false,
    "body": "Ref https://github.com/ethereum/go-ethereum/blob/2d9d42376436cd275c28056cffd0eb97cb8daed8/params/config.go#L45, set dao_fork_support for mainnet, holesky and sepolia",
    "merged_at": "2024-07-12T09:26:05Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/9448",
    "id": 2403569365,
    "number": 9448,
    "title": "feat(rpc/admin): compatible with geth's admin_nodeInfo",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-07-11T16:12:31Z",
    "updated_at": "2024-07-27T12:50:32Z",
    "closed_at": "2024-07-16T22:01:17Z",
    "draft": false,
    "body": "In this PR, fixed two data inconsistent with geth's response of `admin_nodeInfo`:\r\n\r\n1. `id` should be the node's public key, wait for alloy to be released a new version, ref https://github.com/alloy-rs/alloy/pull/1038\r\n2. Add the xxxBlock and yyyTime to `protocols.eth.config`, after this issue fixed, we can use reth to fetch the prestate to run trace tests and any other state-related testing, ref https://github.com/ethereum/go-ethereum/blob/2d9d42376436cd275c28056cffd0eb97cb8daed8/eth/tracers/internal/tracetest/makeTest.js#L30 \r\n\r\nIt's not clever to extract the xxxBlocks in the admin module, should be implement in chainspec instead. ",
    "merged_at": "2024-07-16T22:01:17Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/alloy-rs/alloy/pull/1039",
    "id": 2403196736,
    "number": 1039,
    "title": "feat(genesis): rm EIP150Hash",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-07-11T13:29:33Z",
    "updated_at": "2024-07-11T14:17:06Z",
    "closed_at": "2024-07-11T13:54:53Z",
    "draft": false,
    "body": "<!--\r\nThank you for your Pull Request. Please provide a description above and review\r\nthe requirements below.\r\n\r\nBug fixes and new features should include tests.\r\n\r\nContributors guide: https://github.com/alloy-rs/core/blob/main/CONTRIBUTING.md\r\n\r\nThe contributors guide includes instructions for running rustfmt and building the\r\ndocumentation.\r\n-->\r\n\r\n<!-- ** Please select \"Allow edits from maintainers\" in the PR Options ** -->\r\n\r\n## Motivation\r\n\r\n<!--\r\nExplain the context and why you're making that change. What is the problem\r\nyou're trying to solve? In some cases there is not a problem and this can be\r\nthought of as being the motivation for your change.\r\n-->\r\nAs EIP150Hash was removed in geth, so I think we can also remove them, ref https://github.com/ethereum/go-ethereum/blob/v1.14.0/params/config.go#L326\r\n\r\n## Solution\r\n\r\n<!--\r\nSummarize the solution and provide any necessary context needed to understand\r\nthe code change.\r\n-->\r\n\r\n## PR Checklist\r\n\r\n- [ ] Added Tests\r\n- [ ] Added Documentation\r\n- [ ] Breaking changes\r\n",
    "merged_at": "2024-07-11T13:54:53Z",
    "repo": "alloy"
  },
  {
    "html_url": "https://github.com/alloy-rs/alloy/pull/1038",
    "id": 2403176015,
    "number": 1038,
    "title": "fix(admin): id in NodeInfo is string instead of B256",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-07-11T13:20:50Z",
    "updated_at": "2024-07-13T13:46:06Z",
    "closed_at": "2024-07-13T13:46:06Z",
    "draft": false,
    "body": "<!--\r\nThank you for your Pull Request. Please provide a description above and review\r\nthe requirements below.\r\n\r\nBug fixes and new features should include tests.\r\n\r\nContributors guide: https://github.com/alloy-rs/core/blob/main/CONTRIBUTING.md\r\n\r\nThe contributors guide includes instructions for running rustfmt and building the\r\ndocumentation.\r\n-->\r\n\r\n<!-- ** Please select \"Allow edits from maintainers\" in the PR Options ** -->\r\n\r\n## Motivation\r\n\r\n<!--\r\nExplain the context and why you're making that change. What is the problem\r\nyou're trying to solve? In some cases there is not a problem and this can be\r\nthought of as being the motivation for your change.\r\n-->\r\n\r\nReturn the same response type as geth's, ref https://github.com/ethereum/go-ethereum/blob/v1.14.0/p2p/server.go#L1078-L1079\r\n\r\n## Solution\r\n\r\n<!--\r\nSummarize the solution and provide any necessary context needed to understand\r\nthe code change.\r\n-->\r\n\r\n## PR Checklist\r\n\r\n- [ ] Added Tests\r\n- [ ] Added Documentation\r\n- [ ] Breaking changes\r\n",
    "merged_at": "2024-07-13T13:46:06Z",
    "repo": "alloy"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/9302",
    "id": 2390856685,
    "number": 9302,
    "title": "fix(rpc/ots): set block_number as u64 instead of NumberOrTag",
    "state": "closed",
    "locked": false,
    "comments": 2,
    "created_at": "2024-07-04T13:17:39Z",
    "updated_at": "2024-07-05T01:32:55Z",
    "closed_at": "2024-07-04T15:10:36Z",
    "draft": false,
    "body": "Ref  https://github.com/ledgerwatch/erigon/blob/2711926dc18560d4e2affebe8744dac17c85e21b/turbo/jsonrpc/otterscan_api.go#L56-L69 \r\n\r\nthe `block_number` in Erigon's `ots_` namespace are uint64, instead of blockNumberOrTag, we should also use u64 instead, and then otterscan can smoothy run with reth(including the other pending ots_ rpc + ots_searchRPC).",
    "merged_at": "2024-07-04T15:10:36Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/9300",
    "id": 2390668815,
    "number": 9300,
    "title": "feat(rpc/ots): add rpc erigon_getHeaderByNumber",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2024-07-04T11:41:48Z",
    "updated_at": "2024-07-04T12:31:35Z",
    "closed_at": "2024-07-04T12:26:36Z",
    "draft": false,
    "body": "ref https://github.com/otterscan/otterscan/issues/1081",
    "merged_at": "2024-07-04T12:26:36Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/9263",
    "id": 2388664296,
    "number": 9263,
    "title": "feat(rpc/ots): implement ots_getTransactionBySenderAndNonce",
    "state": "closed",
    "locked": false,
    "comments": 3,
    "created_at": "2024-07-03T13:37:39Z",
    "updated_at": "2024-07-09T11:29:13Z",
    "closed_at": "2024-07-09T10:42:47Z",
    "draft": false,
    "body": "implement and close #8905 ",
    "merged_at": "2024-07-09T10:42:47Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/9246",
    "id": 2386688019,
    "number": 9246,
    "title": "feat(rpc/ots): implement  ots_traceTransaction RPC",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2024-07-02T16:30:22Z",
    "updated_at": "2024-07-09T11:29:04Z",
    "closed_at": "2024-07-09T10:15:37Z",
    "draft": false,
    "body": "this also depends on the new release of alloy. ",
    "merged_at": "2024-07-09T10:15:37Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/alloy-rs/alloy/pull/1001",
    "id": 2385999519,
    "number": 1001,
    "title": "feat(otterscan): add output for TraceEntry",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2024-07-02T11:24:36Z",
    "updated_at": "2024-07-02T16:31:14Z",
    "closed_at": "2024-07-02T11:31:53Z",
    "draft": false,
    "body": "<!--\r\nThank you for your Pull Request. Please provide a description above and review\r\nthe requirements below.\r\n\r\nBug fixes and new features should include tests.\r\n\r\nContributors guide: https://github.com/alloy-rs/core/blob/main/CONTRIBUTING.md\r\n\r\nThe contributors guide includes instructions for running rustfmt and building the\r\ndocumentation.\r\n-->\r\n\r\n<!-- ** Please select \"Allow edits from maintainers\" in the PR Options ** -->\r\n\r\n## Motivation\r\n\r\n<!--\r\nExplain the context and why you're making that change. What is the problem\r\nyou're trying to solve? In some cases there is not a problem and this can be\r\nthought of as being the motivation for your change.\r\n-->\r\n\r\nAdd `output` for the response of `ots_traceTransaction` \r\n\r\nref https://github.com/ledgerwatch/erigon/blob/15d922368f520b3d67035f5012c93bc266a2a638/turbo/jsonrpc/otterscan_trace_transaction.go#L32-L40\r\n\r\n## Solution\r\n\r\n<!--\r\nSummarize the solution and provide any necessary context needed to understand\r\nthe code change.\r\n-->\r\n\r\n## PR Checklist\r\n\r\n- [ ] Added Tests\r\n- [ ] Added Documentation\r\n- [x] Breaking changes\r\n",
    "merged_at": "2024-07-02T11:31:53Z",
    "repo": "alloy"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/9236",
    "id": 2385165091,
    "number": 9236,
    "title": "feat(rpc/ots): implement ots_getContractCreator",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-07-02T04:11:08Z",
    "updated_at": "2024-07-09T11:28:49Z",
    "closed_at": "2024-07-08T20:53:40Z",
    "draft": false,
    "body": "implement and close #8638. Returns the first transaction to create the contract.\r\n\r\n\r\nMerge this one after the alloy new version released(https://github.com/alloy-rs/alloy/pull/999 changes the response struct)\r\n\r\nI fetched some contracts, which are use `create2` and deploy-destroy more than once, and tested with this RPC, seems the rpc is working.\r\nThe duplicated contracts can be found at https://dune.com/queries/3888802/6536425/",
    "merged_at": "2024-07-08T20:53:40Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/alloy-rs/alloy/pull/999",
    "id": 2383285261,
    "number": 999,
    "title": "fix: ots_getContractCreater has field hash instead of tx",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-07-01T09:10:47Z",
    "updated_at": "2024-07-01T09:54:03Z",
    "closed_at": "2024-07-01T09:38:04Z",
    "draft": false,
    "body": "<!--\r\nThank you for your Pull Request. Please provide a description above and review\r\nthe requirements below.\r\n\r\nBug fixes and new features should include tests.\r\n\r\nContributors guide: https://github.com/alloy-rs/core/blob/main/CONTRIBUTING.md\r\n\r\nThe contributors guide includes instructions for running rustfmt and building the\r\ndocumentation.\r\n-->\r\n\r\n<!-- ** Please select \"Allow edits from maintainers\" in the PR Options ** -->\r\n\r\n## Motivation\r\n\r\n<!--\r\nExplain the context and why you're making that change. What is the problem\r\nyou're trying to solve? In some cases there is not a problem and this can be\r\nthought of as being the motivation for your change.\r\n-->\r\n\r\nthe response of `ots_getContractCreator` from https://github.com/otterscan/otterscan/blob/develop/docs/custom-jsonrpc.md#ots_getcontractcreator as below:\r\n\r\n\r\n> object containing the following attributes, or null if the address does not contain a contract.\r\nhash - The tx hash of the transaction who created the contract.\r\ncreator - The address who directly created the contract. Note that for simple transactions that directly deploy a contract this corresponds to the EOA in the from field of the transaction. For deployer contracts, i.e., the contract is created as a result of a method call, this corresponds to the address of the contract who created it.\r\n\r\n```json\r\n{\r\n  \"jsonrpc\": \"2.0\",\r\n  \"id\": 1,\r\n  \"result\": {\r\n    \"hash\": \"0xe881c43cd88063e84a1d0283f41ee5348239b259c0d17a7e2e4552da3f4b2bc7\",\r\n    \"creator\": \"0x6c9fc64a53c1b71fb3f9af64d1ae3a4931a5f4e9\"\r\n  }\r\n}\r\n```\r\n\r\n## Solution\r\n\r\n<!--\r\nSummarize the solution and provide any necessary context needed to understand\r\nthe code change.\r\n-->\r\n\r\n## PR Checklist\r\n\r\n- [ ] Added Tests\r\n- [ ] Added Documentation\r\n- [x] Breaking changes\r\n",
    "merged_at": "2024-07-01T09:38:04Z",
    "repo": "alloy"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/9201",
    "id": 2382144965,
    "number": 9201,
    "title": "feat(net/peer): set rpc added peer as static",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2024-06-30T08:20:33Z",
    "updated_at": "2024-07-01T11:12:02Z",
    "closed_at": "2024-07-01T10:36:49Z",
    "draft": false,
    "body": "indent with geth, which will mark the jsonrpc added peer as static:\r\n\r\n```go\r\n// AddPeer adds the given node to the static node set. When there is room in the peer set,\r\n// the server will connect to the node. If the connection fails for any reason, the server\r\n// will attempt to reconnect the peer.\r\nfunc (srv *Server) AddPeer(node *enode.Node) {\r\n\tsrv.dialsched.addStatic(node)\r\n}\r\n```\r\n\r\nhttps://github.com/ethereum/go-ethereum/blob/7cfff30ba3a67de767a9b2a7405b91f120873d10/p2p/server.go#L334-L339\r\n\r\nthis will affect the fields in response of `admin_peers`, eg:\r\n\r\n```json\r\n{\r\n    \"caps\": [\"eth/68\"],\r\n    \"enode\": \"enode://e8be860040494291648a18182adbfd5dacd303ea881e2f1e702356dcca7dfee5b45fe4d83e2256f0d718baf12a50d6123e8989628ee05@1.1.1.1:30000\",\r\n    \"enr\": \"enr:-J24QBgSMApOgEhV8PMLVLvQan2tLpQvqYu-DzSpum4z...-5YN0Y3CCdTCDdWRwgnUw\",\r\n    \"id\": \"2fed6060ef025a0951e7705451bff6ef4ad0073fb2...\",\r\n    \"name\": \"Geth/v1.13.14-stable-2ecaf439/linux-amd64/go1.22.2\",\r\n    \"network\": {\r\n        \"inbound\": false,\r\n        \"localAddress\": \"172.20.0.3:56918\",\r\n        \"remoteAddress\": \"1.1.1.1:30000\",\r\n        \"static\": true,\r\n        \"trusted\": true\r\n    },\r\n    \"protocols\": {\r\n        \"eth\": \"handshake\"\r\n    }\r\n}\r\n```\r\n",
    "merged_at": "2024-07-01T10:36:49Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/9162",
    "id": 2379316827,
    "number": 9162,
    "title": "fix(net/peer): remove the duplicated disconnect logic",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-06-28T00:44:45Z",
    "updated_at": "2024-06-29T00:13:25Z",
    "closed_at": "2024-06-28T15:29:00Z",
    "draft": false,
    "body": null,
    "merged_at": "2024-06-28T15:29:00Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/9156",
    "id": 2378755025,
    "number": 9156,
    "title": "feat(net/peer): add peer with udp socket",
    "state": "closed",
    "locked": false,
    "comments": 5,
    "created_at": "2024-06-27T17:54:59Z",
    "updated_at": "2024-06-29T09:27:35Z",
    "closed_at": "2024-06-29T09:14:35Z",
    "draft": false,
    "body": "ref https://github.com/paradigmxyz/reth/pull/9043#pullrequestreview-2144882355\r\n\r\n@mattsse could you please a look at this one first ",
    "merged_at": "2024-06-29T09:14:35Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/alloy-rs/alloy/pull/961",
    "id": 2369379350,
    "number": 961,
    "title": "docs: copy/paste error of eip-7251 link",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-06-24T06:50:16Z",
    "updated_at": "2024-06-24T09:41:39Z",
    "closed_at": "2024-06-24T09:41:39Z",
    "draft": false,
    "body": "<!--\r\nThank you for your Pull Request. Please provide a description above and review\r\nthe requirements below.\r\n\r\nBug fixes and new features should include tests.\r\n\r\nContributors guide: https://github.com/alloy-rs/core/blob/main/CONTRIBUTING.md\r\n\r\nThe contributors guide includes instructions for running rustfmt and building the\r\ndocumentation.\r\n-->\r\n\r\n<!-- ** Please select \"Allow edits from maintainers\" in the PR Options ** -->\r\n\r\n## Motivation\r\n\r\n<!--\r\nExplain the context and why you're making that change. What is the problem\r\nyou're trying to solve? In some cases there is not a problem and this can be\r\nthought of as being the motivation for your change.\r\n-->\r\n\r\n## Solution\r\n\r\n<!--\r\nSummarize the solution and provide any necessary context needed to understand\r\nthe code change.\r\n-->\r\n\r\n## PR Checklist\r\n\r\n- [ ] Added Tests\r\n- [x] Added Documentation\r\n- [ ] Breaking changes\r\n",
    "merged_at": "2024-06-24T09:41:39Z",
    "repo": "alloy"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/9043",
    "id": 2368718712,
    "number": 9043,
    "title": "fix(rpc/admin): missing enode/enr in admin_peers endpoint",
    "state": "closed",
    "locked": false,
    "comments": 9,
    "created_at": "2024-06-23T16:51:53Z",
    "updated_at": "2024-07-02T01:46:23Z",
    "closed_at": "2024-07-01T17:39:12Z",
    "draft": false,
    "body": "currently, we're returning the peer information in the net/session module, which misses the peer's discovery port, so can't recover the enode info, and in this PR I combine the peer-info both of the session and underearth socket info.",
    "merged_at": "2024-07-01T17:39:12Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/8943",
    "id": 2361122060,
    "number": 8943,
    "title": "fix(auto-seal): calculate receipts_root",
    "state": "closed",
    "locked": false,
    "comments": 3,
    "created_at": "2024-06-19T02:41:18Z",
    "updated_at": "2024-06-19T13:57:01Z",
    "closed_at": "2024-06-19T11:37:00Z",
    "draft": true,
    "body": "fix https://github.com/paradigmxyz/reth/issues/8940",
    "merged_at": null,
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/8876",
    "id": 2356180295,
    "number": 8876,
    "title": "feat: calc block base reward use block number only",
    "state": "closed",
    "locked": false,
    "comments": 5,
    "created_at": "2024-06-17T02:00:56Z",
    "updated_at": "2024-06-18T00:37:27Z",
    "closed_at": "2024-06-17T17:52:38Z",
    "draft": false,
    "body": "ref https://github.com/paradigmxyz/reth/pull/8868#discussion_r1641918765",
    "merged_at": "2024-06-17T17:52:38Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/8868",
    "id": 2355829536,
    "number": 8868,
    "title": "fix(rpc/trace): include block rewards in trace_filter rpc",
    "state": "closed",
    "locked": false,
    "comments": 2,
    "created_at": "2024-06-16T15:07:40Z",
    "updated_at": "2024-06-18T23:35:24Z",
    "closed_at": "2024-06-18T23:27:03Z",
    "draft": false,
    "body": "the block rewards were missed in the result of `trace_filter`, which will affect the blocks before the merge, so add them into the result if some.\r\n\r\nbtw: if we know one block of the block-range is passed ttd, then no need to extract the following blocks anymore, but the results were handled in an async way, how can we break it? pseudo code as below:\r\n\r\n\r\n```\r\nfor block in blocks:\r\n    if block.is_passed_ttd():\r\n        break\r\n    reward_traces.extend(extract_block_reward_traces(block))\r\n\r\n```",
    "merged_at": "2024-06-18T23:27:03Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/8866",
    "id": 2355734150,
    "number": 8866,
    "title": "feat(rpc/block): simplify the block_receipts rpc",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-06-16T12:30:36Z",
    "updated_at": "2024-06-17T00:31:47Z",
    "closed_at": "2024-06-16T17:21:35Z",
    "draft": false,
    "body": "Seems like we don't need to declare `block_and_receipts` as mutable, can make the main code flow more simple to read.",
    "merged_at": "2024-06-16T17:21:35Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/8767",
    "id": 2347844487,
    "number": 8767,
    "title": "fix(rpc/trace): wrong calculate of block ommer rewards",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-06-12T05:31:44Z",
    "updated_at": "2024-06-12T15:01:39Z",
    "closed_at": "2024-06-12T14:49:30Z",
    "draft": false,
    "body": "In the current implementation of `trace_block` rpc, we return block base reward as `block` reward, and the uncle inclusion rewards as `uncle` reward. \r\n\r\nBut in OpenEthereum/Erigon's implementation, they return `block base + uncle inclusion` as `block` reward, and each uncle reward as `uncle` reward, so the actual uncle rewards were missed. \r\n\r\nIMHO, we should keep the same as oe/erigon, because the results will be more inaccurate, similar to etherscan's. \r\n\r\nEg the reward of https://etherscan.io/block/1378035\r\n\r\n<img width=\"788\" alt=\"image\" src=\"https://github.com/paradigmxyz/reth/assets/3627395/81de3b33-aaca-4769-8eae-39e703e23c9e\">\r\n\r\nReth's response:\r\n\r\n```json\r\n{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"result\": [\r\n        {\r\n            \"action\": {\r\n                \"author\": \"0xea674fdde714fd979de3edf0f56aa9716b898ec8\",\r\n                \"rewardType\": \"block\",\r\n                \"value\": \"0x4563918244f40000\" // 5ETH\r\n            },\r\n            \"blockHash\": \"0xd6940190d24aa1c2e8aa70fb2847aba6c4461679753a7546daf79e6295a9e1e2\",\r\n            \"blockNumber\": 1378035,\r\n            \"subtraces\": 0,\r\n            \"traceAddress\": [],\r\n            \"type\": \"reward\"\r\n        },\r\n        {\r\n            \"action\": {\r\n                \"author\": \"0xea674fdde714fd979de3edf0f56aa9716b898ec8\",\r\n                \"rewardType\": \"uncle\",\r\n                \"value\": \"0x22b1c8c1227a000\" // 0.15625ETH\r\n            },\r\n            \"blockHash\": \"0xd6940190d24aa1c2e8aa70fb2847aba6c4461679753a7546daf79e6295a9e1e2\",\r\n            \"blockNumber\": 1378035,\r\n            \"subtraces\": 0,\r\n            \"traceAddress\": [],\r\n            \"type\": \"reward\"\r\n        }\r\n    ],\r\n    \"id\": \"reth\"\r\n}\r\n```\r\n\r\n\r\nErigon's response \r\n\r\n```json\r\n{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"id\": \"erigon\",\r\n    \"result\": [\r\n        {\r\n            \"action\": {\r\n                \"author\": \"0xea674fdde714fd979de3edf0f56aa9716b898ec8\",\r\n                \"rewardType\": \"block\",\r\n                \"value\": \"0x478eae0e571ba000\" // 5.15625ETH\r\n            },\r\n            \"blockHash\": \"0xd6940190d24aa1c2e8aa70fb2847aba6c4461679753a7546daf79e6295a9e1e2\",\r\n            \"blockNumber\": 1378035,\r\n            \"result\": null,\r\n            \"subtraces\": 0,\r\n            \"traceAddress\": [],\r\n            \"type\": \"reward\"\r\n        },\r\n        {\r\n            \"action\": {\r\n                \"author\": \"0xea674fdde714fd979de3edf0f56aa9716b898ec8\",\r\n                \"rewardType\": \"uncle\",\r\n                \"value\": \"0x3cb71f51fc558000\" // 4.375ETH\r\n            },\r\n            \"blockHash\": \"0xd6940190d24aa1c2e8aa70fb2847aba6c4461679753a7546daf79e6295a9e1e2\",\r\n            \"blockNumber\": 1378035,\r\n            \"result\": null,\r\n            \"subtraces\": 0,\r\n            \"traceAddress\": [],\r\n            \"type\": \"reward\"\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\nRef https://github.com/ledgerwatch/erigon/blob/b4c9f22923cd7156cd26be91a8a83b131eb3cc73/consensus/ethash/consensus.go#L624-L668",
    "merged_at": "2024-06-12T14:49:30Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/prysmaticlabs/prysm/pull/14081",
    "id": 2334863879,
    "number": 14081,
    "title": "chore: make deepsource happy",
    "state": "closed",
    "locked": false,
    "comments": 3,
    "created_at": "2024-06-05T04:20:30Z",
    "updated_at": "2024-06-13T23:46:40Z",
    "closed_at": "2024-06-13T16:19:02Z",
    "draft": false,
    "body": "<!-- Thanks for sending a PR! Before submitting:\r\n\r\n1. If this is your first PR, check out our contribution guide here https://docs.prylabs.network/docs/contribute/contribution-guidelines\r\n   You will then need to sign our Contributor License Agreement (CLA), which will show up as a comment from a bot in this pull request after you open it. We cannot review code without a signed CLA.\r\n2. Please file an associated tracking issue if this pull request is non-trivial and requires context for our team to understand. All features and most bug fixes should have\r\n   an associated issue with a design discussed and decided upon. Small bug\r\n   fixes and documentation improvements don't need issues.\r\n3. New features and bug fixes must have tests. Documentation may need to\r\n   be updated. If you're unsure what to update, send the PR, and we'll discuss\r\n   in review.\r\n4. Note that PRs updating dependencies and new Go versions are not accepted.\r\n   Please file an issue instead.\r\n-->\r\n\r\n**What type of PR is this?**\r\n\r\nOther\r\n\r\n**What does this PR do? Why is it needed?**\r\n\r\nfrom the GitHub action in https://app.deepsource.com/gh/prysmaticlabs/prysm/run/154abfc7-91f5-461c-8860-203e3f566095/go/, seems some code style doesn't meet deepsource's requirement, try to fix those.\r\n\r\n**Which issues(s) does this PR fix?**\r\n\r\nFixes #\r\n\r\n**Other notes for review**\r\n",
    "merged_at": "2024-06-13T16:19:02Z",
    "repo": "prysm"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/8558",
    "id": 2331204726,
    "number": 8558,
    "title": "fix(rpc): add invalid block range error",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-06-03T13:45:14Z",
    "updated_at": "2024-06-03T22:55:50Z",
    "closed_at": "2024-06-03T15:20:01Z",
    "draft": false,
    "body": "When I request the `getLogs` with below query:\r\n\r\n```json\r\n{\r\n  \"jsonrpc\": \"2.0\",\r\n  \"method\": \"eth_getLogs\",\r\n  \"id\": 74,\r\n  \"params\": [\r\n    {\r\n      \"toBlock\": \"0x100\",\r\n      \"fromBlock\": \"0x101\",\r\n      \"topics\": [        \r\n      ]\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\nReth returns with:\r\n\r\n```json\r\n{\r\n  \"jsonrpc\": \"2.0\",\r\n  \"error\": {\r\n    \"code\": -32602,\r\n    \"message\": \"query exceeds max block range 5000\"\r\n  },\r\n  \"id\": 74\r\n}\r\n```\r\n\r\nThe error msg is misleading, changed to geth's error msg. ",
    "merged_at": "2024-06-03T15:20:01Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/8366",
    "id": 2312808610,
    "number": 8366,
    "title": "chore(editor): set indent size=2 for the yaml files",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-05-23T12:34:24Z",
    "updated_at": "2024-05-23T13:03:44Z",
    "closed_at": "2024-05-23T13:03:44Z",
    "draft": false,
    "body": "We're using indent size=2 for the GitHub workflow yaml files, but my editor(neovim) force set tabspace=4 for those yaml files, so I need to manually adjust them back to 2, finally found we set all file types's tab size=4 in the[.editorconfig](./editorconfig), so add a new rule for yaml files.",
    "merged_at": "2024-05-23T13:03:44Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/8335",
    "id": 2308401065,
    "number": 8335,
    "title": "chore(github): run update-book-cli in the lint workflow",
    "state": "closed",
    "locked": false,
    "comments": 5,
    "created_at": "2024-05-21T14:07:28Z",
    "updated_at": "2024-05-23T22:21:31Z",
    "closed_at": "2024-05-23T19:33:49Z",
    "draft": false,
    "body": "implement and close #8333",
    "merged_at": "2024-05-23T19:33:48Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/8259",
    "id": 2295939099,
    "number": 8259,
    "title": "fix(make): use the default rust dir for build/build-op",
    "state": "closed",
    "locked": false,
    "comments": 4,
    "created_at": "2024-05-14T16:47:32Z",
    "updated_at": "2024-05-19T00:42:06Z",
    "closed_at": "2024-05-18T16:14:00Z",
    "draft": false,
    "body": "Currently, we use `cargo build --target $(shell rustc -Vv | grep host | cut -d ' ' -f2)` to run the `make build` process, this will put the result into the directory as below:\r\n\r\n```\r\ntarget/aarch64-apple-darwin/release/reth # for macOS\r\ntarget/x86_64-unknown-linux-gnu/release/reth # for Linux\r\n```\r\n\r\nThis is inconvenience to run reth command(eg: `./target/aarch64-apple-darwin/release/reth node --dev`), so propose to use the default rust target directory(target/{release,debug}) for the build process.",
    "merged_at": "2024-05-18T16:14:00Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/8249",
    "id": 2294910411,
    "number": 8249,
    "title": "feat: move crate cli/runner to cli-runner",
    "state": "closed",
    "locked": false,
    "comments": 6,
    "created_at": "2024-05-14T09:22:20Z",
    "updated_at": "2024-05-14T16:23:09Z",
    "closed_at": "2024-05-14T12:40:28Z",
    "draft": false,
    "body": null,
    "merged_at": null,
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/8246",
    "id": 2294727357,
    "number": 8246,
    "title": "docs(network): update command instruction for the --trusted-only",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-05-14T08:07:51Z",
    "updated_at": "2024-05-14T14:11:12Z",
    "closed_at": "2024-05-14T12:52:52Z",
    "draft": false,
    "body": "1. update the instructions for `--trusted-only` \r\n2. use `bool.then_some` to simply the single bool branch\r\n3. fix the opposite comment of `no_persist_peers`",
    "merged_at": "2024-05-14T12:52:52Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/8242",
    "id": 2294580321,
    "number": 8242,
    "title": "docs(book): trim any white space at the line right ending",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-05-14T06:51:55Z",
    "updated_at": "2024-05-21T16:47:31Z",
    "closed_at": "2024-05-21T16:47:30Z",
    "draft": false,
    "body": "BTW, should we add `make update-book-cli` in the github workflows, so anyone updated the cli, the book will be updated simultaneously",
    "merged_at": "2024-05-21T16:47:30Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/SunWeb3Sec/DeFiHackLabs/pull/640",
    "id": 2266773861,
    "number": 640,
    "title": "feat: re-add fortress loans",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2024-04-27T03:17:58Z",
    "updated_at": "2024-04-28T12:59:11Z",
    "closed_at": "2024-04-27T12:49:01Z",
    "draft": false,
    "body": "close #631 \r\n\r\nnow the poc can run successfully:\r\n\r\n```bash\r\nRan 1 test for src/test/2022-05/FortressLoans.exp.sol:Hacker\r\n[PASS] testExploit() (gas: 13163059)\r\nLogs:\r\n  This reproduce shows how attacker exploit Fortress Loan, cause ~3,000,000 US$ lost\r\n  [Start] Attacker Wallet USDT Balance: 0.000000000000000000\r\n  [Pass] Attacker created [ProposalCreater] contract: 0x0dB3B68c482b04c49cD64728AD5D6d9a7B8E43e6\r\n  [Pass] Attacker created Proposal Id 11\r\n  [Pass] Unknown malicious voter supported Proposal 11\r\n  [Pass] Attacker supported Proposal 11\r\n  [Pass] Attacker queued Proposal 11\r\n  [Pass] Attacker created [AttackContract] contract: 0xcD337b920678cF35143322Ab31ab8977C3463a45\r\n  [Pass] Attacker send 3.0203 MahaDAO to [AttackContract] contract\r\n  [Pass] Attacker send 100 FTS to [AttackContract] contract\r\n        [info] Executed Proposal Id 11\r\n        [info] Chain.submit() Success\r\n        [info] FortressPriceOracle.getUnderlyingPrice(FToken(fFTS)) Success\r\n        [info] PriceFeed.fetchPrice() Success\r\n        [info] Unitroller.enterMarkets(fFTS) Success\r\n        [info] fFTS.mint(FTS) Success\r\n        [info] 13 markets ERC-20 token borrow Success\r\n  [Pass] Attacker triggered the exploit\r\n        [Pass] Swap BNB->USDT, amountOut send to attacker\r\n        [Pass] Transfer all USDT balance to attacker\r\n  [Pass] Attacker successfully withdrew the profit\r\n  [Pass] Attacker destruct the Attack Contract\r\n  [End] Attacker Wallet USDT Balance: 3012459.836081971291532509\r\n\r\nSuite result: ok. 1 passed; 0 failed; 0 skipped; finished in 12.39s (9.22s CPU time)\r\n\r\nRan 2 test suites in 12.52s (14.05s CPU time): 2 tests passed, 0 failed, 0 skipped (2 total tests)\r\n```",
    "merged_at": "2024-04-27T12:49:01Z",
    "repo": "DeFiHackLabs"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/7840",
    "id": 2261382037,
    "number": 7840,
    "title": "chore: rename BlockChain to Blockchain",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-04-24T14:01:09Z",
    "updated_at": "2024-04-25T14:50:56Z",
    "closed_at": "2024-04-25T14:09:20Z",
    "draft": false,
    "body": "I noticed in the code that sometimes it uses `Blockchain` and sometimes `BlockChain`. Here are the statistics I gathered:\r\n\r\n```bash\r\n$ rg Blockchain -c\r\n\r\nexamples/rpc-db/src/main.rs:3\r\ntesting/ef-tests/src/cases/blockchain_test.rs:11\r\ntesting/ef-tests/src/models.rs:1\r\ntesting/ef-tests/src/suite.rs:2\r\netc/grafana/dashboards/overview.json:2\r\ntesting/ef-tests/tests/tests.rs:2\r\ncrates/interfaces/src/blockchain_tree/mod.rs:11\r\ncrates/interfaces/src/blockchain_tree/error.rs:18\r\nbin/reth/src/commands/debug_cmd/replay_engine.rs:5\r\nbin/reth/src/commands/debug_cmd/build_block.rs:5\r\ncrates/primitives/src/proofs.rs:2\r\ncrates/interfaces/src/lib.rs:1\r\ncrates/primitives/src/header.rs:3\r\ncrates/interfaces/src/error.rs:4\r\ncrates/blockchain-tree/src/noop.rs:11\r\ncrates/blockchain-tree/src/block_indices.rs:1\r\ncrates/blockchain-tree/src/config.rs:4\r\ncrates/blockchain-tree/src/blockchain_tree.rs:37\r\ncrates/blockchain-tree/src/externals.rs:1\r\ncrates/blockchain-tree/src/state.rs:3\r\ncrates/blockchain-tree/src/chain.rs:3\r\ncrates/blockchain-tree/src/lib.rs:4\r\ncrates/blockchain-tree/src/shareable.rs:15\r\ncrates/consensus/beacon/src/engine/mod.rs:12\r\ncrates/consensus/beacon/src/engine/test_utils.rs:7\r\ncrates/node-builder/src/builder.rs:8\r\ncrates/net/downloaders/src/bodies/bodies.rs:1\r\ncrates/e2e-test-utils/src/lib.rs:2\r\ncrates/storage/provider/src/chain.rs:1\r\ncrates/storage/provider/src/providers/mod.rs:29\r\ncrates/storage/provider/src/traits/state.rs:3\r\ncrates/storage/provider/src/traits/tree_viewer.rs:9\r\ncrates/storage/provider/src/traits/mod.rs:1\r\n```\r\n\r\n```bash\r\n$ rg BlockChain -c\r\ncrates/consensus/beacon/src/engine/mod.rs:2\r\ncrates/blockchain-tree/src/blockchain_tree.rs:15\r\ncrates/blockchain-tree/src/state.rs:9\r\ncrates/blockchain-tree/src/block_indices.rs:10\r\ncrates/storage/provider/src/test_utils/blocks.rs:3\r\n```\r\n\r\nAnd I think using `Blockchain` consistently would be more unified. That's why I submitted this PR.",
    "merged_at": "2024-04-25T14:09:20Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/7806",
    "id": 2257869680,
    "number": 7806,
    "title": "fix(args/txpool): duplicate arg of txpool.max-account-slots",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-04-23T03:35:06Z",
    "updated_at": "2024-04-23T13:05:58Z",
    "closed_at": "2024-04-23T11:30:51Z",
    "draft": false,
    "body": "incomplete in #7656 ",
    "merged_at": "2024-04-23T11:30:51Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/7805",
    "id": 2257858939,
    "number": 7805,
    "title": "chore(bin/stage): add explicit doc of the use of to-block and hashing stage",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-04-23T03:21:52Z",
    "updated_at": "2024-04-23T13:22:39Z",
    "closed_at": "2024-04-23T12:39:29Z",
    "draft": false,
    "body": "1. Add explicit doc of the usage of the `to-block/num-blocks` for `reth stage unwind` command. \r\n2. Check target block in unwind stage\r\n3. Add the relationship of the xxx-hashing and hashing stage.",
    "merged_at": "2024-04-23T12:39:29Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/7775",
    "id": 2254575536,
    "number": 7775,
    "title": "chore(github): use codespell to inspect and correct spelling issues",
    "state": "closed",
    "locked": false,
    "comments": 3,
    "created_at": "2024-04-20T14:24:53Z",
    "updated_at": "2024-04-23T23:36:15Z",
    "closed_at": "2024-04-23T21:45:42Z",
    "draft": false,
    "body": "use https://github.com/codespell-project/codespell to lint the spelling issues. ",
    "merged_at": "2024-04-23T21:45:42Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/7705",
    "id": 2248446644,
    "number": 7705,
    "title": "chore: convert tab to space and trim trailing space",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-04-17T14:30:14Z",
    "updated_at": "2024-04-17T22:49:38Z",
    "closed_at": "2024-04-17T14:49:33Z",
    "draft": false,
    "body": null,
    "merged_at": "2024-04-17T14:49:33Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/SunWeb3Sec/DeFiHackLabs/pull/623",
    "id": 2245885088,
    "number": 623,
    "title": "feat: add Balancer 2020 Exp",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-04-16T12:10:27Z",
    "updated_at": "2024-04-16T15:01:11Z",
    "closed_at": "2024-04-16T15:01:11Z",
    "draft": false,
    "body": "explolit result as below:\r\n\r\n\r\n```sh\r\nforge test --contracts ./src/test/Balancer_20200628_exp.sol -vv\r\n```\r\n\r\n```\r\nRan 1 test for src/test/Balancer_20200628_exp.sol:BalancerExp\r\n[PASS] testExploit() (gas: 1816495)\r\nLogs:\r\n  [Before Attack] Attacker WETH Balance : : 0.000000000000000000\r\n  [Before Attack] Attacker STA Balance : : 0.000000000000000000\r\n  [After Attack] Attacker WETH Balance : : 455.866402218883570637\r\n  [After Attack] Attacker STA Balance : : 2342412.696483126504723721\r\n\r\n```",
    "merged_at": "2024-04-16T15:01:11Z",
    "repo": "DeFiHackLabs"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/7656",
    "id": 2244073147,
    "number": 7656,
    "title": "chore(node): unify the format of command args",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-04-15T16:11:39Z",
    "updated_at": "2024-04-17T00:27:53Z",
    "closed_at": "2024-04-16T19:48:00Z",
    "draft": false,
    "body": "Currently, we have `xx.yy-zz` and `xx.yy_zz` command arg format, eg:\r\n\r\n```bash\r\nreth node --help | rg txpool\r\n\r\n      --txpool.pending_max_count <PENDING_MAX_COUNT>\r\n      --txpool.pending_max_size <PENDING_MAX_SIZE>\r\n      --txpool.basefee_max_count <BASEFEE_MAX_COUNT>\r\n      --txpool.basefee_max_size <BASEFEE_MAX_SIZE>\r\n      --txpool.queued_max_count <QUEUED_MAX_COUNT>\r\n      --txpool.queued_max_size <QUEUED_MAX_SIZE>\r\n      --txpool.max_account_slots <MAX_ACCOUNT_SLOTS>\r\n      --txpool.pricebump <PRICE_BUMP>\r\n      --txpool.max_tx_input_bytes <MAX_TX_INPUT_BYTES>\r\n      --txpool.max_cached_entries <MAX_CACHED_ENTRIES>\r\n      --txpool.nolocals\r\n      --txpool.locals <LOCALS>\r\n      --txpool.no-local-transactions-propagation\r\n```\r\n\r\n\r\nThis looks a bit inconsistent. I would like to change the default command-line argument format to `xx.yy-zz` and use an `alias` to keep it consistent with the old parameters.",
    "merged_at": "2024-04-16T19:48:00Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/SunWeb3Sec/DeFiHackLabs/pull/620",
    "id": 2243597377,
    "number": 620,
    "title": "feat: add 20200419 Lendf.Me reentry exp",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-04-15T12:48:04Z",
    "updated_at": "2024-04-15T14:57:56Z",
    "closed_at": "2024-04-15T14:22:01Z",
    "draft": false,
    "body": "The result of forge run as below:\r\n\r\n\r\n```bash\r\nforge test --contracts ./src/test/LendfMe_exp.sol -vv\r\n```\r\n\r\n```\r\nRan 1 test for src/test/LendfMe_exp.sol:LendfMeExploit\r\n[PASS] testExploit() (gas: 619026)\r\nLogs:\r\n  [Before Attack]Victim imBTC Balance : : 29134710218\r\n  [Before Attack]Attacker imBTC Balance : : 21595\r\n  --------------------------------------------------------------\r\n  [After Attack]Victim imBTC Balance : : 29134688624\r\n  [After Attack]Attacker imBTC Balance : : 43189\r\n\r\nSuite result: ok. 1 passed; 0 failed; 0 skipped; finished in 1.77s (5.09ms CPU time)\r\n\r\nRan 1 test for script/Exploit-template_new.sol:ExploitScript\r\n[PASS] testExploit() (gas: 2629)\r\nLogs:\r\n   Attacker ETH Balance After exploit: 79228162514.264337593543950335\r\n\r\nSuite result: ok. 1 passed; 0 failed; 0 skipped; finished in 1.78s (45.38\u00b5s CPU time)\r\n\r\n\r\n```",
    "merged_at": "2024-04-15T14:22:01Z",
    "repo": "DeFiHackLabs"
  },
  {
    "html_url": "https://github.com/alloy-rs/chains/pull/58",
    "id": 2242078572,
    "number": 58,
    "title": "feat(chain): add method optimism_mainnet",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-04-14T10:04:52Z",
    "updated_at": "2024-04-14T14:13:15Z",
    "closed_at": "2024-04-14T12:40:42Z",
    "draft": false,
    "body": "1. add an function to return optimism sepolia;\r\n2. adjust the order of define the mainnet,testnet chains",
    "merged_at": "2024-04-14T12:40:42Z",
    "repo": "chains"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/7634",
    "id": 2242069049,
    "number": 7634,
    "title": "chore(discv5): add comments for op bootnodes",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-04-14T09:39:26Z",
    "updated_at": "2024-04-14T14:13:25Z",
    "closed_at": "2024-04-14T13:24:45Z",
    "draft": false,
    "body": null,
    "merged_at": "2024-04-14T13:24:45Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/erigontech/erigon/pull/9865",
    "id": 2227600300,
    "number": 9865,
    "title": "chore(config): json marshal chainName",
    "state": "closed",
    "locked": false,
    "comments": 2,
    "created_at": "2024-04-05T10:02:37Z",
    "updated_at": "2024-04-26T06:23:21Z",
    "closed_at": "2024-04-26T06:17:50Z",
    "draft": false,
    "body": "As the other fields are json marshaled into lowerUpper case, we should use the same style. ",
    "merged_at": "2024-04-26T06:17:50Z",
    "repo": "erigon"
  },
  {
    "html_url": "https://github.com/erigontech/erigon/pull/9859",
    "id": 2224374541,
    "number": 9859,
    "title": "txpool: check blob fields only if txn is Blob Tx",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2024-04-04T03:32:28Z",
    "updated_at": "2024-04-05T09:34:10Z",
    "closed_at": "2024-04-05T08:26:48Z",
    "draft": false,
    "body": "Fix https://github.com/ledgerwatch/erigon/issues/9834\r\n\r\nLet's check and validate blob configurations only if the txn is BlobTx",
    "merged_at": "2024-04-05T08:26:48Z",
    "repo": "erigon"
  },
  {
    "html_url": "https://github.com/SunWeb3Sec/DeFiHackLabs/pull/604",
    "id": 2220400605,
    "number": 604,
    "title": "fix: use Test instead of DSTest",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-04-02T12:30:39Z",
    "updated_at": "2024-04-02T12:35:38Z",
    "closed_at": "2024-04-02T12:34:25Z",
    "draft": false,
    "body": "As the package `ds-test` was removed in https://github.com/foundry-rs/forge-std/pull/503, so the `DSTest` is unavailable anymore, use `Test` instead.",
    "merged_at": "2024-04-02T12:34:25Z",
    "repo": "DeFiHackLabs"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/29428",
    "id": 2218596115,
    "number": 29428,
    "title": "website: add trace call config ",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2024-04-01T16:18:01Z",
    "updated_at": "2024-04-05T13:22:22Z",
    "closed_at": "2024-04-05T13:22:19Z",
    "draft": false,
    "body": "Raised in https://github.com/ethereum/go-ethereum/pull/29423#issuecomment-2029626588, in this PR, I add the following items:\r\n\r\n1. add `tracerConfig` for prestate,opcode tracer;\r\n2. add `StateOverrides`, `BlockOverrides` fields;\r\n3. add `TracerCallConfig` for `debug_traceCall`\r\n\r\n\r\n@s1na could you please take a look",
    "merged_at": "2024-04-05T13:22:19Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/29376",
    "id": 2212259461,
    "number": 29376,
    "title": "eth/tracers: set blob base fee for callTracer,flatCallTracer",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-03-28T03:09:53Z",
    "updated_at": "2024-04-01T12:53:56Z",
    "closed_at": "2024-04-01T12:53:56Z",
    "draft": false,
    "body": "As we add BlobBaseFee for prestateTracer in #29168, forgot to add it for the other tracers, so move the `vm.BlockContext` constructor to util.go, reuse it.",
    "merged_at": "2024-04-01T12:53:56Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/eth-brownie/brownie/pull/1756",
    "id": 2203671422,
    "number": 1756,
    "title": "feat(rpc/anvil): add  more anvil command line args",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-03-23T03:36:15Z",
    "updated_at": "2024-05-04T00:37:07Z",
    "closed_at": "2024-05-04T00:37:07Z",
    "draft": false,
    "body": "### What I did\r\n\r\nRelated issue: https://github.com/eth-brownie/brownie/issues/1686\r\n\r\n### How I did it\r\nAdd more arguments from the output of `anvil --help`\r\n\r\n### How to verify it\r\n\r\n### Checklist\r\n\r\n- [ ] I have confirmed that my PR passes all linting checks\r\n- [ ] I have included test cases\r\n- [ ] I have updated the documentation\r\n- [ ] I have added an entry to the changelog\r\n",
    "merged_at": "2024-05-04T00:37:07Z",
    "repo": "brownie"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/7234",
    "id": 2195719806,
    "number": 7234,
    "title": "chore(stages/metrics): use Counter instead of Gauge for mgas_processed",
    "state": "closed",
    "locked": false,
    "comments": 3,
    "created_at": "2024-03-19T18:39:03Z",
    "updated_at": "2024-03-24T19:46:56Z",
    "closed_at": "2024-03-24T19:46:56Z",
    "draft": false,
    "body": "From Prometheus's metric types of Gauge https://prometheus.io/docs/concepts/metric_types\r\n\r\n> A counter is a cumulative metric that represents a single [monotonically increasing counter](https://en.wikipedia.org/wiki/Monotonic_function) whose value can only increase or be reset to zero on restart. For example, you can use a counter to represent the number of requests served, tasks completed, or errors.\r\n> A gauge is a metric that represents a single numerical value that can arbitrarily go up and down.\r\n> Gauges are typically used for measured values like temperatures or current memory usage, but also \"counts\" that can go up and down, like the number of concurrent requests.\r\n\r\nin our usecase, `self.sync_metrics.execution_stage.mgas_processed_total` is the cumulative of mgas processed, which is increased by each block:\r\n https://github.com/paradigmxyz/reth/blob/b20fb3446f96e42d52ae32258f4058bf7841e366/crates/stages/src/stages/execution.rs#L187-L191\r\n\r\n\r\nso we should prefer to use Counter instead.\r\n",
    "merged_at": "2024-03-24T19:46:56Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/7194",
    "id": 2192302129,
    "number": 7194,
    "title": "chore(net/banlist): unify the name of peer id/ip",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2024-03-18T13:59:20Z",
    "updated_at": "2024-03-19T01:48:38Z",
    "closed_at": "2024-03-18T17:43:21Z",
    "draft": false,
    "body": "As the variable `peer` in some contexts stands for `PeerId https://github.com/paradigmxyz/reth/blob/1147f0fd79c297bf0aa46818137cc0e20f5da866/crates/rpc/rpc-types/src/peer.rs#L4\r\n\r\nbut in other contexts stands for `Peer` \r\nhttps://github.com/paradigmxyz/reth/blob/1147f0fd79c297bf0aa46818137cc0e20f5da866/crates/net/network/src/peers/manager.rs#L986-L1003\r\n\r\nSo I suggest using a unified `peer_ids` to replace all `PeerId`, and the length of this variable is exactly the same as `peer_ips`, which looks clearer :)",
    "merged_at": null,
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/7190",
    "id": 2191154818,
    "number": 7190,
    "title": "feat(trie): hash post state in parallel",
    "state": "closed",
    "locked": false,
    "comments": 12,
    "created_at": "2024-03-18T03:33:42Z",
    "updated_at": "2024-06-04T01:27:46Z",
    "closed_at": "2024-06-03T17:02:25Z",
    "draft": false,
    "body": "implement and close https://github.com/paradigmxyz/reth/issues/7183",
    "merged_at": "2024-06-03T17:02:25Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/7185",
    "id": 2190601078,
    "number": 7185,
    "title": "chore(node-builder): display the hardfork info in new line",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2024-03-17T10:53:17Z",
    "updated_at": "2024-03-18T10:56:35Z",
    "closed_at": "2024-03-18T10:46:30Z",
    "draft": false,
    "body": "Currently the hardfork info looks like below:\r\n\r\n<img width=\"622\" alt=\"image\" src=\"https://github.com/paradigmxyz/reth/assets/3627395/036b45f6-113e-45b8-971f-2b372a011c5d\">\r\n\r\nwe can pretty print with `Pre-merge hard forks` as a newline table title:\r\n\r\n<img width=\"506\" alt=\"image\" src=\"https://github.com/paradigmxyz/reth/assets/3627395/e8f44023-d1bf-4773-8c7e-fb7c513a73a2\">\r\n",
    "merged_at": "2024-03-18T10:46:29Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/7184",
    "id": 2190597655,
    "number": 7184,
    "title": "chore(hardfork): add hardfork upgrade url",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-03-17T10:44:27Z",
    "updated_at": "2024-03-17T12:36:02Z",
    "closed_at": "2024-03-17T11:56:13Z",
    "draft": false,
    "body": "Add a URL to the hardfork upgrade instructions, better for the developer to follow the details ",
    "merged_at": "2024-03-17T11:56:13Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/7177",
    "id": 2190102592,
    "number": 7177,
    "title": "feat(net/manager): apply trust-nodes-only for incoming nodes",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2024-03-16T15:33:16Z",
    "updated_at": "2024-03-18T11:02:49Z",
    "closed_at": "2024-03-18T11:02:49Z",
    "draft": false,
    "body": "implement and close https://github.com/paradigmxyz/reth/issues/7036",
    "merged_at": "2024-03-18T11:02:49Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/7173",
    "id": 2189656556,
    "number": 7173,
    "title": "chore(grafana): fetch each query with instance as filter",
    "state": "closed",
    "locked": false,
    "comments": 2,
    "created_at": "2024-03-16T00:30:15Z",
    "updated_at": "2024-03-18T22:12:41Z",
    "closed_at": "2024-03-17T22:20:12Z",
    "draft": false,
    "body": "I'm running multiple instances, and all the instances' metrics are stored in one Prometheus, some dashboard results are not filtered with the instance, we should always filter with the instance for the extracted result.",
    "merged_at": "2024-03-17T22:20:12Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/7159",
    "id": 2188817497,
    "number": 7159,
    "title": "bin/reth/db: use macro to dry",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2024-03-15T15:16:38Z",
    "updated_at": "2024-03-16T03:58:38Z",
    "closed_at": "2024-03-15T23:53:00Z",
    "draft": false,
    "body": "inspired by https://github.com/paradigmxyz/reth/pull/6454#issuecomment-1999116423, seems we can use a macro to reduce the similar code duplicate ",
    "merged_at": "2024-03-15T23:53:00Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/ethereum-optimism/optimism/pull/9869",
    "id": 2187685899,
    "number": 9869,
    "title": "op-node: fetch l1 block with retry",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2024-03-15T04:13:35Z",
    "updated_at": "2024-03-25T17:37:40Z",
    "closed_at": "2024-03-25T17:37:39Z",
    "draft": false,
    "body": "<!-- Contributions welcome! See https://github.com/ethereum-optimism/.github/blob/master/CONTRIBUTING.md -->\r\n\r\n**Description**\r\n\r\nfetch l1block with retry, in case of a HTTP error\r\n\r\n\r\n**Metadata**\r\n\r\n- Fixes https://github.com/ethereum-optimism/optimism/issues/9347",
    "merged_at": "2024-03-25T17:37:39Z",
    "repo": "optimism"
  },
  {
    "html_url": "https://github.com/ethereum-optimism/optimism/pull/9868",
    "id": 2187648570,
    "number": 9868,
    "title": "op-node: normalized the error msg of L1/L2 block",
    "state": "closed",
    "locked": false,
    "comments": 2,
    "created_at": "2024-03-15T03:29:30Z",
    "updated_at": "2024-03-15T03:37:04Z",
    "closed_at": "2024-03-15T03:31:42Z",
    "draft": false,
    "body": "<!-- Contributions welcome! See https://github.com/ethereum-optimism/.github/blob/master/CONTRIBUTING.md -->\r\n\r\n**Description**\r\n\r\n- normalize the error msg, currently, we have `finalized L2 block`, `L2 head block`, normalized to `xxx L2 block`\r\n- normalize `L1 block` to `L1Block`\r\n",
    "merged_at": null,
    "repo": "optimism"
  },
  {
    "html_url": "https://github.com/ethereum-optimism/optimism/pull/9857",
    "id": 2185190524,
    "number": 9857,
    "title": "op-node: rm unnecessary type convert",
    "state": "closed",
    "locked": false,
    "comments": 2,
    "created_at": "2024-03-14T01:17:50Z",
    "updated_at": "2024-03-14T01:57:56Z",
    "closed_at": "2024-03-14T01:37:03Z",
    "draft": false,
    "body": "<!-- Contributions welcome! See https://github.com/ethereum-optimism/.github/blob/master/CONTRIBUTING.md -->\r\n\r\n**Description**\r\n\r\nRemove unnecessary type conversions.\r\n\r\n**Tests**\r\n\r\nPlease describe any tests you've added. If you've added no tests, or left important behavior untested, please explain why not.\r\n\r\n**Additional context**\r\n\r\nAdd any other context about the problem you're solving.\r\n\r\n**Metadata**\r\n\r\n- Fixes #[Link to Issue]\r\n",
    "merged_at": null,
    "repo": "optimism"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/7125",
    "id": 2182945872,
    "number": 7125,
    "title": "chore(make): run doctest in `make test`",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-03-13T01:30:35Z",
    "updated_at": "2024-03-13T11:37:18Z",
    "closed_at": "2024-03-13T08:48:32Z",
    "draft": false,
    "body": "allow users to run doctest with makefile, so they can use `make pr` to verify if their commits are valid after changing the rustdocs, cc https://github.com/paradigmxyz/reth/pull/7120",
    "merged_at": "2024-03-13T08:48:32Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/7120",
    "id": 2182536425,
    "number": 7120,
    "title": "docs(node-core): add document of build_blockchain_tree",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-03-12T19:38:51Z",
    "updated_at": "2024-03-15T21:09:18Z",
    "closed_at": "2024-03-15T21:09:18Z",
    "draft": false,
    "body": null,
    "merged_at": "2024-03-15T21:09:17Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/7095",
    "id": 2178760320,
    "number": 7095,
    "title": "cmd/debug: use inline cfg to reduce optimism/ethereum code duplicate",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-03-11T10:21:20Z",
    "updated_at": "2024-03-11T23:25:55Z",
    "closed_at": "2024-03-11T14:07:14Z",
    "draft": false,
    "body": null,
    "merged_at": "2024-03-11T14:07:14Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/7094",
    "id": 2178754918,
    "number": 7094,
    "title": "reth/db: make code more readable",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-03-11T10:18:40Z",
    "updated_at": "2024-03-11T23:26:03Z",
    "closed_at": "2024-03-11T13:57:37Z",
    "draft": false,
    "body": "make the code more readable:\r\n\r\n1. use variable `db_log_level` to avoid duplicated;\r\n2. make `freelist_size` calculate more understandable;\r\n3. return error of the segment info",
    "merged_at": "2024-03-11T13:57:37Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/7093",
    "id": 2178705562,
    "number": 7093,
    "title": "reth/dump: setup db assert from,to block of wrong msg",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-03-11T09:54:44Z",
    "updated_at": "2024-04-12T01:48:23Z",
    "closed_at": "2024-04-12T01:48:23Z",
    "draft": false,
    "body": "`from` can be equal to `to`",
    "merged_at": null,
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/7045",
    "id": 2175418013,
    "number": 7045,
    "title": "chore: make clippy happy",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-03-08T07:10:40Z",
    "updated_at": "2024-03-08T13:12:35Z",
    "closed_at": "2024-03-08T13:12:35Z",
    "draft": false,
    "body": "```\r\nerror: assigning the result of `Clone::clone()` may be inefficient\r\n   --> crates/primitives/src/revm/env.rs:288:13\r\n    |\r\n288 |             tx_env.blob_hashes = tx.blob_versioned_hashes.clone();\r\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `tx_env.blob_hashes.clone_from(&tx.blob_versioned_hashes)`\r\n    |\r\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\r\n    = note: `-D clippy::assigning-clones` implied by `-D warnings`\r\n    = help: to override `-D warnings` add `#[allow(clippy::assigning_clones)]`\r\n\r\nerror: could not compile `reth-primitives` (lib) due to 1 previous error\r\nwarning: build failed, waiting for other jobs to finish...\r\nerror: could not compile `reth-primitives` (lib test) due to 1 previous error\r\nError: Process completed with exit code 101.\r\n```",
    "merged_at": "2024-03-08T13:12:35Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/7033",
    "id": 2173784105,
    "number": 7033,
    "title": "primitives/chain: dev chain support cancun upgrade",
    "state": "closed",
    "locked": false,
    "comments": 2,
    "created_at": "2024-03-07T12:45:11Z",
    "updated_at": "2024-03-11T13:31:36Z",
    "closed_at": "2024-03-11T13:21:26Z",
    "draft": false,
    "body": "Run `node --dev` support Cancun upgrade ",
    "merged_at": "2024-03-11T13:21:26Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/7025",
    "id": 2172903645,
    "number": 7025,
    "title": "grafana/overview: add RPC QPS dashboard",
    "state": "closed",
    "locked": false,
    "comments": 2,
    "created_at": "2024-03-07T04:11:35Z",
    "updated_at": "2024-03-09T19:46:04Z",
    "closed_at": "2024-03-09T18:40:11Z",
    "draft": false,
    "body": "Added a new dashboard to represent the RPC QPS\r\n\r\n<img width=\"1919\" alt=\"image\" src=\"https://github.com/paradigmxyz/reth/assets/3627395/48815cc1-80c2-43c9-adb6-09603ddfdd01\">\r\n",
    "merged_at": "2024-03-09T18:40:10Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/29168",
    "id": 2168684636,
    "number": 29168,
    "title": "eth/tracers: prestate tracer add blob fee",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-03-05T09:12:46Z",
    "updated_at": "2024-03-08T08:10:04Z",
    "closed_at": "2024-03-06T12:36:12Z",
    "draft": false,
    "body": "Currently, the prestateTracer does not include the blob gas used for the sender's address. We should make sure to add it back and consider it in the calculations.",
    "merged_at": "2024-03-06T12:36:12Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/29166",
    "id": 2168301499,
    "number": 29166,
    "title": "internal/jsre: format blob fields from hexdecimal to int ",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-03-05T04:57:57Z",
    "updated_at": "2024-03-06T01:11:26Z",
    "closed_at": "2024-03-05T13:37:26Z",
    "draft": false,
    "body": "In the geth's console, the output of `blob` related fields not formated:\r\n\r\n\r\n<img width=\"775\" alt=\"image\" src=\"https://github.com/ethereum/go-ethereum/assets/3627395/c1130701-5a91-44c8-8587-d5760ccb8015\">\r\n",
    "merged_at": "2024-03-05T13:37:26Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/6953",
    "id": 2165773262,
    "number": 6953,
    "title": "cargo: missing once_cell",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-03-04T02:20:22Z",
    "updated_at": "2024-03-04T12:56:07Z",
    "closed_at": "2024-03-04T11:15:14Z",
    "draft": false,
    "body": null,
    "merged_at": "2024-03-04T11:15:14Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/6952",
    "id": 2165754145,
    "number": 6952,
    "title": "txpool: track failed delete blobs in cleanup",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-03-04T01:58:25Z",
    "updated_at": "2024-03-05T01:57:18Z",
    "closed_at": "2024-03-04T18:41:24Z",
    "draft": false,
    "body": "As the blob files were deleted in async mode, and the `cleanup` will truly delete the under blob files, so we should track the `blobstore_failed_deletes` in `cleanup` instead of `delete_blob{s}`",
    "merged_at": "2024-03-04T18:41:24Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/6887",
    "id": 2161419423,
    "number": 6887,
    "title": "chore(primitives,storage): rm notused crates to speed up building",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-02-29T14:39:08Z",
    "updated_at": "2024-02-29T14:59:07Z",
    "closed_at": "2024-02-29T14:50:04Z",
    "draft": false,
    "body": "similar to #6882",
    "merged_at": null,
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/6886",
    "id": 2161411045,
    "number": 6886,
    "title": "chore(node,payload,txpool): rm notused crates to speed up building",
    "state": "closed",
    "locked": false,
    "comments": 5,
    "created_at": "2024-02-29T14:35:00Z",
    "updated_at": "2024-03-01T04:30:10Z",
    "closed_at": "2024-02-29T14:58:11Z",
    "draft": false,
    "body": "similar to #6882 ",
    "merged_at": null,
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/6885",
    "id": 2161405137,
    "number": 6885,
    "title": "chore(config,stages): rm not used crates to speed up building",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-02-29T14:32:04Z",
    "updated_at": "2024-02-29T14:58:41Z",
    "closed_at": "2024-02-29T14:50:33Z",
    "draft": false,
    "body": "similar to #6882",
    "merged_at": null,
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/6884",
    "id": 2161398690,
    "number": 6884,
    "title": "chore(net): rm notused crates to speed up building",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-02-29T14:29:05Z",
    "updated_at": "2024-02-29T14:58:37Z",
    "closed_at": "2024-02-29T14:51:12Z",
    "draft": false,
    "body": "similar to #6882",
    "merged_at": null,
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/6883",
    "id": 2161388315,
    "number": 6883,
    "title": "chore(consensus):  rm notused crates to speed up building ",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-02-29T14:24:11Z",
    "updated_at": "2024-02-29T14:58:34Z",
    "closed_at": "2024-02-29T14:51:59Z",
    "draft": false,
    "body": "similar to #6882",
    "merged_at": null,
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/6882",
    "id": 2161366430,
    "number": 6882,
    "title": "chore: remove unused dependencies to speed up building time",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2024-02-29T14:14:04Z",
    "updated_at": "2024-03-01T04:30:26Z",
    "closed_at": "2024-02-29T15:23:28Z",
    "draft": false,
    "body": "after rm the not used crates, the building time(`make build`) reduced from `4m 44s` to `3m 42s` in my local MacBook air m1\r\n\r\n\r\n```bash\r\n\r\n$ make build\r\n   Compiling reth-node-core v0.1.0-alpha.21\r\n   Compiling reth-node-builder v0.1.0-alpha.21\r\n   Compiling reth-node-ethereum v0.1.0-alpha.21\r\n   Compiling reth v0.1.0-alpha.21\r\n    Finished release [optimized] target(s) in 3m 42s\r\n```",
    "merged_at": "2024-02-29T15:23:28Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/6870",
    "id": 2160781256,
    "number": 6870,
    "title": "consensus/auto-seal: simiply the complete_header for op or non-op",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-02-29T09:18:15Z",
    "updated_at": "2024-02-29T10:54:57Z",
    "closed_at": "2024-02-29T10:41:22Z",
    "draft": false,
    "body": "we can merge the two functions into one by using `[cfg]` expression",
    "merged_at": "2024-02-29T10:41:22Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/6868",
    "id": 2160295152,
    "number": 6868,
    "title": "node: don't subscribe to consensus health events for dev node",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-02-29T03:47:01Z",
    "updated_at": "2024-02-29T13:31:00Z",
    "closed_at": "2024-02-29T10:59:32Z",
    "draft": false,
    "body": "I'm running a node with `--dev` locally, but happened to see the annoying `no updates` messages, eg:\r\n\r\n```\r\n2024-02-29T03:03:54.059470Z  WARN Beacon client online, but no consensus updates received for a while. Please fix your beacon client to follow the chain! period=530.582623334s\r\n2024-02-29T03:03:57.058854Z  INFO Status connected_peers=0 freelist=17 latest_block=2\r\n2024-02-29T03:04:22.058239Z  INFO Status connected_peers=0 freelist=17 latest_block=2\r\n2024-02-29T03:04:47.057463Z  INFO Status connected_peers=0 freelist=17 latest_block=2\r\n2024-02-29T03:08:32.046472Z  INFO Status connected_peers=0 freelist=17 latest_block=2\r\n...\r\n2024-02-29T03:08:54.047061Z  WARN Beacon client online, but no consensus updates received for a while. Please fix your beacon client to follow ...\r\n```\r\n\r\nAs the beacon client in `--dev` mode is a simulator, so we don't need to subscribe to the health events. ",
    "merged_at": "2024-02-29T10:59:32Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/6867",
    "id": 2160241278,
    "number": 6867,
    "title": "feat(storage, libmdbx): same code style in build.rs",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-02-29T02:42:52Z",
    "updated_at": "2024-02-29T13:22:07Z",
    "closed_at": "2024-02-29T12:04:57Z",
    "draft": false,
    "body": null,
    "merged_at": "2024-02-29T12:04:57Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/6866",
    "id": 2160238565,
    "number": 6866,
    "title": "chore(net): use smallvec only if debug_assertions configed",
    "state": "closed",
    "locked": false,
    "comments": 2,
    "created_at": "2024-02-29T02:39:36Z",
    "updated_at": "2024-02-29T03:18:56Z",
    "closed_at": "2024-02-29T03:03:45Z",
    "draft": false,
    "body": "`make build` happy without warning\r\n\r\n```\r\nwarning: unused imports: `SmallVec`, `smallvec`\r\n  --> crates/net/network/src/transactions/fetcher.rs:20:16\r\n   |\r\n20 | use smallvec::{smallvec, SmallVec};\r\n   |                ^^^^^^^^  ^^^^^^^^\r\n   |\r\n   = note: `#[warn(unused_imports)]` on by default\r\n\r\nwarning: unused variable: `peer_id`\r\n    --> crates/net/network/src/transactions/fetcher.rs:1114:9\r\n     |\r\n1114 |         peer_id: &PeerId,\r\n     |         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_peer_id`\r\n     |\r\n     = note: `#[warn(unused_variables)]` on by default\r\n```",
    "merged_at": "2024-02-29T03:03:45Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/6819",
    "id": 2156082212,
    "number": 6819,
    "title": "feat(node): dev node print genesis account",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-02-27T09:21:21Z",
    "updated_at": "2024-02-27T12:18:54Z",
    "closed_at": "2024-02-27T12:18:54Z",
    "draft": false,
    "body": "similar to anvil, print genesis accounts when launch node with `--dev`:\r\n\r\n\r\n```\r\n2024-02-27T19:01:10.212909Z  INFO Allocated Genesis Account: 00. 0xdF3e18d64BC6A983f673Ab319CCaE4f1a57C7097 (1000000.000000000000000000 ETH)\r\n2024-02-27T19:01:10.212912Z  INFO Allocated Genesis Account: 01. 0x90F79bf6EB2c4f870365E785982E1f101E93b906 (1000000.000000000000000000 ETH)\r\n2024-02-27T19:01:10.212915Z  INFO Allocated Genesis Account: 02. 0xcd3B766CCDd6AE721141F452C550Ca635964ce71 (1000000.000000000000000000 ETH)\r\n2024-02-27T19:01:10.212917Z  INFO Allocated Genesis Account: 03. 0x8626f6940E2eb28930eFb4CeF49B2d1F2C9C1199 (1000000.000000000000000000 ETH)\r\n2024-02-27T19:01:10.212919Z  INFO Allocated Genesis Account: 04. 0xbDA5747bFD65F08deb54cb465eB87D40e51B197E (1000000.000000000000000000 ETH)\r\n2024-02-27T19:01:10.212921Z  INFO Allocated Genesis Account: 05. 0x70997970C51812dc3A010C7d01b50e0d17dc79C8 (1000000.000000000000000000 ETH)\r\n2024-02-27T19:01:10.212938Z  INFO Allocated Genesis Account: 06. 0x1CBd3b2770909D4e10f157cABC84C7264073C9Ec (1000000.000000000000000000 ETH)\r\n2024-02-27T19:01:10.212942Z  INFO Allocated Genesis Account: 07. 0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC (1000000.000000000000000000 ETH)\r\n2024-02-27T19:01:10.212944Z  INFO Allocated Genesis Account: 08. 0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266 (1000000.000000000000000000 ETH)\r\n2024-02-27T19:01:10.212946Z  INFO Allocated Genesis Account: 09. 0x71bE63f3384f5fb98995898A86B02Fb2426c5788 (1000000.000000000000000000 ETH)\r\n2024-02-27T19:01:10.212949Z  INFO Allocated Genesis Account: 10. 0x14dC79964da2C08b23698B3D3cc7Ca32193d9955 (1000000.000000000000000000 ETH)\r\n2024-02-27T19:01:10.212951Z  INFO Allocated Genesis Account: 11. 0xa0Ee7A142d267C1f36714E4a8F75612F20a79720 (1000000.000000000000000000 ETH)\r\n2024-02-27T19:01:10.212953Z  INFO Allocated Genesis Account: 12. 0xFABB0ac9d68B0B445fB7357272Ff202C5651694a (1000000.000000000000000000 ETH)\r\n2024-02-27T19:01:10.213015Z  INFO Allocated Genesis Account: 13. 0xBcd4042DE499D14e55001CcbB24a551F3b954096 (1000000.000000000000000000 ETH)\r\n2024-02-27T19:01:10.213027Z  INFO Allocated Genesis Account: 14. 0x2546BcD3c84621e976D8185a91A922aE77ECEc30 (1000000.000000000000000000 ETH)\r\n2024-02-27T19:01:10.213033Z  INFO Allocated Genesis Account: 15. 0x15d34AAf54267DB7D7c367839AAf71A00a2C6A65 (1000000.000000000000000000 ETH)\r\n2024-02-27T19:01:10.213039Z  INFO Allocated Genesis Account: 16. 0xdD2FD4581271e230360230F9337D5c0430Bf44C0 (1000000.000000000000000000 ETH)\r\n2024-02-27T19:01:10.213045Z  INFO Allocated Genesis Account: 17. 0x976EA74026E726554dB657fA54763abd0C3a0aa9 (1000000.000000000000000000 ETH)\r\n2024-02-27T19:01:10.213051Z  INFO Allocated Genesis Account: 18. 0x23618e81E3f5cdF7f54C3d65f7FBc0aBf5B21E8f (1000000.000000000000000000 ETH)\r\n2024-02-27T19:01:10.213056Z  INFO Allocated Genesis Account: 19. 0x9965507D1a55bcC2695C58ba16FB37d819B0A4dc (1000000.000000000000000000 ETH)\r\n```",
    "merged_at": "2024-02-27T12:18:54Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/29087",
    "id": 2153489811,
    "number": 29087,
    "title": "core/txpool: implement the Content/ContentFrom RPC for blobpool",
    "state": "closed",
    "locked": false,
    "comments": 2,
    "created_at": "2024-02-26T07:54:54Z",
    "updated_at": "2024-02-26T09:03:04Z",
    "closed_at": "2024-02-26T09:01:22Z",
    "draft": false,
    "body": null,
    "merged_at": null,
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/29083",
    "id": 2153400524,
    "number": 29083,
    "title": "core/txpool: no need to run rotate if no local txs",
    "state": "closed",
    "locked": false,
    "comments": 2,
    "created_at": "2024-02-26T07:00:25Z",
    "updated_at": "2024-02-29T02:22:29Z",
    "closed_at": "2024-02-26T16:34:46Z",
    "draft": false,
    "body": "A private node that I run locally has relatively few transactions. I noticed the following logs (every hour) and found that the rotate process can be skipped if there are no local transactions.\r\n\r\n```bash\r\nINFO [02-26|12:39:36.200] Regenerated local transaction journal    transactions=0 accounts=0\r\nINFO [02-26|13:39:36.043] Regenerated local transaction journal    transactions=0 accounts=0\r\nINFO [02-26|14:39:35.885] Regenerated local transaction journal    transactions=0 accounts=0\r\n```",
    "merged_at": "2024-02-26T16:34:46Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/web3.py/pull/3247",
    "id": 2150772819,
    "number": 3247,
    "title": "feature: add RPC eth_getBlockReceipts",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2024-02-23T10:11:58Z",
    "updated_at": "2024-03-12T05:12:38Z",
    "closed_at": "2024-03-12T04:42:31Z",
    "draft": false,
    "body": "### What was wrong?\r\n\r\nRelated to Issue #2004\r\n\r\n### How was it fixed?\r\n\r\n`eth_getBlockReceipts` was introduced in the standard RPC https://github.com/ethereum/execution-apis/pull/438, we can simply implement it \r\n\r\n### Todo:\r\n- [x] Add entry to the [release notes](https://github.com/ethereum/web3.py/blob/main/newsfragments/README.md)\r\n\r\n#### Cute Animal Picture\r\n\r\n![Put a link to a cute animal picture inside the parenthesis-->](https://cdn.pixabay.com/photo/2023/03/27/02/12/koala-7879533_1280.jpg)\r\n",
    "merged_at": "2024-03-12T04:42:31Z",
    "repo": "web3.py"
  },
  {
    "html_url": "https://github.com/ethereum/web3.py/pull/3246",
    "id": 2150671192,
    "number": 3246,
    "title": "chore(docs): trim whitespace",
    "state": "closed",
    "locked": false,
    "comments": 2,
    "created_at": "2024-02-23T09:10:15Z",
    "updated_at": "2024-04-10T22:51:35Z",
    "closed_at": "2024-04-10T22:51:35Z",
    "draft": false,
    "body": "### What was wrong?\r\n\r\nFormat the document with trim the ending whitespaces.\r\n\r\n\r\n\r\n#### Cute Animal Picture\r\n\r\n![Put a link to a cute animal picture inside the parenthesis-->](https://github.com/ethereum/web3.py/assets/3627395/d31642b4-b48d-48ec-8564-6250d35ad15c)\r\n\r\n",
    "merged_at": null,
    "repo": "web3.py"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/6667",
    "id": 2141442137,
    "number": 6667,
    "title": "chore(github): skip some heavy jobs when PR is not related",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-02-19T03:50:41Z",
    "updated_at": "2024-03-06T23:36:03Z",
    "closed_at": "2024-03-06T19:10:57Z",
    "draft": false,
    "body": "I've seen in this PR https://github.com/paradigmxyz/reth/pull/6665, I noticed that even though it was just a change to one file in the Grafana dashboard, it still triggered almost all the github action tasks, which is resource-intensive. Additionally, it could potentially block other merge tasks due to failures, so try to skip some github jobs if not related.",
    "merged_at": "2024-03-06T19:10:57Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/6665",
    "id": 2141379276,
    "number": 6665,
    "title": "chore(grafana): take back the messages in channel panel",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2024-02-19T02:42:14Z",
    "updated_at": "2024-02-19T18:36:33Z",
    "closed_at": "2024-02-19T18:36:32Z",
    "draft": false,
    "body": "fix and close https://github.com/paradigmxyz/reth/issues/6663",
    "merged_at": "2024-02-19T18:36:32Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/6650",
    "id": 2140897537,
    "number": 6650,
    "title": "chore(grafana): make network pool metric readable",
    "state": "closed",
    "locked": false,
    "comments": 4,
    "created_at": "2024-02-18T09:59:06Z",
    "updated_at": "2024-02-19T02:24:55Z",
    "closed_at": "2024-02-18T13:59:34Z",
    "draft": false,
    "body": "closes https://github.com/paradigmxyz/reth/issues/6363\r\n\r\nchanges:\r\n\r\n1. use `rate` instead of `increase` to calculate the throughput;\r\n2. use `req/s` instead of `c/s` as unit;\r\n3. rm the useless `Message in channel` metric.\r\n\r\nNow it looks like below:\r\n\r\n<img width=\"1277\" alt=\"image\" src=\"https://github.com/paradigmxyz/reth/assets/3627395/c5b64dde-7826-485e-a96a-e99dbf287153\">\r\n",
    "merged_at": "2024-02-18T13:59:34Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/6649",
    "id": 2140835407,
    "number": 6649,
    "title": "fix the issue of network is not known to be merged",
    "state": "closed",
    "locked": false,
    "comments": 4,
    "created_at": "2024-02-18T08:39:45Z",
    "updated_at": "2024-02-19T18:41:55Z",
    "closed_at": "2024-02-19T18:41:55Z",
    "draft": false,
    "body": "close https://github.com/paradigmxyz/reth/issues/6453",
    "merged_at": "2024-02-19T18:41:55Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/6481",
    "id": 2124202854,
    "number": 6481,
    "title": "chore(txpool): fix some format and typo",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-02-08T01:31:43Z",
    "updated_at": "2024-02-09T09:03:24Z",
    "closed_at": "2024-02-08T02:11:40Z",
    "draft": false,
    "body": null,
    "merged_at": "2024-02-08T02:11:40Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/6477",
    "id": 2124183988,
    "number": 6477,
    "title": "feat(txpool): discard_worst compat with suffix comma",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-02-08T01:08:41Z",
    "updated_at": "2024-02-08T12:39:47Z",
    "closed_at": "2024-02-08T12:39:47Z",
    "draft": false,
    "body": "Currently the macro `discard_worst` can't parse the list if the last one has a `,`\r\n\r\n```diff\r\n        discard_worst!(\r\n            self, removed, [\r\n                pending_limit => pending_pool,\r\n                basefee_limit => basefee_pool,\r\n                blob_limit    => blob_pool,\r\n-                queued_limit  => queued_pool\r\n+                queued_limit  => queued_pool,\r\n            ]\r\n        );\r\n```\r\n\r\nwith error as below:\r\n\r\n\r\n```bash\r\nerror: no rules expected the token `]`\r\n   --> crates/transaction-pool/src/pool/txpool.rs:813:13\r\n    |\r\n761 |         macro_rules! discard_worst {\r\n    |         -------------------------- when calling this macro\r\n...\r\n813 |             ]\r\n    |             ^ no rules expected this token in macro call\r\n    |\r\nnote: while trying to match meta-variable `$limit:ident`\r\n   --> crates/transaction-pool/src/pool/txpool.rs:762:46\r\n    |\r\n762 |             ($this:ident, $removed:ident, [$($limit:ident => $pool:ident),*]  ) => {\r\n    |                                              ^^^^^^^^^^^^\r\n\r\n```\r\n\r\nSo let's be compatible with that case. ",
    "merged_at": "2024-02-08T12:39:47Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/6455",
    "id": 2122025915,
    "number": 6455,
    "title": "refactor(bin/reth): simply the code to walk key/value pairs",
    "state": "closed",
    "locked": false,
    "comments": 3,
    "created_at": "2024-02-07T02:16:39Z",
    "updated_at": "2024-02-07T16:09:35Z",
    "closed_at": "2024-02-07T15:08:00Z",
    "draft": false,
    "body": "simply the code to walk/list the key/value pairs",
    "merged_at": null,
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/6454",
    "id": 2122014123,
    "number": 6454,
    "title": "refactor(txpool): replace discard_worst from macro to plain code",
    "state": "closed",
    "locked": false,
    "comments": 5,
    "created_at": "2024-02-07T02:04:39Z",
    "updated_at": "2024-03-15T09:05:30Z",
    "closed_at": "2024-03-15T07:57:18Z",
    "draft": true,
    "body": "close #6370",
    "merged_at": null,
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/6406",
    "id": 2118760405,
    "number": 6406,
    "title": "chore(rpc-types-compat): use SealedBlock.raw_transactions to reduce deplicate",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2024-02-05T14:56:57Z",
    "updated_at": "2024-02-06T15:40:22Z",
    "closed_at": "2024-02-06T15:40:21Z",
    "draft": false,
    "body": "Seems the `SealedBlock.body` is used in the v1,v2,v3 payload builder, use a helper function to reduce the same logic.",
    "merged_at": "2024-02-06T15:40:21Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/6391",
    "id": 2116999635,
    "number": 6391,
    "title": "chore(make): add build/build-op subcommand",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2024-02-04T10:03:40Z",
    "updated_at": "2024-02-05T09:49:39Z",
    "closed_at": "2024-02-05T09:49:39Z",
    "draft": false,
    "body": "Seems the makefile miss some native build commands, so add `build` and `build-op` ",
    "merged_at": "2024-02-05T09:49:39Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/6390",
    "id": 2116968289,
    "number": 6390,
    "title": "feature: move node-api example into examples",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-02-04T09:04:51Z",
    "updated_at": "2024-02-05T13:11:20Z",
    "closed_at": "2024-02-05T12:22:40Z",
    "draft": false,
    "body": "implement and closes https://github.com/paradigmxyz/reth/issues/6372\r\n\r\ncloses #6258 ",
    "merged_at": "2024-02-05T12:22:40Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/6387",
    "id": 2116846505,
    "number": 6387,
    "title": "feat(grafana): use reth_info to query Reth instances",
    "state": "closed",
    "locked": false,
    "comments": 3,
    "created_at": "2024-02-04T03:03:15Z",
    "updated_at": "2024-02-13T13:21:59Z",
    "closed_at": "2024-02-13T13:21:59Z",
    "draft": false,
    "body": "Currently, we are using `up` metric to filter reth instances, but it produces all the Prometheus instances, see below:\r\n\r\n<img width=\"290\" alt=\"image\" src=\"https://github.com/paradigmxyz/reth/assets/3627395/1d3d9a98-c7d3-4466-9e96-28a08e24ec4c\">\r\n\r\n\r\n\r\nI think we can use `reth_info` instead to get accurate results.\r\n\r\n\r\n\r\n",
    "merged_at": "2024-02-13T13:21:59Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/6374",
    "id": 2116475397,
    "number": 6374,
    "title": "grafana: add build version,gitsha,timestamp into dashboard",
    "state": "closed",
    "locked": false,
    "comments": 2,
    "created_at": "2024-02-03T13:08:20Z",
    "updated_at": "2024-02-06T08:08:14Z",
    "closed_at": "2024-02-05T18:32:43Z",
    "draft": false,
    "body": "implement https://github.com/paradigmxyz/reth/issues/6335\r\n\r\nand it looks like below:\r\n\r\n<img width=\"1196\" alt=\"image\" src=\"https://github.com/paradigmxyz/reth/assets/3627395/d734e894-8723-4ebd-b7e2-8f7ed029fc7f\">\r\n",
    "merged_at": "2024-02-05T18:32:43Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/6373",
    "id": 2116457537,
    "number": 6373,
    "title": "feature: add Blob pool metrics",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2024-02-03T12:09:50Z",
    "updated_at": "2024-02-04T02:52:14Z",
    "closed_at": "2024-02-03T14:17:06Z",
    "draft": false,
    "body": "implement #6347",
    "merged_at": "2024-02-03T14:17:06Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/6112",
    "id": 2087386977,
    "number": 6112,
    "title": "all: run cargo fmt --all",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2024-01-18T03:05:29Z",
    "updated_at": "2024-01-18T07:15:55Z",
    "closed_at": "2024-01-18T07:15:54Z",
    "draft": false,
    "body": "format all rust code",
    "merged_at": null,
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/erigontech/erigon/pull/9057",
    "id": 2053959635,
    "number": 9057,
    "title": "rpc: implement txpool_contentFrom",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2023-12-22T13:56:00Z",
    "updated_at": "2023-12-28T07:15:17Z",
    "closed_at": "2023-12-28T07:15:17Z",
    "draft": false,
    "body": "implement the `txpool_contentFrom` rpc, used to retrieve the specified address's tx contents.",
    "merged_at": "2023-12-28T07:15:17Z",
    "repo": "erigon"
  },
  {
    "html_url": "https://github.com/erigontech/erigon/pull/9054",
    "id": 2053397514,
    "number": 9054,
    "title": "txpool: the same logging style of announced and broadcasted tx",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2023-12-22T05:19:05Z",
    "updated_at": "2023-12-22T11:42:40Z",
    "closed_at": "2023-12-22T05:39:20Z",
    "draft": false,
    "body": "Found the different log style for announced and broadcasted tx:\r\n\r\n```\r\n[INFO] [12-22|05:18:01.363] Local tx broadcasted                     txHash=ec6b1c87aafd7f8ead5794477be50bda696f2ce17271ad4f6022a756722fa0be to peer=10\r\n[INFO] [12-22|05:18:01.363] local tx announced                       tx_hash=ec6b1c87aafd7f8ead5794477be50bda696f2ce17271ad4f6022a756722fa0be to peer=40 baseFee=1\r\n```\r\n\r\nadjust them to the same style",
    "merged_at": "2023-12-22T05:39:20Z",
    "repo": "erigon"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/5764",
    "id": 2043008625,
    "number": 5764,
    "title": "doc:  --dev.block_time not available",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2023-12-15T06:52:07Z",
    "updated_at": "2023-12-15T09:32:42Z",
    "closed_at": "2023-12-15T09:32:42Z",
    "draft": false,
    "body": "\r\nrun reth --dev.block_time not available:\r\n\r\n```\r\nerror: unexpected argument '--dev.block_time' found\r\n\r\n  tip: a similar argument exists: '--dev.block-time'\r\n\r\nUsage: reth node <--dev|--dev.block-max-transactions <BLOCK_MAX_TRANSACTIONS>|--dev.block-time <BLOCK_TIME>>\r\n```",
    "merged_at": "2023-12-15T09:32:42Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/prysmaticlabs/prysm/pull/13279",
    "id": 2028108724,
    "number": 13279,
    "title": "beacon-chain/rpc: use BalanceAtIndex instead of Balances to reduce memory copy",
    "state": "closed",
    "locked": false,
    "comments": 2,
    "created_at": "2023-12-06T09:25:04Z",
    "updated_at": "2023-12-13T09:29:51Z",
    "closed_at": "2023-12-10T00:11:59Z",
    "draft": false,
    "body": "<!-- Thanks for sending a PR! Before submitting:\r\n\r\n1. If this is your first PR, check out our contribution guide here https://docs.prylabs.network/docs/contribute/contribution-guidelines\r\n   You will then need to sign our Contributor License Agreement (CLA), which will show up as a comment from a bot in this pull request after you open it. We cannot review code without a signed CLA.\r\n2. Please file an associated tracking issue if this pull request is non-trivial and requires context for our team to understand. All features and most bug fixes should have\r\n   an associated issue with a design discussed and decided upon. Small bug\r\n   fixes and documentation improvements don't need issues.\r\n3. New features and bug fixes must have tests. Documentation may need to\r\n   be updated. If you're unsure what to update, send the PR, and we'll discuss\r\n   in review.\r\n4. Note that PRs updating dependencies and new Go versions are not accepted.\r\n   Please file an issue instead.\r\n-->\r\n\r\n**What type of PR is this?**\r\n\r\nBug fix\r\n\r\n\r\n**What does this PR do? Why is it needed?**\r\n\r\nI requested the prysm beacon chain with this RPC: `/eth/v1/beacon/states/head/validators`, and found there was too much memory allocated in the `balancesVal`\r\n\r\n<img width=\"962\" alt=\"image\" src=\"https://github.com/prysmaticlabs/prysm/assets/3627395/38fc2b36-913b-48e1-89f5-4ce492c1d2ed\">\r\n\r\n\r\n**Which issues(s) does this PR fix?**\r\n\r\nFixes #\r\n\r\n**Other notes for review**\r\n",
    "merged_at": "2023-12-10T00:11:59Z",
    "repo": "prysm"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/28557",
    "id": 2001830288,
    "number": 28557,
    "title": "cmd/evm: t8n support native tracers",
    "state": "closed",
    "locked": false,
    "comments": 4,
    "created_at": "2023-11-20T10:11:43Z",
    "updated_at": "2023-12-20T03:44:57Z",
    "closed_at": "2023-12-18T14:16:25Z",
    "draft": false,
    "body": "t8n is a useful tool to test state transition. Currently, we use t8n to analyze some exploit transactions, such as [SaddleFinance Exploiter](https://etherscan.io/tx/0x2b023d65485c4bb68d781960c2196588d03b871dc9eb1c054f596b7ca6f7da56), a simple workflow as below:\r\n\r\n1. save tx's prestate into `alloc.json`;\r\n2. save tx's block metadata into `env.json`;\r\n3. save tx's rawtrasaction into `txs.json`;\r\n4. now apply the tx: `./evm t8n --trace ...`;\r\n5. from the outputted alloc and traces to find some useful patterns.\r\n\r\nBut currently t8n only supports JSONLogger traces, we want to extend it to support all traces under [eth/tracers](./eth/tracers)\r\n",
    "merged_at": "2023-12-18T14:16:25Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/erigontech/erigon/pull/8736",
    "id": 1995998499,
    "number": 8736,
    "title": "eth/tracers: support traceCall with txIndex",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2023-11-16T03:46:43Z",
    "updated_at": "2023-11-28T13:43:48Z",
    "closed_at": "2023-11-16T09:30:15Z",
    "draft": false,
    "body": "This is a similar PR of https://github.com/ethereum/go-ethereum/pull/28460, support traceCall in the middle of a block",
    "merged_at": "2023-11-16T09:30:15Z",
    "repo": "erigon"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/28494",
    "id": 1984738711,
    "number": 28494,
    "title": "eth/filters: exit early if topics-filter has more than 4 topics",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2023-11-09T03:10:49Z",
    "updated_at": "2023-11-10T07:10:03Z",
    "closed_at": "2023-11-10T07:10:03Z",
    "draft": false,
    "body": "Currently, geth's will return `[]` for any `len(topics) > 4` log filter. If user request a large range of blocks, this will only make geth to do useless works. So maybe we can fast exit if the query topics is invalid at the beginning.\r\n\r\nFYI, here is some responses for different client. \r\n\r\n> request\r\n\r\n```json\r\n{\r\n  \"jsonrpc\": \"2.0\",\r\n  \"method\": \"eth_getLogs\",\r\n  \"id\": 74,\r\n  \"params\": [\r\n    {\r\n      \"address\": \"0x514910771af9ca656af840dff83e8264ecf986ca\",\r\n      \"toBlock\": \"0x11AC43D\",\r\n      \"fromBlock\": \"0x11AC43D\",\r\n      \"topics\": [[], [], [], [], []]\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n> reth's response\r\n\r\n```json\r\n{\r\n  \"error\": {\r\n    \"code\": -32602,\r\n    \"data\": \"exceeded maximum topics len at line 7 column 5\",\r\n    \"message\": \"Invalid params\"\r\n  },\r\n  \"id\": 74,\r\n  \"jsonrpc\": \"2.0\"\r\n}\r\n```\r\n\r\n> erigon's response\r\n\r\n```json\r\n{\r\n  \"id\": 74,\r\n  \"jsonrpc\": \"2.0\",\r\n  \"result\": []\r\n}\r\n```\r\n\r\n> and here is the response of geth for this PR\r\n\r\n```json\r\n{\r\n  \"error\": {\r\n    \"code\": -32000,\r\n    \"message\": \"invalid topic(s)\"\r\n  },\r\n  \"id\": 74,\r\n  \"jsonrpc\": \"2.0\"\r\n}\r\n```",
    "merged_at": "2023-11-10T07:10:03Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/28482",
    "id": 1982516275,
    "number": 28482,
    "title": "ethclient: add empty/nonexist account testcase for eth_getProof RPC",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2023-11-08T00:58:39Z",
    "updated_at": "2023-11-10T11:23:10Z",
    "closed_at": "2023-11-10T11:23:10Z",
    "draft": false,
    "body": "I apologize for the inappropriate fix for the issue https://github.com/ethereum/go-ethereum/issues/28441. Here, I have added two new test cases to differentiate between the scenarios:\r\n\r\n1. the account/contract does not exists;\r\n2. the account/contract exists but is empty.",
    "merged_at": "2023-11-10T11:23:10Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/28460",
    "id": 1975794632,
    "number": 28460,
    "title": "eth/tracers: support debug_traceCall on transaction",
    "state": "closed",
    "locked": false,
    "comments": 5,
    "created_at": "2023-11-03T09:40:45Z",
    "updated_at": "2023-12-02T12:00:16Z",
    "closed_at": "2023-12-01T13:08:52Z",
    "draft": false,
    "body": "Currently, `debug_traceCall` only supports invoking the post-state based on a specific block. \r\n\r\nHowever, in some cases, we may want to simulate the transaction based on the state of a specific intermediate index within a block. For example, when analyzing a scenario involving a malicious transaction, we may want to simulate the execution of that malicious transaction based on the state before its execution to observe the impact it would have caused.\r\n\r\nSo I added the field `txIndex` in the `TraceCallConfig`",
    "merged_at": "2023-12-01T13:08:52Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/28456",
    "id": 1974518376,
    "number": 28456,
    "title": "graphql: change the type of yParity from Long to BigInt",
    "state": "closed",
    "locked": false,
    "comments": 2,
    "created_at": "2023-11-02T15:35:17Z",
    "updated_at": "2023-12-18T02:54:05Z",
    "closed_at": "2023-11-09T08:36:27Z",
    "draft": false,
    "body": "Discussed in https://github.com/ethereum/execution-apis/pull/471\r\n\r\nas `r`, `s`, `v` are bigints, so yParity should also be the same. \r\n\r\n",
    "merged_at": "2023-11-09T08:36:27Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/28445",
    "id": 1971614305,
    "number": 28445,
    "title": "core/vm: start tracer before update callee's nonce",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2023-11-01T03:09:42Z",
    "updated_at": "2023-11-03T09:32:38Z",
    "closed_at": "2023-11-03T09:32:37Z",
    "draft": false,
    "body": "Fix https://github.com/ethereum/go-ethereum/issues/28439\r\n\r\nI see what the question is :)\r\n\r\nIf the transaction is after EIP158(absolutely it is), we will set the created contract's nonce to 1\r\n\r\nhttps://github.com/ethereum/go-ethereum/blob/233db64cc1d083e6251abe768c97e0454e2ca898/core/vm/evm.go#L445-L461\r\n\r\nBut in the inner created contracts, we fetch the nonce in front of entering this scope, so its nonce is 0\r\n\r\nhttps://github.com/ethereum/go-ethereum/blob/233db64cc1d083e6251abe768c97e0454e2ca898/eth/tracers/native/prestate.go#L161-L179\r\n\r\nSo in general, the outer tx's created contract's nonce is always 1, and the inner created contracts' nonce is 0.\r\n\r\nI found this issue does not happen in Erigon's node, dig into the code and found they will first start the tracer, and then launch the creating process. so the nonce is 0\r\n\r\nhttps://github.com/ledgerwatch/erigon/blob/c90bff7e22337691ca4c41df41a782e805435f46/core/vm/evm.go#L335-L347\r\n\r\n\r\nSo I proposed to move the tracer a little forward, this will not affect the current implementation,",
    "merged_at": null,
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/28442",
    "id": 1970209331,
    "number": 28442,
    "title": "internal/ethapi: eth_getProof return empty hash instead of zero",
    "state": "closed",
    "locked": false,
    "comments": 2,
    "created_at": "2023-10-31T11:08:27Z",
    "updated_at": "2023-11-07T13:55:52Z",
    "closed_at": "2023-11-07T13:55:51Z",
    "draft": false,
    "body": "fix https://github.com/ethereum/go-ethereum/issues/28441",
    "merged_at": null,
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/28438",
    "id": 1967896905,
    "number": 28438,
    "title": "accounts/abi: simulator implements interface PendingStateReader  ",
    "state": "closed",
    "locked": false,
    "comments": 3,
    "created_at": "2023-10-30T09:27:03Z",
    "updated_at": "2023-12-05T17:36:41Z",
    "closed_at": "2023-12-05T10:10:42Z",
    "draft": false,
    "body": "Implement the first interface mentioned in https://github.com/ethereum/go-ethereum/issues/28431",
    "merged_at": null,
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/28424",
    "id": 1964941284,
    "number": 28424,
    "title": "graphql: add error code and message",
    "state": "closed",
    "locked": false,
    "comments": 4,
    "created_at": "2023-10-27T07:34:31Z",
    "updated_at": "2024-08-19T15:58:32Z",
    "closed_at": "2024-08-19T15:58:32Z",
    "draft": false,
    "body": "I'm introduing https://github.com/graph-gophers/graphql-go#custom-errors to add `errorCode` and `errorMessage` for the incorrect GraphQL requests. \r\n\r\nIt will return something like this, eg:\r\n\r\n```graphql\r\n{blocks(from: 2 to: 0) { number }}\r\n```\r\n\r\n\r\n```json\r\n{\r\n  \"errors\": [\r\n    {\r\n      \"message\": \"error [-32602]: invalid from and to block combination: from > to\",\r\n      \"path\": [\r\n        \"blocks\"\r\n      ],\r\n      \"extensions\": {\r\n        \"errorCode\": -32602,\r\n        \"errorMessage\": \"invalid from and to block combination: from > to\"\r\n      }\r\n    }\r\n  ],\r\n  \"data\": null\r\n}\r\n```\r\nTwo error codes were defined in this PR:\r\n\r\n- `-32602`: for any invalid request parameters\r\n- `-32600`: for any other unknown errors\r\n\r\nBut the `graphql.ResolverError` can only be used for errors returned by graphql implementation body functions, for these errors that have not yet entered the function cannot be applied. \r\n\r\neg:\r\n\r\n```graphql\r\n{ block(number: \"\") { number } }\r\n```\r\n\r\n> geth's response(after this PR)\r\n\r\n```json\r\n{\"errors\":[{\"message\":\"strconv.ParseInt: parsing \\\"\\\": invalid syntax\"}],\"data\":{}}\r\n```\r\n\r\n> besu's response\r\n\r\n```json\r\n{\r\n  \"errors\" : [ {\r\n    \"message\" : \"Validation error (WrongType@[block]) : argument 'number' with value 'StringValue{value=''}' is not a valid 'Long' - Value is not any Long : 'StringValue{value=''}'\",\r\n    \"locations\" : [ {\r\n      \"line\" : 1,\r\n      \"column\" : 9\r\n    } ],\r\n    \"extensions\" : {\r\n      \"classification\" : \"ValidationError\"\r\n    }\r\n  } ]\r\n}\r\n```\r\n\r\nOr another case\r\n\r\n```graphql\r\n{ block(hash: \"0x1001\") { number } }\r\n```\r\n\r\n> geth's response(after this PR)\r\n\r\n```json\r\n{\"errors\":[{\"message\":\"hex string has length 4, want 64 for Hash\"}],\"data\":{}}\r\n```\r\n\r\n> besu's response\r\n\r\n```json\r\n{\r\n  \"errors\" : [ {\r\n    \"message\" : \"Exception while fetching data (/block) : Block hash 0x0000000000000000000000000000000000000000000000000000000000001001 was not found\",\r\n    \"locations\" : [ {\r\n      \"line\" : 1,\r\n      \"column\" : 3\r\n    } ],\r\n    \"path\" : [ \"block\" ],\r\n    \"extensions\" : {\r\n      \"classification\" : \"DataFetchingException\"\r\n    }\r\n  } ],\r\n  \"data\" : {\r\n    \"block\" : null\r\n  }\r\n}\r\n```\r\n\r\n@s1na please take a look, and give some advice. thanks.\r\n",
    "merged_at": null,
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/28417",
    "id": 1962507586,
    "number": 28417,
    "title": "graphql: set content-type as json",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2023-10-26T00:35:31Z",
    "updated_at": "2023-10-27T22:33:07Z",
    "closed_at": "2023-10-27T14:50:59Z",
    "draft": false,
    "body": "Fix an issue of wrong Content-Type\r\n\r\n```\r\n$ curl -XPOST 127.0.0.1:8545/graphql -d '{\"query\": \"{block(number: 1  hash: \\\"0xc1d1224983a2b43f2ea1b847337eda55e316e94603386e346abe3f6e08121027\\\") {number hash }}\"}' -v\r\nNote: Unnecessary use of -X or --request, POST is already inferred.\r\n* Connected to 127.0.0.1 (127.0.0.1) port 8545 (#0)\r\n> POST /graphql HTTP/1.1\r\n> Host: 127.0.0.1:8545\r\n> User-Agent: curl/8.1.2\r\n> Accept: */*\r\n> Content-Length: 124\r\n> Content-Type: application/x-www-form-urlencoded\r\n>\r\n< HTTP/1.1 400 Bad Request\r\n< Date: Thu, 26 Oct 2023 00:29:18 GMT\r\n< Content-Length: 110\r\n< Content-Type: text/plain; charset=utf-8\r\n<\r\n* Connection #0 to host 127.0.0.1 left intact\r\n{\"errors\":[{\"message\":\"only one of number or hash must be specified\",\"path\":[\"block\"]}],\"data\":{\"block\":null}}\r\n\r\n```\r\n\r\n@s1na PTAL",
    "merged_at": "2023-10-27T14:50:59Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/28416",
    "id": 1962499660,
    "number": 28416,
    "title": "graphql: fix an issue of nil pointer panic",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2023-10-26T00:26:49Z",
    "updated_at": "2023-10-26T12:23:05Z",
    "closed_at": "2023-10-26T11:48:51Z",
    "draft": false,
    "body": "Fix as issue of nil pointer panic\r\n\r\n\r\n> query\r\n\r\n```graphql\r\n{blocks { number }}\r\n```\r\n\r\n\r\n> response\r\n\r\n```json\r\n{\r\n  \"errors\": [\r\n    {\r\n      \"message\": \"panic occurred: runtime error: invalid memory address or nil pointer dereference\",\r\n      \"path\": [\r\n        \"blocks\"\r\n      ]\r\n    }\r\n  ],\r\n  \"data\": null\r\n}\r\n```\r\n\r\nand the stack:\r\n\r\n```\r\n> 2023/10/26 08:25:36 graphql: panic occurred: runtime error: invalid memory address or nil pointer dereference\r\ngoroutine 4252 [running]:\r\ngithub.com/graph-gophers/graphql-go/log.(*DefaultLogger).LogPanic(0x28?, {0x104254960?, 0x140014805a0}, {0x103fdb9a0, 0x104d31bf0})\r\n        github.com/graph-gophers/graphql-go@v1.3.0/log/log.go:21 +0x58\r\ngithub.com/graph-gophers/graphql-go/internal/exec.execFieldSelection.func2.1()\r\n        github.com/graph-gophers/graphql-go@v1.3.0/internal/exec/exec.go:187 +0x80\r\npanic({0x103fdb9a0?, 0x104d31bf0?})\r\n        runtime/panic.go:914 +0x218\r\ngithub.com/ethereum/go-ethereum/graphql.(*Resolver).Blocks(0x140014a6210, {0x104254960, 0x14001480630}, {0x0?, 0x0?})\r\n        github.com/ethereum/go-ethereum/graphql/graphql.go:1327 +0x30\r\nreflect.Value.call({0x104159a60?, 0x140014a6210?, 0x1400075ac68?}, {0x10386365d, 0x4}, {0x14001480660, 0x2, 0x103391400?})\r\n        reflect/value.go:596 +0x994\r\nreflect.Value.Call({0x104159a60?, 0x140014a6210?, 0x104253590?}, {0x14001480660?, 0x10422b220?, 0x1b?})\r\n        reflect/value.go:380 +0x94\r\ngithub.com/graph-gophers/graphql-go/internal/exec.execFieldSelection.func2(0x1400064c638?, {0x104254960?, 0x140014805a0?}, 0x14000b760c0, 0x14001490140, 0x140009a3eb0, {0x104254960?, 0x14001480630})\r\n        github.com/graph-gophers/graphql-go@v1.3.0/internal/exec/exec.go:211 +0x380\r\ngithub.com/graph-gophers/graphql-go/internal/exec.execFieldSelection({0x104254960, 0x140014805a0}, 0x1400101c100, 0x0?, 0x14001490140, 0x0?, 0x1)\r\n        github.com/graph-gophers/graphql-go@v1.3.0/internal/exec/exec.go:231 +0x118\r\ngithub.com/graph-gophers/graphql-go/internal/exec.(*Request).execSelections.func1(0x14001490140)\r\n        github.com/graph-gophers/graphql-go@v1.3.0/internal/exec/exec.go:81 +0x178\r\ncreated by github.com/graph-gophers/graphql-go/internal/exec.(*Request).execSelections in goroutine 4250\r\n        github.com/graph-gophers/graphql-go@v1.3.0/internal/exec/exec.go:77 +0x140\r\n\r\ncontext: context.Background.WithValue(type *http.contextKey, val <not Stringer>).WithValue(type *http.contextKey, val 127.0.0.1:8545).WithCancel.WithCancel.WithCancel.WithValue(type opentracing.contextKey, val <not Stringer>)\r\n```\r\n\r\n@s1na PTAL",
    "merged_at": "2023-10-26T11:48:51Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/28412",
    "id": 1959328215,
    "number": 28412,
    "title": "graphql: logs return error if from block > to",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2023-10-24T14:00:15Z",
    "updated_at": "2023-10-25T13:20:24Z",
    "closed_at": "2023-10-25T13:20:24Z",
    "draft": false,
    "body": null,
    "merged_at": "2023-10-25T13:20:24Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/28393",
    "id": 1954476850,
    "number": 28393,
    "title": "graphql: return error if block from>to",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2023-10-20T15:01:34Z",
    "updated_at": "2023-10-23T23:33:33Z",
    "closed_at": "2023-10-23T15:25:26Z",
    "draft": false,
    "body": "return error instead of nil if block from > to",
    "merged_at": "2023-10-23T15:25:26Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/28386",
    "id": 1953524051,
    "number": 28386,
    "title": "eth/filters: eth_getLogs fast exit for invalid block range",
    "state": "closed",
    "locked": false,
    "comments": 4,
    "created_at": "2023-10-20T04:56:21Z",
    "updated_at": "2023-12-18T03:06:17Z",
    "closed_at": "2023-11-07T11:41:20Z",
    "draft": false,
    "body": "We can quickly exit if the from > to in `eth_getLogs` request.\r\n\r\nBTW, currently for `eth_newFilter`, if from>to, then the RPC returns an error, but no error for `eth_getLogs`, should we need to unify their behavior, or let it go?\r\n\r\n> eth_getLogs request \r\n\r\n```json\r\n{\r\n  \"jsonrpc\": \"2.0\",\r\n  \"method\": \"eth_getLogs\",\r\n  \"id\": 74,\r\n  \"params\": [\r\n    {\r\n      \"toBlock\": \"0x1\",\r\n      \"fromBlock\": \"0x2000\"\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n> eth_getLogs response\r\n\r\n```json\r\n{\r\n  \"id\": 74,\r\n  \"jsonrpc\": \"2.0\",\r\n  \"result\": []\r\n}\r\n```\r\n\r\n> eth_newFilter request\r\n\r\n```json\r\n{\r\n  \"jsonrpc\": \"2.0\",\r\n  \"method\": \"eth_newFilter\",\r\n  \"id\": 73,\r\n  \"params\": [\r\n    {\r\n      \"toBlock\": \"0x1\",\r\n      \"fromBlock\": \"0x2000\"\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n> eth_newFilter response\r\n\r\n```json\r\n{\r\n  \"error\": {\r\n    \"code\": -32000,\r\n    \"message\": \"invalid from and to block combination: from > to\"\r\n  },\r\n  \"id\": 73,\r\n  \"jsonrpc\": \"2.0\"\r\n}\r\n```",
    "merged_at": "2023-11-07T11:41:20Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/hive/pull/910",
    "id": 1952340508,
    "number": 910,
    "title": "clients/go-ethereum: disable min free disk check",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2023-10-19T13:59:42Z",
    "updated_at": "2023-10-20T02:26:43Z",
    "closed_at": "2023-10-19T15:09:09Z",
    "draft": false,
    "body": "Seems rpc-compat with client go-ethereum can't run in the hive test case, \r\n\r\n<img width=\"1279\" alt=\"image\" src=\"https://github.com/ethereum/hive/assets/3627395/0f800f79-5404-481e-8e7d-89b0c9810559\">\r\n\r\n\r\n\r\n\r\neg: https://hivetests2.ethdevops.io/viewer.html?suiteid=1697716928-571541a564e337a8555705dda14793e8.json&suitename=rpc-compat&testid=1&file=%2Fresults%2Fgo-ethereum%2Fclient-489d013ac2474cdaec4ab95f94647a9c1080e52d4193b2483e8b4a35c310f876.log\r\n\r\n<img width=\"1277\" alt=\"image\" src=\"https://github.com/ethereum/hive/assets/3627395/2c3e7eae-29f4-4da8-bb0f-bd7fc4e42aff\">\r\n\r\n```\r\nERROR[10-19|12:02:08.452] Low disk space. Gracefully shutting down Geth to prevent database corruption. available=0.00B path=/root/.ethereum/geth\r\nINFO [10-19|12:02:08.452] Got interrupt, shutting down... \r\nINFO [10-19|12:02:08.452] HTTP server stopped                      endpoint=[::]:8545\r\nINFO [10-19|12:02:08.452] HTTP server stopped                      endpoint=[::]:8546\r\nINFO [10-19|12:02:08.452] HTTP server stopped                      endpoint=[::]:8551\r\nINFO [10-19|12:02:08.453] IPC endpoint closed                      url=/root/.ethereum/geth.ipc\r\nINFO [10-19|12:02:08.453] Ethereum protocol stopped \r\nINFO [10-19|12:02:08.453] Transaction pool stopped \r\nINFO [10-19|12:02:08.522] Writing snapshot state to disk           root=f67fe3..1ed599\r\nINFO [10-19|12:02:08.522] Persisted trie from memory database      nodes=0 size=0.00B time=\"5.769\u00ac\u00b5s\" gcnodes=0 gcsize=0.00B gctime=0s livenodes=0 livesize=0.00B\r\nINFO [10-19|12:02:08.522] Blockchain stopped\r\n```\r\n\r\n\r\n\r\n",
    "merged_at": "2023-10-19T15:09:08Z",
    "repo": "hive"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/28328",
    "id": 1941438588,
    "number": 28328,
    "title": "rpc: improve the realtime notify performance by 30%",
    "state": "closed",
    "locked": false,
    "comments": 10,
    "created_at": "2023-10-13T07:55:04Z",
    "updated_at": "2024-03-08T08:07:32Z",
    "closed_at": "2023-11-22T10:24:55Z",
    "draft": false,
    "body": "I'm running 10 websocket clients(mainly to test #27439) to receive the real-time events, it turns out the `rpc.Notify` eat too much CPU, see the profile file below:\r\n\r\n<img width=\"1446\" alt=\"image\" src=\"https://github.com/ethereum/go-ethereum/assets/3627395/233d1af0-06e0-4d05-b3f6-52dede9aedc2\">\r\n\r\nAnd found there are too many CPUs used in JSON.marshaling, and after digging in the source code, seems we can improve the performance by reducing 1 JSON.marshaling. So I add a benchmark, here is the result of the benchmark: \r\n\r\n```bash\r\ngo test -bench=.  -v -run BenchmarkNotify -count 10\r\n```\r\n\r\n> old \r\n\r\n```txt\r\ngoos: linux\r\ngoarch: amd64\r\npkg: github.com/ethereum/go-ethereum/rpc\r\ncpu: Intel(R) Xeon(R) CPU E5-2680 v4 @ 2.40GHz\r\nBenchmarkNotify\r\nBenchmarkNotify-16         19371             66857 ns/op\r\nBenchmarkNotify-16         19032             59029 ns/op\r\nBenchmarkNotify-16         19263             67036 ns/op\r\nBenchmarkNotify-16         16597             61500 ns/op\r\nBenchmarkNotify-16         19549             65228 ns/op\r\nBenchmarkNotify-16         16611             72045 ns/op\r\nBenchmarkNotify-16         16962             68970 ns/op\r\nBenchmarkNotify-16         16431             66456 ns/op\r\nBenchmarkNotify-16         23557             49392 ns/op\r\nBenchmarkNotify-16         23340             53930 ns/op\r\nPASS\r\nok      github.com/ethereum/go-ethereum/rpc     18.224s\r\n```\r\n\r\n> new\r\n\r\n```txt\r\ngoos: linux\r\ngoarch: amd64\r\npkg: github.com/ethereum/go-ethereum/rpc\r\ncpu: Intel(R) Xeon(R) CPU E5-2680 v4 @ 2.40GHz\r\nBenchmarkNotify\r\nBenchmarkNotify-16         24076             45048 ns/op\r\nBenchmarkNotify-16         25297             42735 ns/op\r\nBenchmarkNotify-16         23407             45985 ns/op\r\nBenchmarkNotify-16         34939             46708 ns/op\r\nBenchmarkNotify-16         36223             45710 ns/op\r\nBenchmarkNotify-16         24590             46140 ns/op\r\nBenchmarkNotify-16         22858             45640 ns/op\r\nBenchmarkNotify-16         26013             47350 ns/op\r\nBenchmarkNotify-16         31420             44238 ns/op\r\nBenchmarkNotify-16         26156             45340 ns/op\r\nPASS\r\nok      github.com/ethereum/go-ethereum/rpc     17.150s\r\n```\r\n\r\ngenerate the bench differ:\r\n\r\n```bash\r\nbenchstat old.txt new.txt\r\nold.txt:5: missing iteration count\r\nnew.txt:5: missing iteration count\r\ngoos: linux\r\ngoarch: amd64\r\npkg: github.com/ethereum/go-ethereum/rpc\r\ncpu: Intel(R) Xeon(R) CPU E5-2680 v4 @ 2.40GHz\r\n          \u2502   old.txt    \u2502               new.txt               \u2502\r\n          \u2502    sec/op    \u2502   sec/op     vs base                \u2502\r\nNotify-16   65.84\u00b5 \u00b1 18%   45.68\u00b5 \u00b1 3%  -30.63% (p=0.000 n=10)\r\n\r\n```\r\n",
    "merged_at": "2023-11-22T10:24:54Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/prysmaticlabs/prysm/pull/13039",
    "id": 1939134000,
    "number": 13039,
    "title": "beacon-chain/sync: fix some datarace in go test",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2023-10-12T04:03:30Z",
    "updated_at": "2023-10-17T17:30:11Z",
    "closed_at": "2023-10-17T17:30:11Z",
    "draft": false,
    "body": "<!-- Thanks for sending a PR! Before submitting:\r\n\r\n1. If this is your first PR, check out our contribution guide here https://docs.prylabs.network/docs/contribute/contribution-guidelines\r\n   You will then need to sign our Contributor License Agreement (CLA), which will show up as a comment from a bot in this pull request after you open it. We cannot review code without a signed CLA.\r\n2. Please file an associated tracking issue if this pull request is non-trivial and requires context for our team to understand. All features and most bug fixes should have\r\n   an associated issue with a design discussed and decided upon. Small bug\r\n   fixes and documentation improvements don't need issues.\r\n3. New features and bug fixes must have tests. Documentation may need to\r\n   be updated. If you're unsure what to update, send the PR, and we'll discuss\r\n   in review.\r\n4. Note that PRs updating dependencies and new Go versions are not accepted.\r\n   Please file an issue instead.\r\n-->\r\n\r\n**What type of PR is this?**\r\n\r\nBug fix\r\n\r\nSimilar to https://github.com/prysmaticlabs/prysm/pull/13018",
    "merged_at": "2023-10-17T17:30:11Z",
    "repo": "prysm"
  },
  {
    "html_url": "https://github.com/prysmaticlabs/prysm/pull/13036",
    "id": 1939014938,
    "number": 13036,
    "title": "beacon-chain/blockchain: fix some datarace in go test",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2023-10-12T01:33:57Z",
    "updated_at": "2023-10-23T21:55:47Z",
    "closed_at": "2023-10-23T21:55:47Z",
    "draft": false,
    "body": "<!-- Thanks for sending a PR! Before submitting:\r\n\r\n1. If this is your first PR, check out our contribution guide here https://docs.prylabs.network/docs/contribute/contribution-guidelines\r\n   You will then need to sign our Contributor License Agreement (CLA), which will show up as a comment from a bot in this pull request after you open it. We cannot review code without a signed CLA.\r\n2. Please file an associated tracking issue if this pull request is non-trivial and requires context for our team to understand. All features and most bug fixes should have\r\n   an associated issue with a design discussed and decided upon. Small bug\r\n   fixes and documentation improvements don't need issues.\r\n3. New features and bug fixes must have tests. Documentation may need to\r\n   be updated. If you're unsure what to update, send the PR, and we'll discuss\r\n   in review.\r\n4. Note that PRs updating dependencies and new Go versions are not accepted.\r\n   Please file an issue instead.\r\n-->\r\n\r\n**What type of PR is this?**\r\n\r\nBug fix\r\n\r\nSimilar to https://github.com/prysmaticlabs/prysm/pull/13018",
    "merged_at": "2023-10-23T21:55:47Z",
    "repo": "prysm"
  },
  {
    "html_url": "https://github.com/prysmaticlabs/prysm/pull/13018",
    "id": 1933250573,
    "number": 13018,
    "title": "beacon-node/rpc: fix go test datarace",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2023-10-09T14:45:08Z",
    "updated_at": "2023-10-22T15:12:56Z",
    "closed_at": "2023-10-22T15:12:56Z",
    "draft": false,
    "body": "<!-- Thanks for sending a PR! Before submitting:\r\n\r\n1. If this is your first PR, check out our contribution guide here https://docs.prylabs.network/docs/contribute/contribution-guidelines\r\n   You will then need to sign our Contributor License Agreement (CLA), which will show up as a comment from a bot in this pull request after you open it. We cannot review code without a signed CLA.\r\n2. Please file an associated tracking issue if this pull request is non-trivial and requires context for our team to understand. All features and most bug fixes should have\r\n   an associated issue with a design discussed and decided upon. Small bug\r\n   fixes and documentation improvements don't need issues.\r\n3. New features and bug fixes must have tests. Documentation may need to\r\n   be updated. If you're unsure what to update, send the PR, and we'll discuss\r\n   in review.\r\n4. Note that PRs updating dependencies and new Go versions are not accepted.\r\n   Please file an issue instead.\r\n-->\r\n\r\n**What type of PR is this?**\r\n\r\nBug fix\r\n\r\n\r\n**What does this PR do? Why is it needed?**\r\n\r\nSimilar to https://github.com/prysmaticlabs/prysm/pull/13016\r\n\r\n",
    "merged_at": "2023-10-22T15:12:56Z",
    "repo": "prysm"
  },
  {
    "html_url": "https://github.com/prysmaticlabs/prysm/pull/13016",
    "id": 1932149719,
    "number": 13016,
    "title": "beacon-chain/execution: fix a data race in testcase",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2023-10-09T01:08:34Z",
    "updated_at": "2023-10-11T04:35:50Z",
    "closed_at": "2023-10-11T03:37:26Z",
    "draft": false,
    "body": "<!-- Thanks for sending a PR! Before submitting:\r\n\r\n1. If this is your first PR, check out our contribution guide here https://docs.prylabs.network/docs/contribute/contribution-guidelines\r\n   You will then need to sign our Contributor License Agreement (CLA), which will show up as a comment from a bot in this pull request after you open it. We cannot review code without a signed CLA.\r\n2. Please file an associated tracking issue if this pull request is non-trivial and requires context for our team to understand. All features and most bug fixes should have\r\n   an associated issue with a design discussed and decided upon. Small bug\r\n   fixes and documentation improvements don't need issues.\r\n3. New features and bug fixes must have tests. Documentation may need to\r\n   be updated. If you're unsure what to update, send the PR, and we'll discuss\r\n   in review.\r\n4. Note that PRs updating dependencies and new Go versions are not accepted.\r\n   Please file an issue instead.\r\n-->\r\n\r\n**What type of PR is this?**\r\n\r\n> Uncomment one line below and remove others.\r\n>\r\nBug fix\r\n\r\n\r\n**What does this PR do? Why is it needed?**\r\n\r\nFix a data race in the test case:\r\n\r\n\r\n```bash\r\n# go test -tags develop ./beacon-chain/execution/ -v -race \r\n\r\n\r\n==================\r\nWARNING: DATA RACE\r\nRead at 0x00c0005724b8 by goroutine 144:\r\n  github.com/prysmaticlabs/prysm/v4/beacon-chain/execution.(*Service).run()\r\n      /root/.go/src/github.com/ethereum/prysm/beacon-chain/execution/service.go:606 +0x148\r\n  github.com/prysmaticlabs/prysm/v4/beacon-chain/execution.TestLatestMainchainInfo_OK.func2()\r\n      /root/.go/src/github.com/ethereum/prysm/beacon-chain/execution/block_reader_test.go:54 +0x64\r\n\r\nPrevious write at 0x00c0005724b8 by goroutine 128:\r\n  github.com/prysmaticlabs/prysm/v4/beacon-chain/execution.TestLatestMainchainInfo_OK()\r\n      /root/.go/src/github.com/ethereum/prysm/beacon-chain/execution/block_reader_test.go:62 +0xa04\r\n  testing.tRunner()\r\n      /usr/local/go/src/testing/testing.go:1576 +0x216\r\n  testing.(*T).Run.func1()\r\n      /usr/local/go/src/testing/testing.go:1629 +0x47\r\n\r\nGoroutine 144 (running) created at:\r\n  github.com/prysmaticlabs/prysm/v4/beacon-chain/execution.TestLatestMainchainInfo_OK()\r\n      /root/.go/src/github.com/ethereum/prysm/beacon-chain/execution/block_reader_test.go:53 +0x8aa\r\n  testing.tRunner()\r\n      /usr/local/go/src/testing/testing.go:1576 +0x216\r\n  testing.(*T).Run.func1()\r\n      /usr/local/go/src/testing/testing.go:1629 +0x47\r\n\r\nGoroutine 128 (running) created at:\r\n  testing.(*T).Run()\r\n      /usr/local/go/src/testing/testing.go:1629 +0x805\r\n  testing.runTests.func1()\r\n      /usr/local/go/src/testing/testing.go:2036 +0x8d\r\n  testing.tRunner()\r\n      /usr/local/go/src/testing/testing.go:1576 +0x216\r\n  testing.runTests()\r\n      /usr/local/go/src/testing/testing.go:2034 +0x87c\r\n  testing.(*M).Run()\r\n      /usr/local/go/src/testing/testing.go:1906 +0xb44\r\n  github.com/prysmaticlabs/prysm/v4/beacon-chain/execution.TestMain()\r\n      /root/.go/src/github.com/ethereum/prysm/beacon-chain/execution/execution_chain_test.go:14 +0x9a\r\n  main.main()\r\n      _testmain.go:217 +0x324\r\n==================\r\n\r\n\r\n\r\n```\r\n\r\n\r\n\r\n**Other notes for review**\r\n",
    "merged_at": "2023-10-11T03:37:26Z",
    "repo": "prysm"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/28217",
    "id": 1917001295,
    "number": 28217,
    "title": "cmd/geth: add --noenv to disable the use of environment variables",
    "state": "closed",
    "locked": false,
    "comments": 2,
    "created_at": "2023-09-28T08:41:06Z",
    "updated_at": "2023-09-28T09:17:50Z",
    "closed_at": "2023-09-28T09:17:49Z",
    "draft": false,
    "body": "try to fix https://github.com/ethereum/go-ethereum/issues/28210",
    "merged_at": null,
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/28211",
    "id": 1915879983,
    "number": 28211,
    "title": "internal,cmd: validation of port flags",
    "state": "closed",
    "locked": false,
    "comments": 3,
    "created_at": "2023-09-27T15:54:08Z",
    "updated_at": "2023-10-03T08:28:46Z",
    "closed_at": "2023-10-03T08:28:45Z",
    "draft": false,
    "body": "After adding the validation, the geth process will check the `xxx.port` flags, eg:\r\n\r\n```bash\r\n$ ./build/bin/geth --port=303012\r\nFlag port value 303012 out of range[0-65535]\r\n\r\n$ GETH_PORT=123456 ./build/bin/geth\r\nINFO [09-27|23:51:22.974] Config environment variable found        envvar=GETH_PORT\r\nFlag port value 123456 out of range[0-65535]\r\n\r\n$ GETH_AUTHRPC_PORT=123456 ./build/bin/geth\r\nINFO [09-27|23:51:35.643] Config environment variable found        envvar=GETH_AUTHRPC_PORT\r\nFlag authrpc.port value 123456 out of range[0-65535]\r\n\r\n```",
    "merged_at": null,
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/28207",
    "id": 1913448183,
    "number": 28207,
    "title": "internal/ethapi: compact db missing key starts with 0xff",
    "state": "closed",
    "locked": false,
    "comments": 2,
    "created_at": "2023-09-26T12:52:30Z",
    "updated_at": "2023-10-03T07:52:09Z",
    "closed_at": "2023-09-28T09:04:46Z",
    "draft": false,
    "body": null,
    "merged_at": "2023-09-28T09:04:46Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/28189",
    "id": 1911228912,
    "number": 28189,
    "title": "all: replace golang.org/x/exp/slices with builtin slices",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2023-09-25T11:00:34Z",
    "updated_at": "2023-09-25T12:00:15Z",
    "closed_at": "2023-09-25T12:00:14Z",
    "draft": false,
    "body": "The builtin `slices` was introduced in go1.21 https://tip.golang.org/doc/go1.21#slices, so we can use the builtin one.",
    "merged_at": null,
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/28180",
    "id": 1908427357,
    "number": 28180,
    "title": "core/rawdb: use ro lock in readonly mode",
    "state": "closed",
    "locked": false,
    "comments": 2,
    "created_at": "2023-09-22T08:21:53Z",
    "updated_at": "2023-09-25T13:07:09Z",
    "closed_at": "2023-09-22T10:10:51Z",
    "draft": false,
    "body": null,
    "merged_at": "2023-09-22T10:10:51Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/execution-apis/pull/471",
    "id": 1905966731,
    "number": 471,
    "title": "graphql: add field yParity",
    "state": "closed",
    "locked": false,
    "comments": 7,
    "created_at": "2023-09-21T02:20:02Z",
    "updated_at": "2023-11-08T22:01:24Z",
    "closed_at": "2023-11-08T22:01:24Z",
    "draft": false,
    "body": null,
    "merged_at": "2023-11-08T22:01:24Z",
    "repo": "execution-apis"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/28162",
    "id": 1903932564,
    "number": 28162,
    "title": "accounts/abi: simulate detail insufficient fund for EstimateGas",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2023-09-20T01:29:21Z",
    "updated_at": "2023-12-05T17:44:54Z",
    "closed_at": "2023-12-05T17:44:54Z",
    "draft": false,
    "body": "similar to https://github.com/ethereum/go-ethereum/pull/28161",
    "merged_at": null,
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/28160",
    "id": 1903848011,
    "number": 28160,
    "title": "cmd/clef: suppress fsnotify error if keydir not exists",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2023-09-19T23:19:37Z",
    "updated_at": "2023-09-20T10:39:47Z",
    "closed_at": "2023-09-20T10:39:46Z",
    "draft": false,
    "body": "close https://github.com/ethereum/go-ethereum/issues/28132\r\n\r\nAs the keydir will be automatically created after an account is created, no error message if the watcher is failed. ",
    "merged_at": "2023-09-20T10:39:46Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/28150",
    "id": 1902054263,
    "number": 28150,
    "title": "cmd/geth: ensure db is closed before exit",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2023-09-19T01:41:41Z",
    "updated_at": "2023-09-25T16:28:27Z",
    "closed_at": "2023-09-25T16:28:20Z",
    "draft": false,
    "body": null,
    "merged_at": "2023-09-25T16:28:20Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/28148",
    "id": 1901360627,
    "number": 28148,
    "title": "cmd/geth: remove some whitespace in code and comments",
    "state": "closed",
    "locked": false,
    "comments": 8,
    "created_at": "2023-09-18T16:50:36Z",
    "updated_at": "2023-11-28T08:27:47Z",
    "closed_at": "2023-11-10T12:26:14Z",
    "draft": false,
    "body": "Failed to run a geth node after ancient data was corrupted:\r\n\r\n```\r\nChain metadata\r\n  databaseVersion: 8 (0x8)\r\n  headBlockHash: 0xd4e56740f876aef8c010b86a40d5f56745a118d0906a34e69aec8c0db1cb8fa3\r\n  headFastBlockHash: 0xd4e56740f876aef8c010b86a40d5f56745a118d0906a34e69aec8c0db1cb8fa3\r\n  headHeaderHash: 0xb16567962aed043c2bb04533c896799868f120e3765d2a0e35f1ef2b54fc71fd\r\n  lastPivotNumber: 18163097 (0x1152599)\r\n  len(snapshotSyncStatus): 6865 bytes\r\n  snapshotDisabled: true\r\n  snapshotJournal: 0 bytes\r\n  snapshotRecoveryNumber: <nil>\r\n  snapshotRoot: 0x0000000000000000000000000000000000000000000000000000000000000000\r\n  txIndexTail: <nil>\r\n  fastTxLookupLimit: <nil>\r\n  SkeletonSyncStatus: {\"Subchains\":[{\"Head\":18163210,\"Tail\":8949192,\"Next\":\"0xf7742ce39ebf9542ff8a638f08043dd5d692d1488895a1c75d9df6f9d8d41000\"}],\"Finalized\":18163124}\r\n\r\n\r\n\r\n\r\nFatal: Could not open database: freezer tables receipts and headers have differing head: 8683252 != 8683253\r\nFatal: Could not open database: freezer tables receipts and headers have differing head: 8683252 != 8683253\r\n```\r\n\r\nAfter some digging, found this error resulted from where we are opening the ancient db in `ro` mode in `tryMakeReadOnlyDatabase` and could not take the initiative to fix it https://github.com/ethereum/go-ethereum/blob/90d5bd85bcf2919ac2735a47fde675213348a0a6/cmd/utils/flags.go#L2093-L2101\r\n\r\nthe full stack as below:\r\n\r\n```\r\ngithub.com/ethereum/go-ethereum/core/rawdb.NewFreezer({0xc0020b2780, 0x22}, {0x0, 0x0}, 0x1, 0x0?, 0xc0002fe720)\r\n     github.com/ethereum/go-ethereum/core/rawdb/freezer.go:94 +0x21d\r\ngithub.com/ethereum/go-ethereum/core/rawdb.NewChainFreezer(...)\r\n     github.com/ethereum/go-ethereum/core/rawdb/freezer.go:83\r\ngithub.com/ethereum/go-ethereum/core/rawdb.newChainFreezer({0xc0020b2780?, 0x1c?}, {0x0?, 0xc002844b98?}, 0x58?)\r\n     github.com/ethereum/go-ethereum/core/rawdb/chain_freezer.go:56 +0x2f\r\ngithub.com/ethereum/go-ethereum/core/rawdb.NewDatabaseWithFreezer({0x7f9f3541e0a8?, 0xc00292b690}, {0xc000522280, 0x1c}, {0x0, 0x0}, 0x0?)\r\n     github.com/ethereum/go-ethereum/core/rawdb/database.go:202 +0x7f\r\ngithub.com/ethereum/go-ethereum/core/rawdb.Open({{0x7ffc4e16fcad, 0x6}, {0xc000489a58, 0x14}, {0xc000522280, 0x1c}, {0x0, 0x0}, 0x9a8, 0x8000, ...})\r\n     github.com/ethereum/go-ethereum/core/rawdb/database.go:413 +0xa9\r\ngithub.com/ethereum/go-ethereum/node.(*Node).OpenDatabaseWithFreezer(0xc0001c7180, {0x195bed3, 0x9}, 0x9a8, 0x8000, {0x0, 0x0}, {0x0, 0x0}, 0x1)\r\n     github.com/ethereum/go-ethereum/node/node.go:758 +0x338\r\ngithub.com/ethereum/go-ethereum/cmd/utils.MakeChainDatabase(0xc0004d97e8?, 0x14?, 0x9?)\r\n     github.com/ethereum/go-ethereum/cmd/utils/flags.go:2083 +0x38b\r\ngithub.com/ethereum/go-ethereum/cmd/utils.tryMakeReadOnlyDatabase(0x0?, 0xc0001c7180)\r\n     github.com/ethereum/go-ethereum/cmd/utils/flags.go:2100 +0x4a\r\n```\r\n\r\n\r\nSo I think, in `tryMakeReadOnlyDatabase` what we care about is the `chaindata`, no need to open the `ancientdb`, and for the corrupted ancient db, let the later `rw` mode fix it.\r\n",
    "merged_at": "2023-11-10T12:26:14Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/28145",
    "id": 1900641884,
    "number": 28145,
    "title": "core/rawdb: no need to run truncateFile for readonly mode",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2023-09-18T10:33:19Z",
    "updated_at": "2023-09-21T08:05:56Z",
    "closed_at": "2023-09-21T08:05:56Z",
    "draft": false,
    "body": "If a file was opened in read-only mode, the `file.Truncate` will return the error: `truncate xxx: invalid argument`. Let's skip it.",
    "merged_at": "2023-09-21T08:05:56Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/28140",
    "id": 1900418547,
    "number": 28140,
    "title": "core/rawdb: fix typo in comment",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2023-09-18T08:22:48Z",
    "updated_at": "2023-09-19T13:35:17Z",
    "closed_at": "2023-09-19T11:43:37Z",
    "draft": false,
    "body": null,
    "merged_at": "2023-09-19T11:43:37Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/28139",
    "id": 1900296310,
    "number": 28139,
    "title": "cmd/devp2p: use bootnodes as crawl input",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2023-09-18T07:01:55Z",
    "updated_at": "2023-09-19T12:23:12Z",
    "closed_at": "2023-09-19T12:18:29Z",
    "draft": false,
    "body": "In This PR, we can use `--bootnodes` to start a `devp2p crawl`, the flag will take effect if the input/output.json file is missing or empty. Also in this PR, we cannot begin crawling if no input nodes are provided.\r\n\r\n\r\nclose https://github.com/ethereum/go-ethereum/issues/27942",
    "merged_at": "2023-09-19T12:18:29Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/28089",
    "id": 1890122837,
    "number": 28089,
    "title": "cmd/geth: support alloc file in dev-mode",
    "state": "closed",
    "locked": false,
    "comments": 12,
    "created_at": "2023-09-11T09:52:07Z",
    "updated_at": "2024-01-12T07:28:01Z",
    "closed_at": "2024-01-12T07:28:00Z",
    "draft": false,
    "body": null,
    "merged_at": null,
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/prysmaticlabs/prysm/pull/12832",
    "id": 1874725513,
    "number": 12832,
    "title": "beacon-node/state:  alloc 1more item for append case",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2023-08-31T03:29:03Z",
    "updated_at": "2023-10-08T12:48:06Z",
    "closed_at": "2023-10-03T20:41:55Z",
    "draft": false,
    "body": "<!-- Thanks for sending a PR! Before submitting:\r\n\r\n1. If this is your first PR, check out our contribution guide here https://docs.prylabs.network/docs/contribute/contribution-guidelines\r\n   You will then need to sign our Contributor License Agreement (CLA), which will show up as a comment from a bot in this pull request after you open it. We cannot review code without a signed CLA.\r\n2. Please file an associated tracking issue if this pull request is non-trivial and requires context for our team to understand. All features and most bug fixes should have\r\n   an associated issue with a design discussed and decided upon. Small bug\r\n   fixes and documentation improvements don't need issues.\r\n3. New features and bug fixes must have tests. Documentation may need to\r\n   be updated. If you're unsure what to update, send the PR, and we'll discuss\r\n   in review.\r\n4. Note that PRs updating dependencies and new Go versions are not accepted.\r\n   Please file an issue instead.\r\n-->\r\n\r\n**What type of PR is this?**\r\n\r\nOther(improvement)\r\n\r\n**What does this PR do? Why is it needed?**\r\n\r\nReduce memory alloc times for the state appending case\r\n\r\n**Which issues(s) does this PR fix?**\r\n\r\nFixes #\r\n\r\n**Other notes for review**\r\n",
    "merged_at": "2023-10-03T20:41:55Z",
    "repo": "prysm"
  },
  {
    "html_url": "https://github.com/prysmaticlabs/prysm/pull/12826",
    "id": 1871367625,
    "number": 12826,
    "title": "beacon-chain/execution: no need to reread and unmarshal the eth1Data twice",
    "state": "closed",
    "locked": false,
    "comments": 7,
    "created_at": "2023-08-29T10:31:26Z",
    "updated_at": "2023-10-09T05:51:52Z",
    "closed_at": "2023-10-09T05:51:52Z",
    "draft": false,
    "body": "\r\n\r\n<!-- Thanks for sending a PR! Before submitting:\r\n\r\n1. If this is your first PR, check out our contribution guide here https://docs.prylabs.network/docs/contribute/contribution-guidelines\r\n   You will then need to sign our Contributor License Agreement (CLA), which will show up as a comment from a bot in this pull request after you open it. We cannot review code without a signed CLA.\r\n2. Please file an associated tracking issue if this pull request is non-trivial and requires context for our team to understand. All features and most bug fixes should have\r\n   an associated issue with a design discussed and decided upon. Small bug\r\n   fixes and documentation improvements don't need issues.\r\n3. New features and bug fixes must have tests. Documentation may need to\r\n   be updated. If you're unsure what to update, send the PR, and we'll discuss\r\n   in review.\r\n4. Note that PRs updating dependencies and new Go versions are not accepted.\r\n   Please file an issue instead.\r\n-->\r\n\r\n**What type of PR is this?**\r\n\r\nOther\r\n\r\n**What does this PR do? Why is it needed?**\r\n\r\nThe powChain data maybe large(100MB on goerlia testnet, maybe larger on mainnet), and it consumed much memory to unmarshal the protobuf bytes into `ETH1ChainData`, and \r\n inside the `ensureValidPowchainData`, we will also read powchain date, so no need to read(unmarshal) the same data twice.\r\n",
    "merged_at": "2023-10-09T05:51:52Z",
    "repo": "prysm"
  },
  {
    "html_url": "https://github.com/prysmaticlabs/prysm/pull/12818",
    "id": 1869669141,
    "number": 12818,
    "title": "beacon-chain/execution: use pointer instead of value to reduce copy",
    "state": "closed",
    "locked": false,
    "comments": 3,
    "created_at": "2023-08-28T12:30:01Z",
    "updated_at": "2023-08-29T13:24:54Z",
    "closed_at": "2023-08-29T13:24:54Z",
    "draft": false,
    "body": "\r\n<!-- Thanks for sending a PR! Before submitting:\r\n\r\n1. If this is your first PR, check out our contribution guide here https://docs.prylabs.network/docs/contribute/contribution-guidelines\r\n   You will then need to sign our Contributor License Agreement (CLA), which will show up as a comment from a bot in this pull request after you open it. We cannot review code without a signed CLA.\r\n2. Please file an associated tracking issue if this pull request is non-trivial and requires context for our team to understand. All features and most bug fixes should have\r\n   an associated issue with a design discussed and decided upon. Small bug\r\n   fixes and documentation improvements don't need issues.\r\n3. New features and bug fixes must have tests. Documentation may need to\r\n   be updated. If you're unsure what to update, send the PR, and we'll discuss\r\n   in review.\r\n4. Note that PRs updating dependencies and new Go versions are not accepted.\r\n   Please file an issue instead.\r\n-->\r\n\r\n**What type of PR is this?**\r\n\r\nOther(improvement)\r\n\r\n**What does this PR do? Why is it needed?**\r\n\r\nIn prysm's heap profile, I see a lot of memory(14%) is hold inside the `ProcessLog`  \r\n\r\n<img width=\"1829\" alt=\"image\" src=\"https://github.com/prysmaticlabs/prysm/assets/3627395/3b9ab7a8-714e-43b5-abca-c1752f47e9d6\">\r\n\r\nAnd after some digging, seems it was caused by the value copy\r\n\r\n\r\n",
    "merged_at": "2023-08-29T13:24:54Z",
    "repo": "prysm"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/28014",
    "id": 1868310540,
    "number": 28014,
    "title": "core/rawdb: don't warn for missing \"unclean shutdown markers\"",
    "state": "closed",
    "locked": false,
    "comments": 3,
    "created_at": "2023-08-27T00:40:22Z",
    "updated_at": "2023-09-06T10:29:52Z",
    "closed_at": "2023-09-06T10:29:52Z",
    "draft": false,
    "body": "When a new node is run, especially when running with `--dev` mode, there is always a log below:\r\n\r\n\r\n```\r\nWARN [08-27|08:38:16.585] Error reading unclean shutdown markers   error=\"not found\"\r\n```",
    "merged_at": "2023-09-06T10:29:52Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/28009",
    "id": 1867846539,
    "number": 28009,
    "title": "core/types: reimplement log.EncodeRLP",
    "state": "closed",
    "locked": false,
    "comments": 5,
    "created_at": "2023-08-26T01:32:57Z",
    "updated_at": "2023-09-14T06:14:44Z",
    "closed_at": "2023-09-13T12:00:38Z",
    "draft": false,
    "body": "fix https://github.com/ethereum/go-ethereum/issues/28008",
    "merged_at": null,
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27992",
    "id": 1863547255,
    "number": 27992,
    "title": "eth/catalyst: reset to current header if chain is rewound (in dev mode)",
    "state": "closed",
    "locked": false,
    "comments": 2,
    "created_at": "2023-08-23T15:18:44Z",
    "updated_at": "2023-10-11T11:29:42Z",
    "closed_at": "2023-08-25T19:38:28Z",
    "draft": false,
    "body": "fix https://github.com/ethereum/go-ethereum/issues/27990",
    "merged_at": "2023-08-25T19:38:28Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27985",
    "id": 1863061780,
    "number": 27985,
    "title": "cmd/geth: use free port then random",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2023-08-23T10:39:06Z",
    "updated_at": "2023-08-27T19:04:08Z",
    "closed_at": "2023-08-27T19:04:08Z",
    "draft": false,
    "body": "An `address already in use` error raised In [this CI build](https://ci.appveyor.com/project/ethereum/go-ethereum/builds/47858167/job/3mo406m7xcimlnqr): \r\n\r\n```\r\n    test_cmd.go:261: (stderr:21) Fatal: Error starting protocol stack: listen tcp 127.0.0.1:33352: bind: address already in use\r\n    --- FAIL: TestAttachWelcome/ipc (3.01s)\r\n        run_test.go:107: endpoint /tmp/TestAttachWelcome679703622/001/geth.ipc did not open within 3s\r\n    --- FAIL: TestAttachWelcome/http (3.01s)\r\n        run_test.go:107: endpoint http://127.0.0.1:33351 did not open within 3s\r\n    --- FAIL: TestAttachWelcome/ws (3.01s)\r\n        run_test.go:107: endpoint ws://127.0.0.1:33352 did not open within 3s\r\nFAIL\r\nFAIL\tgithub.com/ethereum/go-ethereum/cmd/geth\t29.641s\r\n```\r\n\r\nSo maybe we can check the port availability before using it to reduce the failure",
    "merged_at": null,
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27979",
    "id": 1862536912,
    "number": 27979,
    "title": "eth/catalyst: disable heartbeat for simulated beacon node",
    "state": "closed",
    "locked": false,
    "comments": 2,
    "created_at": "2023-08-23T04:16:19Z",
    "updated_at": "2023-08-24T11:03:13Z",
    "closed_at": "2023-08-24T08:48:10Z",
    "draft": false,
    "body": "When running geth with `--dev` mode, there are a lot of disturbing warning messages as below:\r\n\r\n```\r\n> WARN [08-23|11:54:51.740] Beacon client online, but no consensus updates received in a while. Please fix your beacon client to follow the chain!\r\n> WARN [08-23|11:59:51.786] Beacon client online, but no consensus updates received in a while. Please fix your beacon client to follow the chain!\r\n```\r\n\r\nThis PR disabled the heartbeat to remove those messages.",
    "merged_at": "2023-08-24T08:48:10Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27978",
    "id": 1862480077,
    "number": 27978,
    "title": "graphql: fix nil deref on a timer",
    "state": "closed",
    "locked": false,
    "comments": 2,
    "created_at": "2023-08-23T02:59:44Z",
    "updated_at": "2023-08-23T07:48:04Z",
    "closed_at": "2023-08-23T07:47:43Z",
    "draft": false,
    "body": null,
    "merged_at": "2023-08-23T07:47:43Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27963",
    "id": 1860512800,
    "number": 27963,
    "title": "graphql: add 4844 blob fields",
    "state": "closed",
    "locked": false,
    "comments": 2,
    "created_at": "2023-08-22T04:15:25Z",
    "updated_at": "2023-09-14T08:23:23Z",
    "closed_at": "2023-09-14T08:23:17Z",
    "draft": false,
    "body": null,
    "merged_at": "2023-09-14T08:23:17Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27945",
    "id": 1854588660,
    "number": 27945,
    "title": "eth/downloader: fix rare crash when parent header missing in db",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2023-08-17T09:12:38Z",
    "updated_at": "2023-08-17T21:15:39Z",
    "closed_at": "2023-08-17T21:15:31Z",
    "draft": false,
    "body": "fix https://github.com/ethereum/go-ethereum/issues/27931",
    "merged_at": "2023-08-17T21:15:31Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/execution-apis/pull/458",
    "id": 1852025823,
    "number": 458,
    "title": "eth: add tx,receipt EIP4844 fields",
    "state": "closed",
    "locked": false,
    "comments": 2,
    "created_at": "2023-08-15T19:45:59Z",
    "updated_at": "2023-09-18T01:11:58Z",
    "closed_at": "2023-09-05T12:28:48Z",
    "draft": false,
    "body": null,
    "merged_at": null,
    "repo": "execution-apis"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27924",
    "id": 1849868911,
    "number": 27924,
    "title": "node: increase batch limits for auth rpc API",
    "state": "closed",
    "locked": false,
    "comments": 4,
    "created_at": "2023-08-14T14:14:24Z",
    "updated_at": "2023-08-17T02:22:54Z",
    "closed_at": "2023-08-16T13:26:50Z",
    "draft": false,
    "body": "Fixes https://github.com/ethereum/go-ethereum/issues/27923\r\n\r\nThis raises the JSON-RPC batch request limits significantly for the engine API endpoint.\r\nThe limits are now also hard-coded, so users won't get them wrong. I have chosen these limits:\r\n\r\n- maximum batch items: 2000\r\n- maximum batch response size: 250MB\r\n\r\nWhile it would also be possible to disable batch limits completely for the engine API, I think having\r\nthe limits is a good safety net against misbehaving CLs.",
    "merged_at": "2023-08-16T13:26:50Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27917",
    "id": 1848507043,
    "number": 27917,
    "title": "cmd/utils: restore support for txlookuplimit flag",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2023-08-13T09:31:45Z",
    "updated_at": "2023-08-14T13:31:57Z",
    "closed_at": "2023-08-14T12:58:01Z",
    "draft": false,
    "body": "We need to be backward compatible with the old `--txlookuplimit` parameter",
    "merged_at": "2023-08-14T12:58:01Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27908",
    "id": 1846967226,
    "number": 27908,
    "title": "docker: reduce docker build context sending",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2023-08-11T14:54:56Z",
    "updated_at": "2023-08-11T15:17:42Z",
    "closed_at": "2023-08-11T15:17:42Z",
    "draft": false,
    "body": "go-ethereum's .git directory now is 200MB+, and docker build will sent all the contents in the working dir except for the file patterns specified in `.dockerignore`, eg:\r\n\r\n```bash\r\n$ git clone https://github.com/ethereum/go-ethereum && cd go-ethereum\r\n$ docker build -t ethereum .\r\nSending build context to Docker daemon  251.8MB\r\nStep 1/19 : ARG COMMIT=\"\"\r\n```\r\n\r\nIt will send 251.8MB into docker daemon. \r\n\r\n\r\nAfter adding more build unnecessary files in `.dockerignore`:\r\n\r\n```diff\r\n-build/_workspace\r\n-build/_bin\r\n+.git/\r\n+build/\r\n+!build/ci.go\r\n```\r\n\r\n\r\n```bash\r\n$ docker build -t ethereum .\r\nSending build context to Docker daemon  36.12MB\r\n```\r\n\r\nThen it is reduced to 36MB only, this will speed up the building process\r\n\r\n",
    "merged_at": null,
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27904",
    "id": 1846089745,
    "number": 27904,
    "title": "ethdb/leveldb: support more than 7 levels in metrics",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2023-08-11T01:48:54Z",
    "updated_at": "2023-08-21T13:27:48Z",
    "closed_at": "2023-08-11T13:15:50Z",
    "draft": false,
    "body": "fix https://github.com/ethereum/go-ethereum/issues/27902",
    "merged_at": "2023-08-11T13:15:50Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27892",
    "id": 1844558320,
    "number": 27892,
    "title": "docs/interacting-with-geth/rpc: don't set header for Example,Parameters",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2023-08-10T07:10:48Z",
    "updated_at": "2023-08-16T21:42:39Z",
    "closed_at": "2023-08-16T21:42:39Z",
    "draft": false,
    "body": "Currently, there are many `Example,Parameters` tags on the right side, so it's hard to switch between other useful rpc methods\r\n\r\n<img width=\"272\" alt=\"image\" src=\"https://github.com/ethereum/go-ethereum/assets/3627395/11bc450f-d89e-4b62-adfe-c57a27fb41a4\">\r\n\r\n<img width=\"197\" alt=\"image\" src=\"https://github.com/ethereum/go-ethereum/assets/3627395/b05c014e-be88-48a7-b6f6-e2054829f49d\">\r\n",
    "merged_at": "2023-08-16T21:42:39Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27882",
    "id": 1841279046,
    "number": 27882,
    "title": "graphql: add yParity field for transactions",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2023-08-08T13:04:23Z",
    "updated_at": "2023-08-09T16:24:57Z",
    "closed_at": "2023-08-09T15:57:58Z",
    "draft": false,
    "body": null,
    "merged_at": "2023-08-09T15:57:58Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/hive/pull/817",
    "id": 1840795823,
    "number": 817,
    "title": "all: remove uses of package io/ioutil",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2023-08-08T08:04:59Z",
    "updated_at": "2023-08-12T09:31:18Z",
    "closed_at": "2023-08-12T09:18:13Z",
    "draft": false,
    "body": null,
    "merged_at": "2023-08-12T09:18:13Z",
    "repo": "hive"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27847",
    "id": 1835352369,
    "number": 27847,
    "title": "core: ensure txindex will be triggered at least once",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2023-08-03T16:11:28Z",
    "updated_at": "2023-08-22T02:18:49Z",
    "closed_at": "2023-08-22T00:58:20Z",
    "draft": false,
    "body": "Currently, we trigger the logic to (un)index transactions when the node receives a new block. However, in some cases the node may not receive new blocks (eg, when the Geth node is configured with `--nodiscovery`, or when it acts as an RPC node for historical only data). \r\nIn these situations, the Geth node user may not have previously configured `txlookuplimit` (i.e. the default of around one year), but later he realizes they need to index all historical blocks. However, adding `txlookuplimit=0` and restarting geth has no effect.\r\n\r\nSo in this case, I think if we start a timer, there would at least be one opportunity to run the indexing process.",
    "merged_at": "2023-08-22T00:58:20Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27834",
    "id": 1831588454,
    "number": 27834,
    "title": "internal/ethapi: ethSendTransaction check baseFee",
    "state": "closed",
    "locked": false,
    "comments": 3,
    "created_at": "2023-08-01T16:00:00Z",
    "updated_at": "2023-12-20T09:43:18Z",
    "closed_at": "2023-12-18T19:09:41Z",
    "draft": false,
    "body": "This is a similar issue to https://github.com/ethereum/go-ethereum/pull/27833, but this is for the `eth_sendTransaction` RPC.\r\n\r\nWhen I send the transaction with\r\n\r\n*  `gasPrice=1` => failed \u274c \r\n*  `gasPrice=0` => success \ud83c\udd97 \r\n\r\n\r\n<img width=\"2120\" alt=\"image\" src=\"https://github.com/ethereum/go-ethereum/assets/3627395/f3e23c62-53a6-4c73-b98e-6bc846704098\">\r\n\r\n\r\nAfter some dig, and talking with @rjl493456442 found the issue occurred by `estimateGas`,\r\n\r\n\r\nthe stack trace as below:\r\n\r\n<img width=\"759\" alt=\"image\" src=\"https://github.com/ethereum/go-ethereum/assets/3627395/ade3b2f7-9faf-4674-916c-f8d88aef24cd\">\r\n\r\n\r\nSo when I call `estimateGas`, I distinguish between a call from `eth_call` or submitted transaction\r\n",
    "merged_at": "2023-12-18T19:09:41Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27833",
    "id": 1831540344,
    "number": 27833,
    "title": "core/txpool: drop the zero balance",
    "state": "closed",
    "locked": false,
    "comments": 3,
    "created_at": "2023-08-01T15:33:34Z",
    "updated_at": "2023-09-05T12:25:38Z",
    "closed_at": "2023-09-05T12:25:38Z",
    "draft": false,
    "body": "As the `tx.Cost()` equals to https://github.com/ethereum/go-ethereum/blob/7de748d3f62cec172ddf0dda110beca55648f306/core/types/transaction.go#L312\r\n\r\nBut someone maybe sends a tx with zero gasPrice and zero value so that the later check will be passed https://github.com/ethereum/go-ethereum/blob/7de748d3f62cec172ddf0dda110beca55648f306/core/txpool/validation.go#L211\r\n\r\nBut after EIP1559, a base fee should be always be paid out, if the EOA's balance is zero, we don't need to add this tx into txpool.\r\n",
    "merged_at": null,
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27828",
    "id": 1830737408,
    "number": 27828,
    "title": "consensus/misc: move eip1559 into a package",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2023-08-01T08:30:00Z",
    "updated_at": "2023-08-01T09:58:46Z",
    "closed_at": "2023-08-01T09:58:46Z",
    "draft": false,
    "body": "AS in PR #27743 we move eip4844 into a package, and in this PR we've also moved in eip1559",
    "merged_at": "2023-08-01T09:58:46Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27825",
    "id": 1830411078,
    "number": 27825,
    "title": "all: replace data gas to blob gas in comments",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2023-08-01T03:50:21Z",
    "updated_at": "2023-08-01T07:07:25Z",
    "closed_at": "2023-08-01T07:07:25Z",
    "draft": false,
    "body": null,
    "merged_at": "2023-08-01T07:07:25Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27818",
    "id": 1828605912,
    "number": 27818,
    "title": "internal/ethapi: add testcases for blobTx",
    "state": "closed",
    "locked": false,
    "comments": 4,
    "created_at": "2023-07-31T07:47:38Z",
    "updated_at": "2023-08-22T00:53:36Z",
    "closed_at": "2023-08-22T00:53:30Z",
    "draft": false,
    "body": null,
    "merged_at": "2023-08-22T00:53:30Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27814",
    "id": 1828503083,
    "number": 27814,
    "title": "cmd/geth: disable automaxprocs log",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2023-07-31T06:34:47Z",
    "updated_at": "2023-08-01T17:18:47Z",
    "closed_at": "2023-08-01T16:02:37Z",
    "draft": false,
    "body": "Disable the annoying automaxproc logs\r\n\r\neg: \r\n\r\n```bash\r\n$ ./build/bin/geth --version\r\n\r\n2023/07/31 14:30:26 maxprocs: Leaving GOMAXPROCS=8: CPU quota undefined\r\ngeth version 1.12.1-unstable-xyz\r\n```\r\n\r\nRef https://github.com/uber-go/automaxprocs/issues/18\r\n\r\nAnd we only set CPU limit in geth main process\r\n",
    "merged_at": "2023-08-01T16:02:37Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27797",
    "id": 1826093721,
    "number": 27797,
    "title": "core: check excessBlobGas in front",
    "state": "closed",
    "locked": false,
    "comments": 3,
    "created_at": "2023-07-28T09:40:32Z",
    "updated_at": "2023-07-31T07:54:26Z",
    "closed_at": "2023-07-31T07:54:26Z",
    "draft": false,
    "body": "We should check ExcessBlobGas before `buyGas`, or else an nil pointer error is occurred",
    "merged_at": "2023-07-31T07:54:26Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27796",
    "id": 1825901736,
    "number": 27796,
    "title": "cmd/evm: set ExcessBlobGas from env",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2023-07-28T07:53:24Z",
    "updated_at": "2023-08-03T02:56:49Z",
    "closed_at": "2023-08-01T11:58:27Z",
    "draft": false,
    "body": "close https://github.com/ethereum/go-ethereum/issues/27785 and https://github.com/ethereum/go-ethereum/issues/27730",
    "merged_at": "2023-08-01T11:58:27Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/erigontech/erigon/pull/7886",
    "id": 1803171554,
    "number": 7886,
    "title": "turbo/jsonrpc: eth_getBlockReceipts support by by hash",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2023-07-13T14:37:44Z",
    "updated_at": "2023-08-15T09:46:21Z",
    "closed_at": "2023-07-14T07:57:09Z",
    "draft": false,
    "body": null,
    "merged_at": "2023-07-14T07:57:09Z",
    "repo": "erigon"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27713",
    "id": 1802005137,
    "number": 27713,
    "title": "eth,miner: rm redundant type declare",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2023-07-13T01:54:33Z",
    "updated_at": "2023-07-13T07:50:59Z",
    "closed_at": "2023-07-13T06:55:31Z",
    "draft": false,
    "body": null,
    "merged_at": "2023-07-13T06:55:31Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27712",
    "id": 1801996190,
    "number": 27712,
    "title": "internal: fast exit if getTxReceipt notfound",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2023-07-13T01:42:03Z",
    "updated_at": "2023-07-13T10:42:49Z",
    "closed_at": "2023-07-13T10:42:49Z",
    "draft": false,
    "body": "In the eth backend, the `GetTransaction` will always return nil error, but the tx maybe is null, so we don't have to continue the following logic if tx notfound\r\n\r\n\r\nhttps://github.com/ethereum/go-ethereum/blob/4b06e4f25e9a97880ddf834b571b05a59fa1290c/eth/api_backend.go#L316-L319",
    "merged_at": "2023-07-13T10:42:49Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27704",
    "id": 1800353343,
    "number": 27704,
    "title": "eth/tracers: add ReturnData in the structLogger tracer's response",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2023-07-12T07:23:32Z",
    "updated_at": "2023-07-13T12:43:26Z",
    "closed_at": "2023-07-13T12:43:26Z",
    "draft": false,
    "body": "This PR fixes a bug, where the tracer was used through RPC return data of calls were being reported even if user configured `enableReturnData: true`. Return data will be formatted as a hex string.",
    "merged_at": "2023-07-13T12:43:26Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27702",
    "id": 1800044482,
    "number": 27702,
    "title": "internal/ethapi: implement eth_getBlockReceipts",
    "state": "closed",
    "locked": false,
    "comments": 5,
    "created_at": "2023-07-12T02:22:20Z",
    "updated_at": "2023-09-25T03:33:09Z",
    "closed_at": "2023-08-15T12:35:48Z",
    "draft": false,
    "body": "implment https://github.com/ethereum/execution-apis/pull/438",
    "merged_at": "2023-08-15T12:35:48Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/execution-apis/pull/438",
    "id": 1799149765,
    "number": 438,
    "title": "add eth_getBlockReceipts",
    "state": "closed",
    "locked": false,
    "comments": 9,
    "created_at": "2023-07-11T15:02:51Z",
    "updated_at": "2024-02-23T10:11:13Z",
    "closed_at": "2023-08-15T12:32:06Z",
    "draft": false,
    "body": "implement https://github.com/ethereum/execution-apis/issues/393",
    "merged_at": "2023-08-15T12:32:06Z",
    "repo": "execution-apis"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/3570",
    "id": 1787009873,
    "number": 3570,
    "title": "docker: don't ignore examples",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2023-07-04T01:47:51Z",
    "updated_at": "2023-07-04T12:48:06Z",
    "closed_at": "2023-07-04T12:48:06Z",
    "draft": false,
    "body": "I'm building the reth image with the following command:\r\n\r\n```bash\r\ndocker build -t jsvisa/reth .\r\n```\r\n\r\nbut failed with the following error:\r\n\r\n```\r\nSending build context to Docker daemon  83.15MB\r\nStep 1/21 : FROM lukemathwalker/cargo-chef:latest-rust-1 AS chef\r\n ---> 472d27704b24\r\nStep 2/21 : WORKDIR /app\r\n ---> Using cache\r\n ---> fb0718f22efe\r\nStep 3/21 : LABEL org.opencontainers.image.source=https://github.com/paradigmxyz/reth\r\n ---> Using cache\r\n ---> 475f992ba3e0\r\nStep 4/21 : LABEL org.opencontainers.image.licenses=\"MIT OR Apache-2.0\"\r\n ---> Using cache\r\n ---> 02be258ce0b8\r\nStep 5/21 : FROM chef AS planner\r\n ---> 02be258ce0b8\r\nStep 6/21 : COPY . .\r\n ---> 5f48eecab2ef\r\nStep 7/21 : RUN cargo chef prepare --recipe-path recipe.json\r\n ---> Running in 32a40a260113\r\nError: Failed to compute recipe\r\n\r\nCaused by:\r\n    0: Cannot extract Cargo metadata\r\n    1: `cargo metadata` exited with an error: error: failed to load manifest for workspace member `/app/examples`\r\n\r\n       Caused by:\r\n         failed to read `/app/examples/Cargo.toml`\r\n\r\n       Caused by:\r\n         No such file or directory (os error 2)\r\n```\r\n\r\n\r\nlook forward for a while, found in [cargo.toml](./cargo.toml) we add [examples](./examples), but which was ignored by [./dockerignore](.dockerignore)",
    "merged_at": "2023-07-04T12:48:06Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/3429",
    "id": 1777339753,
    "number": 3429,
    "title": "fix(book/jsonrpc): copy/paste typo",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2023-06-27T16:27:27Z",
    "updated_at": "2023-06-27T22:46:24Z",
    "closed_at": "2023-06-27T17:50:12Z",
    "draft": false,
    "body": null,
    "merged_at": "2023-06-27T17:50:12Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/paradigmxyz/reth/pull/3425",
    "id": 1777250310,
    "number": 3425,
    "title": "fix: docker build COPY dest should be abspath",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2023-06-27T15:35:30Z",
    "updated_at": "2023-06-27T22:45:58Z",
    "closed_at": "2023-06-27T19:45:53Z",
    "draft": false,
    "body": "I'm building a docker image with command as below:\r\n\r\n\r\n```bash\r\ndocker build -t xxx .\r\n```\r\n\r\nBut meets an error:\r\n\r\n```bash\r\n$ docker build -t xxx .\r\nSending build context to Docker daemon  11.71MB\r\nStep 1/21 : FROM lukemathwalker/cargo-chef:latest-rust-1 AS chef\r\n ---> 1c3f02ba4de2\r\nStep 2/21 : WORKDIR app\r\n ---> Using cache\r\n ---> 039537a3aa96\r\nStep 3/21 : LABEL org.opencontainers.image.source=https://github.com/paradigmxyz/reth\r\n ---> Using cache\r\n ---> 355cb6958486\r\nStep 4/21 : LABEL org.opencontainers.image.licenses=\"MIT OR Apache-2.0\"\r\n ---> Using cache\r\n ---> 5411b39e0054\r\nStep 5/21 : FROM chef AS planner\r\n ---> 5411b39e0054\r\nStep 6/21 : COPY . .\r\n ---> Using cache\r\n ---> 9168ea4ac5e5\r\nStep 7/21 : RUN cargo chef prepare --recipe-path recipe.json\r\n ---> Using cache\r\n ---> 2ee1b2b21896\r\nStep 8/21 : FROM chef AS builder\r\n ---> 5411b39e0054\r\nStep 9/21 : COPY --from=planner /app/recipe.json recipe.json\r\n ---> Using cache\r\n ---> ed886d8ca573\r\nStep 10/21 : ARG BUILD_PROFILE=release\r\n ---> Using cache\r\n ---> be638e3f8429\r\nStep 11/21 : ENV BUILD_PROFILE $BUILD_PROFILE\r\n ---> Using cache\r\n ---> 7709a931eac9\r\nStep 12/21 : RUN apt-get update && apt-get -y upgrade && apt-get install -y libclang-dev pkg-config\r\n ---> Using cache\r\n ---> 5f0d4291ed40\r\nStep 13/21 : RUN cargo chef cook --profile $BUILD_PROFILE --recipe-path recipe.json\r\n ---> Using cache\r\n ---> 76e419c9e81c\r\nStep 14/21 : COPY . .\r\n ---> Using cache\r\n ---> 198d82e44284\r\nStep 15/21 : RUN cargo build --profile $BUILD_PROFILE --locked --bin reth\r\n ---> Using cache\r\n ---> 904dff0f2cea\r\nStep 16/21 : FROM ubuntu AS runtime\r\n ---> 99284ca6cea0\r\nStep 17/21 : WORKDIR app\r\n ---> Using cache\r\n ---> 08c45677acac\r\nStep 18/21 : COPY --from=builder /app/target/release/reth /usr/local/bin\r\n ---> Using cache\r\n ---> fe674988c93d\r\nStep 19/21 : COPY LICENSE-* .\r\nWhen using COPY with more than one source file, the destination must be a directory and end with a /\r\n```\r\n",
    "merged_at": "2023-06-27T19:45:53Z",
    "repo": "reth"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27614",
    "id": 1775101094,
    "number": 27614,
    "title": "eth/filters: performance improvement on filterLogs",
    "state": "closed",
    "locked": false,
    "comments": 2,
    "created_at": "2023-06-26T15:55:39Z",
    "updated_at": "2023-08-08T13:19:26Z",
    "closed_at": "2023-08-08T13:19:26Z",
    "draft": false,
    "body": "Because the logs have arrived in asc order, so if the `to block` in query criteria is bigger than the current `log.BlockNumber`, then no need to filter the later logs anymore.\r\n\r\n\r\nHere is a benchmark with:\r\n\r\n\r\n```bash\r\ncd eth/filters\r\ngo test -bench='BenchmarkFilterLogs' . -count 5  -run BenchmarkFilterLogs\r\n```\r\n\r\n> the result of master branch\r\n\r\n\r\n```\r\ngoos: darwin\r\ngoarch: arm64\r\npkg: github.com/ethereum/go-ethereum/eth/filters\r\nBenchmarkFilterLogs-8              12616             92477 ns/op\r\nBenchmarkFilterLogs-8              12992             92284 ns/op\r\nBenchmarkFilterLogs-8              12940             91975 ns/op\r\nBenchmarkFilterLogs-8              12987             92502 ns/op\r\nBenchmarkFilterLogs-8              13009             88202 ns/op\r\n```\r\n\r\n> the result of this branch\r\n\r\n```\r\ngoos: darwin\r\ngoarch: arm64\r\npkg: github.com/ethereum/go-ethereum/eth/filters\r\nBenchmarkFilterLogs-8              13528             86444 ns/op\r\nBenchmarkFilterLogs-8              13440             86351 ns/op\r\nBenchmarkFilterLogs-8              14128             86022 ns/op\r\nBenchmarkFilterLogs-8              13968             84665 ns/op\r\nBenchmarkFilterLogs-8              13959             85568 ns/op\r\n```\r\n\r\nabout 6.2% improvement\r\n\r\n\r\nBTW,  also add a new function `topicFilter`, used to improve the readability of `filterLogs`",
    "merged_at": null,
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27555",
    "id": 1772744058,
    "number": 27555,
    "title": "metrics: break if flag is enabled",
    "state": "closed",
    "locked": false,
    "comments": 2,
    "created_at": "2023-06-24T14:26:50Z",
    "updated_at": "2023-06-27T06:09:02Z",
    "closed_at": "2023-06-27T06:09:01Z",
    "draft": false,
    "body": null,
    "merged_at": null,
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27554",
    "id": 1772435534,
    "number": 27554,
    "title": "internal/ethapi: eth_getUncle should return totalDifficulty",
    "state": "closed",
    "locked": false,
    "comments": 6,
    "created_at": "2023-06-24T03:58:34Z",
    "updated_at": "2023-06-27T12:26:55Z",
    "closed_at": "2023-06-27T12:26:55Z",
    "draft": false,
    "body": "As the document [#eth_getunclebyblockhashandindex](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getunclebyblockhashandindex) said \r\n<img width=\"815\" alt=\"image\" src=\"https://github.com/ethereum/go-ethereum/assets/3627395/7004491b-85aa-4ee1-9fb7-5fd00bec55e6\">\r\n\r\n\r\nThe response of uncle block is the same as eth_getBlock, but currently, uncle's response doesn't contain `totalDifficulty`, and uncle block also cost hash rate(pre PoS), so we should include this field for `eth_getUncleXXX` RPC.",
    "merged_at": null,
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27543",
    "id": 1770706448,
    "number": 27543,
    "title": "eth/protocols: put protocols in order",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2023-06-23T03:10:51Z",
    "updated_at": "2023-06-27T06:11:08Z",
    "closed_at": "2023-06-27T06:11:07Z",
    "draft": false,
    "body": null,
    "merged_at": "2023-06-27T06:11:07Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27527",
    "id": 1767237014,
    "number": 27527,
    "title": "internal/ethapi: add more testcase for GetTransactionReceipt",
    "state": "closed",
    "locked": false,
    "comments": 3,
    "created_at": "2023-06-21T10:03:55Z",
    "updated_at": "2023-07-13T10:47:38Z",
    "closed_at": "2023-07-13T10:47:33Z",
    "draft": false,
    "body": null,
    "merged_at": "2023-07-13T10:47:33Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27521",
    "id": 1764605040,
    "number": 27521,
    "title": "internal/build: ignore some files in FindMainPackages",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2023-06-20T04:19:04Z",
    "updated_at": "2023-06-20T11:26:22Z",
    "closed_at": "2023-06-20T08:42:14Z",
    "draft": false,
    "body": "In macOS, there may exist hidden [`.DS_Store`](https://en.wikipedia.org/wiki/.DS_Store) files inside some directories. These are filesystem metadata files created by Finder.\r\n If one of these `.DS_Store` files is inside the [./cmd](./cmd) directory, then running `make test` will fail with an error:\r\n\r\n\r\n```bash \r\n$ make test\r\nenv GO111MODULE=on go run build/ci.go install  \r\nutil.go:202: fdopendir cmd/.DS_Store: not a directory  \r\nexit status 1\r\nmake: *** [all] Error 1\r\n```\r\n\r\nThis happens because the Go build tools try to process all files in the [./cmd](./cmd) directory, including the `.DS_Store` file, resulting in an error.\r\n\r\nTo fix this, we can ignore any files when parsing the package directory.\r\n",
    "merged_at": "2023-06-20T08:42:14Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27506",
    "id": 1762667219,
    "number": 27506,
    "title": "cmd/geth: use automaxprocs to apply cpu quota correctly",
    "state": "closed",
    "locked": false,
    "comments": 5,
    "created_at": "2023-06-19T03:40:04Z",
    "updated_at": "2023-08-15T18:51:49Z",
    "closed_at": "2023-07-14T17:14:47Z",
    "draft": false,
    "body": "As discussed with @rjl493456442 offline, if Geth was running in a container with CPU quota(set with cgroup limiting), and `runtime.NumCPU` returns the host's CPU cores(maybe bigger than the docker's setting), which may result in more Golang runtime schedule and context switch. \r\n\r\nSo I'm using the [uber/atomaxprocs](https://github.com/uber-go/automaxprocs) package to return the correct cpu quota.",
    "merged_at": "2023-07-14T17:14:47Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27438",
    "id": 1747328437,
    "number": 27438,
    "title": "eth/filters: reuse func handleLogs for Removed logs",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2023-06-08T08:04:39Z",
    "updated_at": "2023-06-09T03:13:07Z",
    "closed_at": "2023-06-08T09:40:23Z",
    "draft": false,
    "body": null,
    "merged_at": "2023-06-08T09:40:23Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27381",
    "id": 1731413727,
    "number": 27381,
    "title": "rpc: check Dial error",
    "state": "closed",
    "locked": false,
    "comments": 2,
    "created_at": "2023-05-30T02:30:33Z",
    "updated_at": "2023-05-30T13:04:10Z",
    "closed_at": "2023-05-30T12:36:16Z",
    "draft": false,
    "body": "I've just noticed this Job failed of panic https://ci.appveyor.com/project/ethereum/go-ethereum/builds/47162044/job/v0frtfsm0yd5sml6#L890\r\n\r\n```\r\n--- FAIL: TestClientSubscriptionChannelClose (0.01s)\r\npanic: runtime error: invalid memory address or nil pointer dereference [recovered]\r\n\tpanic: runtime error: invalid memory address or nil pointer dereference\r\n[signal 0xc0000005 code=0x0 addr=0x4 pc=0x6b041f]\r\ngoroutine 320 [running]:\r\ntesting.tRunner.func1.2({0x72b820, 0xac11a0})\r\n\tC:/Users/appveyor/AppData/Local/geth-go-1.20.3-windows-amd64/go/src/testing/testing.go:1526 +0x2ab\r\ntesting.tRunner.func1()\r\n\tC:/Users/appveyor/AppData/Local/geth-go-1.20.3-windows-amd64/go/src/testing/testing.go:1529 +0x44c\r\npanic({0x72b820, 0xac11a0})\r\n\tC:/Users/appveyor/AppData/Local/geth-go-1.20.3-windows-amd64/go/src/runtime/panic.go:884 +0x1b7\r\ngithub.com/ethereum/go-ethereum/rpc.(*Client).Subscribe(0x0, {0x824c34, 0x9c880b0}, {0x77a99f, 0x6}, {0x704840, 0x9d08000}, {0x9d0af30, 0x3, 0x3})\r\n\tC:/projects/go-ethereum/rpc/client.go:473 +0x17f\r\ngithub.com/ethereum/go-ethereum/rpc.TestClientSubscriptionChannelClose(0x9c84ff0)\r\n\tC:/projects/go-ethereum/rpc/client_test.go:530 +0x2fb\r\ntesting.tRunner(0x9c84ff0, 0x7a4020)\r\n\tC:/Users/appveyor/AppData/Local/geth-go-1.20.3-windows-amd64/go/src/testing/testing.go:1576 +0x113\r\ncreated by testing.(*T).Run\r\n\tC:/Users/appveyor/AppData/Local/geth-go-1.20.3-windows-amd64/go/src/testing/testing.go:1629 +0x427\r\nFAIL\tgithub.com/ethereum/go-ethereum/rpc\t11.225s\r\n```\r\n\r\nI'm not sure why the connection is failed, but let's make sure we check the error before use",
    "merged_at": null,
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27347",
    "id": 1725007513,
    "number": 27347,
    "title": "internal/ethapi: remove header.Size in rpc getHeaderByXXX",
    "state": "closed",
    "locked": false,
    "comments": 7,
    "created_at": "2023-05-25T03:07:41Z",
    "updated_at": "2023-05-25T13:58:23Z",
    "closed_at": "2023-05-25T13:19:58Z",
    "draft": false,
    "body": "As discussed with @rjl493456442 and also in https://github.com/ethereum/go-ethereum/pull/27325#issuecomment-1560779871. Currently, the PRC of `eth_getHeaderByXXX`'s response will return the header's Size, which depends on the `struct Header`'s size:\r\n\r\nhttps://github.com/ethereum/go-ethereum/blob/dc8d91a65c2ca1c08cb019a62d716116c165b68e/core/types/block.go#L116-L126\r\n\r\nAnd this struct's size differs in the different distros(x32 VS x64), so I proposed to remove this field for:\r\n\r\n1. `getHeaderByXXX` is Geth's own RPC, not in [standard ones](https://ethereum.org/en/developers/docs/apis/json-rpc/);\r\n2. We have [block's size](https://github.com/ethereum/go-ethereum/blob/dc8d91a65c2ca1c08cb019a62d716116c165b68e/core/types/block.go#L363)(Guaranteed by consensus), someone may be confused about those two.\r\n",
    "merged_at": "2023-05-25T13:19:58Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27345",
    "id": 1724880537,
    "number": 27345,
    "title": "core/types: check header size(TEST WIN32, DON'T MERGE)",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2023-05-24T23:53:25Z",
    "updated_at": "2023-05-25T06:10:58Z",
    "closed_at": "2023-05-25T06:10:58Z",
    "draft": false,
    "body": null,
    "merged_at": null,
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27336",
    "id": 1723054249,
    "number": 27336,
    "title": "les, signer, light: replace noarg fmt.Errorf with errors.New",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2023-05-24T02:02:25Z",
    "updated_at": "2023-06-14T05:18:46Z",
    "closed_at": "2023-05-25T06:51:14Z",
    "draft": false,
    "body": "similar to https://github.com/ethereum/go-ethereum/pull/27329",
    "merged_at": "2023-05-25T06:51:14Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27335",
    "id": 1723053014,
    "number": 27335,
    "title": "internal,tests: replace noarg fmt.Errorf with errors.New",
    "state": "closed",
    "locked": false,
    "comments": 2,
    "created_at": "2023-05-24T02:01:04Z",
    "updated_at": "2023-05-25T06:54:33Z",
    "closed_at": "2023-05-25T06:54:29Z",
    "draft": false,
    "body": "similar to https://github.com/ethereum/go-ethereum/pull/27329",
    "merged_at": "2023-05-25T06:54:29Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27334",
    "id": 1723049156,
    "number": 27334,
    "title": "ethclient,event: replace noarg fmt.Errorf with errors.New",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2023-05-24T01:57:00Z",
    "updated_at": "2023-05-24T14:20:02Z",
    "closed_at": "2023-05-24T10:39:50Z",
    "draft": false,
    "body": "similar to https://github.com/ethereum/go-ethereum/pull/27329",
    "merged_at": "2023-05-24T10:39:50Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27333",
    "id": 1723040862,
    "number": 27333,
    "title": "crypto: replace noarg fmt.Errorf with errors.New",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2023-05-24T01:45:19Z",
    "updated_at": "2023-05-24T14:19:32Z",
    "closed_at": "2023-05-24T12:45:52Z",
    "draft": false,
    "body": "similar to https://github.com/ethereum/go-ethereum/pull/27329",
    "merged_at": "2023-05-24T12:45:52Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27332",
    "id": 1723033719,
    "number": 27332,
    "title": "core,console: replace noarg fmt.Errorf with errors.New",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2023-05-24T01:35:05Z",
    "updated_at": "2023-05-25T12:24:10Z",
    "closed_at": "2023-05-25T12:24:10Z",
    "draft": false,
    "body": "similar to https://github.com/ethereum/go-ethereum/pull/27329",
    "merged_at": "2023-05-25T12:24:09Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27331",
    "id": 1723023116,
    "number": 27331,
    "title": "accounts: replace noarg fmt.Errorf with errors.New",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2023-05-24T01:24:00Z",
    "updated_at": "2023-05-25T12:48:20Z",
    "closed_at": "2023-05-25T12:25:58Z",
    "draft": false,
    "body": "similar to https://github.com/ethereum/go-ethereum/pull/27329",
    "merged_at": "2023-05-25T12:25:58Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27330",
    "id": 1722955916,
    "number": 27330,
    "title": "eth,consensus: replace noarg fmt.Errorf with errors.New",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2023-05-24T00:02:32Z",
    "updated_at": "2023-05-30T15:06:37Z",
    "closed_at": "2023-05-25T06:57:35Z",
    "draft": false,
    "body": "similar to https://github.com/ethereum/go-ethereum/pull/27329",
    "merged_at": "2023-05-25T06:57:35Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27329",
    "id": 1722409967,
    "number": 27329,
    "title": "cmd: use errrors.New instead of empty fmt.Errorf",
    "state": "closed",
    "locked": false,
    "comments": 2,
    "created_at": "2023-05-23T16:19:32Z",
    "updated_at": "2024-03-08T07:28:39Z",
    "closed_at": "2023-05-24T10:21:30Z",
    "draft": false,
    "body": "Seems `errors.New` is super fast then the empty `fmt.Errorf`, here is an benchmark test case from https://blog.imberkay.com/errorsnew-vs-fmterrorf\r\n\r\n```go\r\npackage main\r\n\r\nimport (\r\n    \"errors\"\r\n    \"fmt\"\r\n    \"time\"\r\n)\r\n\r\nfunc testErrors() error {\r\n    return errors.New(\"test errors package\")\r\n}\r\n\r\nfunc testFmt() error {\r\n    return fmt.Errorf(\"test fmt package\")\r\n}\r\n\r\nfunc main() {\r\n    repeat := 100000000\r\n    start := time.Now()\r\n    for i := 0; i < repeat; i++ {\r\n        testErrors()\r\n    }\r\n    duration := time.Since(start)\r\n    fmt.Println(\"errors.New\", duration)\r\n\r\n    start = time.Now()\r\n    for i := 0; i < repeat; i++ {\r\n        testFmt()\r\n    }\r\n    duration = time.Since(start)\r\n    fmt.Println(\"fmt.Errorf\", duration)\r\n}\r\n\r\n```\r\n\r\nIn my macbook air m1, the result as below:\r\n\r\n```bash\r\n$ go version\r\ngo version go1.20.3 darwin/arm64\r\n\r\n$ go run t.go\r\n\r\nerrors.New 63.858083ms\r\nfmt.Errorf 5.240530083s\r\n\r\n\r\n```",
    "merged_at": "2023-05-24T10:21:30Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27325",
    "id": 1721565315,
    "number": 27325,
    "title": "internal/ethapi: add more testcase for block/header rpc",
    "state": "closed",
    "locked": false,
    "comments": 7,
    "created_at": "2023-05-23T08:56:42Z",
    "updated_at": "2023-05-29T13:46:49Z",
    "closed_at": "2023-05-29T12:52:09Z",
    "draft": false,
    "body": null,
    "merged_at": "2023-05-29T12:52:09Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27305",
    "id": 1716885452,
    "number": 27305,
    "title": "internal/ethapi: use RPCBlock,RPCHeader instead of interface",
    "state": "closed",
    "locked": false,
    "comments": 4,
    "created_at": "2023-05-19T08:53:27Z",
    "updated_at": "2023-08-01T17:08:52Z",
    "closed_at": "2023-08-01T13:08:03Z",
    "draft": false,
    "body": "This is a follow-up PR by #27265, If it's OK I'll add more test cases for `getXXX`'s response to ensure no alter the spec of RPC's response.",
    "merged_at": null,
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27303",
    "id": 1716514949,
    "number": 27303,
    "title": "eth,core: add api debug_getTrieFlushInterval",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2023-05-19T02:27:40Z",
    "updated_at": "2023-06-07T07:16:09Z",
    "closed_at": "2023-06-06T12:41:45Z",
    "draft": false,
    "body": null,
    "merged_at": "2023-06-06T12:41:45Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27286",
    "id": 1712936335,
    "number": 27286,
    "title": "eth/filters: subscribe ChainReorg events",
    "state": "closed",
    "locked": false,
    "comments": 3,
    "created_at": "2023-05-17T01:07:19Z",
    "updated_at": "2024-06-25T12:50:11Z",
    "closed_at": "2024-06-25T12:50:11Z",
    "draft": false,
    "body": "A simple implementation of https://github.com/ethereum/go-ethereum/issues/26953\r\n\r\nAnd here is a simple client example:\r\n\r\n```go\r\npackage main\r\n\r\nimport (\r\n\t\"context\"\r\n\t\"encoding/json\"\r\n\t\"flag\"\r\n\t\"fmt\"\r\n\t\"os\"\r\n\r\n\t\"github.com/ethereum/go-ethereum/core/types\"\r\n\t\"github.com/ethereum/go-ethereum/ethclient\"\r\n\t\"github.com/ethereum/go-ethereum/log\"\r\n)\r\n\r\nvar (\r\n\tprovider = flag.String(\"rpc\", \"ws://127.0.0.1:8546\", \"rpc provider\")\r\n)\r\n\r\nfunc main() {\r\n\tflag.Parse()\r\n\tlog.Root().SetHandler(log.LvlFilterHandler(log.LvlInfo, log.StreamHandler(os.Stdout, log.TerminalFormat(true))))\r\n\r\n\tclient, err := ethclient.Dial(*provider)\r\n\tif err != nil {\r\n\t\tlog.Crit(\"error creating client\", \"err\", err)\r\n\t}\r\n\tdefer client.Close()\r\n\r\n\tctx := context.Background()\r\n\tch := make(chan *types.Header)\r\n\tsub, err := client.SubscribeChainReorg(ctx, ch)\r\n\tif err != nil {\r\n\t\tlog.Crit(\"failed to subscribe chainside event\", \"err\", err)\r\n\t}\r\n\tdefer sub.Unsubscribe()\r\n\r\n\tlog.Info(\"Success subscribe ChainReorg\")\r\nLOOP:\r\n\tfor {\r\n\t\tselect {\r\n\t\tcase err := <-sub.Err():\r\n\t\t\tlog.Error(\"subscribe error\", \"err\", err)\r\n\t\t\tbreak LOOP\r\n\r\n\t\tcase e := <-ch:\r\n\t\t\tef, _ := json.MarshalIndent(e, \"\", \"  \")\r\n\t\t\tlog.Info(\"reorg -->\")\r\n\t\t\tfmt.Println(string(ef))\r\n\t\tcase err := <-ctx.Done():\r\n\t\t\tlog.Error(\"context error\", \"err\", err)\r\n\t\t\tbreak LOOP\r\n\t\t}\r\n\t}\r\n\tclose(ch)\r\n}\r\n```\r\n\r\n> Subscribe with \r\n\r\n```bash\r\ngo run reorg.go -rpc xxx\r\n```\r\n\r\n> Some example output:\r\n\r\n```bash\r\nINFO [05-16|23:35:54.737] Success subscribe ChainReorg\r\n\r\n\r\nINFO [05-17|00:35:02.198] reorg -->\r\n{\r\n  \"parentHash\": \"0xf4a6cf72480f4f84a0be2db64b1480ec1022172f652ffafdabdc8482eec1821e\",\r\n  \"sha3Uncles\": \"0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347\",\r\n  \"miner\": \"0x690b9a9e9aa1c9db991c7721a92d351db4fac990\",\r\n  \"stateRoot\": \"0x43c89b7a6b65328c56fc47911dde4ff00705f668d7745f9dbe00712ef6c9eeab\",\r\n  \"transactionsRoot\": \"0x6162b6db65a3e60bb00a9f550f0c14d7b5644fc9a2dae5ecb393f0abd2ba5399\",\r\n  \"receiptsRoot\": \"0xb846ad0702fdf2b74c9569fa49bfed05bf64c53acaedc858fc525fef7e0a582d\",\r\n  \"logsBloom\": \"0x1ba10482081c10d87918571a8f08894b9027230138921052020163555dc4754241365de0c136207084205a3a0b10a11532070003da0138c85064e00c152d980b800aba9a20711c282b0660cbc014677f29428046bc475ce04e901c7088682c217f21092d0340a90381c41680832098830010e0a0a9c16e68c884c4f48b78be72c020425144888b5a81cf01305f53040620080281cb4c0b8a4d25006ec01003d1ffcc51ca1a0ef1632a0900c0dc89448e05c0a282e5a34b695d48a68835302a414b2c02b20a479053a04210980041265bc17d038282122c74f452518a08006200a535e80eb9110868166428e1a6551a04845a02d03000147445a9125287287f44\",\r\n  \"difficulty\": \"0x0\",\r\n  \"number\": \"0x1079bc4\",\r\n  \"gasLimit\": \"0x1c9c380\",\r\n  \"gasUsed\": \"0xa24b5a\",\r\n  \"timestamp\": \"0x64642127\",\r\n  \"extraData\": \"0x627920406275696c64657230783639\",\r\n  \"mixHash\": \"0x7c6a7a16af8749719f5bfdee24a1f91efa2386fb923e29aaa14a80c21fb3a374\",\r\n  \"nonce\": \"0x0000000000000000\",\r\n  \"baseFeePerGas\": \"0x931606255\",\r\n  \"withdrawalsRoot\": \"0xfc8557f98bcd013b833c686683cf0780c193379feb29d27e064e3c732d4a0c8a\",\r\n  \"excessDataGas\": null,\r\n  \"hash\": \"0xafdf26616fe59929b1ac85733b525eaaceb7b94822d9058b922a64a691ee909c\"\r\n}\r\nINFO [05-17|00:42:21.005] reorg -->\r\n{\r\n  \"parentHash\": \"0x3d58851135b811edfbc26c82b8343f6919a76709fc1c077499e2499884da0290\",\r\n  \"sha3Uncles\": \"0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347\",\r\n  \"miner\": \"0xebec795c9c8bbd61ffc14a6662944748f299cacf\",\r\n  \"stateRoot\": \"0xfced68db87020b4f510c55a0963266b0201ee74b3a176f6610fde41aae6a15f5\",\r\n  \"transactionsRoot\": \"0x2770e1899b04ebaa05ce366fd99e2de89e24edd3fb404d51dff21c674c9c604c\",\r\n  \"receiptsRoot\": \"0xfe41971da8a78646254d0ee53f8437ca8818a6a5a438e300e7e297202462630c\",\r\n  \"logsBloom\": \"0x2f250248482e40c90248122080411a61322ec58202028c414003a041b0a001565808a240e4619161c21203063120a5840a89ca5ca880a8c0261c8e6712a931b0118a8a1804182cadec2443ca8a5008a0101a0602005d2c051090f57f984a5803a2022230120210cfa148540419c4186da0129080481b04b0020164f20439680ca911a04e16404222164e004ca26a01422caa2c09a908401ca411024344107003ba09e1d6091a6802d10a42e59014054854402841c000494a4444860211b1000742b26842401014d45400e425042a146c5740bd07432e20141826d5a3a0052463041a200c898008847f844da0ab2849c0845487ba510800ee90c81817d4190c9c\",\r\n  \"difficulty\": \"0x0\",\r\n  \"number\": \"0x1079be6\",\r\n  \"gasLimit\": \"0x1c9c380\",\r\n  \"gasUsed\": \"0xfd1b5e\",\r\n  \"timestamp\": \"0x646422d7\",\r\n  \"extraData\": \"0xd883010b06846765746888676f312e31392e38856c696e7578\",\r\n  \"mixHash\": \"0xf48ad139fde09d2b9bec8bec4d33bbbe8e5058c0e8c56bf91a9284b18a498888\",\r\n  \"nonce\": \"0x0000000000000000\",\r\n  \"baseFeePerGas\": \"0x94f0dd366\",\r\n  \"withdrawalsRoot\": \"0x3c3ea92e5fd9732b648d319f59d97cbc2c8cc959d3b5650c47b4e686bf0459f3\",\r\n  \"excessDataGas\": null,\r\n  \"hash\": \"0xa3526448bdbb58f8f3ebc69a2020e41861e21a93a20f079d8bc53cfd6e751881\"\r\n}\r\n\r\n```",
    "merged_at": null,
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27284",
    "id": 1712193601,
    "number": 27284,
    "title": "website: add 'jsonrpc:2.0' in jsonrpc request",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2023-05-16T14:53:15Z",
    "updated_at": "2023-05-16T22:01:09Z",
    "closed_at": "2023-05-16T16:41:47Z",
    "draft": false,
    "body": "If `jsonrpc` is not given, JSONRPC will raise the error as below:\r\n\r\n```bash\r\n> {\"id\": 1, \"method\": \"eth_subscribe\", \"params\": [\"newHeads\"]}\r\n< {\"jsonrpc\":\"2.0\",\"id\":1,\"error\":{\"code\":-32600,\"message\":\"invalid request\"}}\r\n```",
    "merged_at": "2023-05-16T16:41:47Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27270",
    "id": 1710265967,
    "number": 27270,
    "title": "internal/blocktest: add package for shared test code",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2023-05-15T14:51:54Z",
    "updated_at": "2023-07-11T12:57:03Z",
    "closed_at": "2023-07-11T12:57:02Z",
    "draft": false,
    "body": "dry",
    "merged_at": "2023-07-11T12:57:02Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27268",
    "id": 1709781153,
    "number": 27268,
    "title": "internal/ethapi: minor refactor in block serialization",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2023-05-15T10:19:36Z",
    "updated_at": "2023-05-16T14:35:33Z",
    "closed_at": "2023-05-16T08:40:48Z",
    "draft": false,
    "body": null,
    "merged_at": "2023-05-16T08:40:48Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27265",
    "id": 1708981472,
    "number": 27265,
    "title": "eth,rpc: make RPCBlock,RPCTransaction,RPCReceipt as public struct",
    "state": "closed",
    "locked": false,
    "comments": 2,
    "created_at": "2023-05-14T15:23:51Z",
    "updated_at": "2023-05-15T07:56:20Z",
    "closed_at": "2023-05-15T05:43:27Z",
    "draft": false,
    "body": "This PR moves the RPC Response-related structures, which were originally in the [internal/ethapi package](./internal/ethapi), to the [rpc package](./rpc). \r\nThis allows third-party clients to access more raw data based on these structures. For example, `ethclient.BlockByNumber` can only return the `types.Block` structure:\r\n\r\nhttps://github.com/ethereum/go-ethereum/blob/9e8575ce8896acd543123ff83df01fe80d15dcc4/ethclient/ethclient.go#L84-L86\r\n\r\nBut on RPC server's side, we do return more data (such as `totalDifficulty`) in `rpcMarshalBlock`.\r\n\r\nhttps://github.com/ethereum/go-ethereum/blob/9e8575ce8896acd543123ff83df01fe80d15dcc4/internal/ethapi/api.go#L1234-L1243\r\n",
    "merged_at": null,
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27263",
    "id": 1708891304,
    "number": 27263,
    "title": "eth: split api.go into namespace based files",
    "state": "closed",
    "locked": false,
    "comments": 3,
    "created_at": "2023-05-14T10:18:40Z",
    "updated_at": "2023-05-29T09:09:35Z",
    "closed_at": "2023-05-29T09:09:35Z",
    "draft": false,
    "body": "The current module has multiple API functions all in one file called `api.go`. It can be difficult for developers to find the implementation of a specific interface. To make it easier, consider splitting `api.go` into namespace-based file names.\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "merged_at": "2023-05-29T09:09:35Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27246",
    "id": 1705201491,
    "number": 27246,
    "title": "ethclient: acquire the rpc.Client",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2023-05-11T07:05:17Z",
    "updated_at": "2023-05-11T07:11:00Z",
    "closed_at": "2023-05-11T07:09:17Z",
    "draft": false,
    "body": "Why do we need to return the `rpc.Client`?\r\n\r\n\r\n\r\nI found that the current ethclient interface cannot retrieve block information for a transaction when fetching its details. https://github.com/ethereum/go-ethereum/blob/ee043321c7bfe42e6ac048efccac88e99aac4c3e/ethclient/ethclient.go#L227\r\n\r\n Therefore, I want to directly call the `eth_getTransactionByHash` method from the client.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "merged_at": "2023-05-11T07:09:17Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27135",
    "id": 1678112919,
    "number": 27135,
    "title": "eth/filters: retrieve logs in async",
    "state": "closed",
    "locked": false,
    "comments": 7,
    "created_at": "2023-04-21T08:30:39Z",
    "updated_at": "2023-06-03T12:01:17Z",
    "closed_at": "2023-05-25T12:40:29Z",
    "draft": false,
    "body": "Try to implement https://github.com/ethereum/go-ethereum/issues/15063 and discussed with @s1na, \r\nIn the first phase, we want to make the `filter.Logs()` function returns a channel instead of a large array",
    "merged_at": "2023-05-25T12:40:29Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27087",
    "id": 1662739827,
    "number": 27087,
    "title": "params: remove `EIP150Hash` from chainconfig",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2023-04-11T15:23:14Z",
    "updated_at": "2023-04-20T02:43:17Z",
    "closed_at": "2023-04-18T07:49:09Z",
    "draft": false,
    "body": "closes https://github.com/ethereum/go-ethereum/issues/26994",
    "merged_at": "2023-04-18T07:49:09Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27084",
    "id": 1661947000,
    "number": 27084,
    "title": "cmd/geth: accountcmd no need to acquire the datadir lock",
    "state": "closed",
    "locked": false,
    "comments": 9,
    "created_at": "2023-04-11T07:47:28Z",
    "updated_at": "2023-04-27T10:57:30Z",
    "closed_at": "2023-04-27T10:57:30Z",
    "draft": false,
    "body": "Failed to run `geth account list` when the datadir was locked with a running geth instance: \r\n\r\n\r\n```bash\r\n$ ./build/bin/geth --datadir ~/.ethereum/ account list\r\nINFO [04-11|15:46:02.859] Maximum peer count                       ETH=50 LES=0 total=50\r\nFatal: Failed to create the protocol stack: datadir already used by another process\r\n```",
    "merged_at": "2023-04-27T10:57:30Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27083",
    "id": 1661666332,
    "number": 27083,
    "title": "rpc,internal/cmdtest: increase timeout in tests",
    "state": "closed",
    "locked": false,
    "comments": 9,
    "created_at": "2023-04-11T02:19:35Z",
    "updated_at": "2023-05-22T12:13:04Z",
    "closed_at": "2023-05-22T12:13:04Z",
    "draft": false,
    "body": "I'm running the tests in my dev machine(m1 mac air), and some test case failed\r\n\r\nI ran the test cases on my local machine (macOS M1 Air) and found that some test cases could not be passed. \r\n\r\n> run with command:\r\n\r\n```bash\r\ngo test ./cmd/geth/... -v \r\n```\r\n\r\n\r\n> test case 1\r\n\r\n```bash\r\n    test_cmd.go:241: killing the child process (timeout)\r\n    test_cmd.go:115: not enough output, got until \u25ca:\r\n        ---------------- (stdout text)\r\n        \r\n        ---------------- (expected text)\r\n        \u25caundefined\r\n        \r\n--- FAIL: TestUnlockFlagPasswordFile (5.03s)\r\n=== RUN   TestUnlockFlagPasswordFileWrongPassword\r\n```\r\n\r\n> test case 2\r\n\r\n```basg\r\n=== NAME  TestAttachWithHeaders\r\n    test_cmd.go:261: (stderr:42) Fatal: Failed to start the JavaScript console: Post \"http://localhost:58843\": context deadline exceeded\r\n--- PASS: TestRemoteDbWithHeaders (10.14s)\r\n=== NAME  TestAttachWithHeaders\r\n    attach_test.go:81: Test fail, expected invocation to succeed\r\n--- FAIL: TestAttachWithHeaders (10.14s)\r\nFAIL\r\n```\r\n\r\n> test case ...\r\n\r\n\r\nAfter checking, I discovered that this was due to the timeout being set too short.",
    "merged_at": "2023-05-22T12:13:04Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27074",
    "id": 1659700959,
    "number": 27074,
    "title": "[website]: add prometheus monitor",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2023-04-09T01:35:54Z",
    "updated_at": "2023-04-27T07:43:50Z",
    "closed_at": "2023-04-26T06:41:32Z",
    "draft": false,
    "body": "Implmement #26958 ",
    "merged_at": "2023-04-26T06:41:32Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/27029",
    "id": 1650770695,
    "number": 27029,
    "title": "eth/tracers: traces[0].gas should use tx.gasLimit",
    "state": "closed",
    "locked": false,
    "comments": 4,
    "created_at": "2023-04-02T01:51:40Z",
    "updated_at": "2023-04-04T14:35:46Z",
    "closed_at": "2023-04-04T10:34:24Z",
    "draft": false,
    "body": "Since `gasRemaining` has already deducted the `gas`, it is not correct to use `gasRemaining` as the parameter for trace[0], we should use `tx.gasLimit` instead.\r\n\r\nhttps://github.com/ethereum/go-ethereum/blob/00a73fbcce3250b87fc4160f3deddc44390848f4/core/state_transition.go#L349-L377\r\n\r\nElse, we may see some traces whose `gasUsed` is bigger than `gas`, eg [thix tx](https://etherscan.io/tx/0x5ed744298c2932dc54cc870ae6f958febe4e02be2f4fc3134c032fde59f4bc88):\r\n\r\n> request \r\n\r\n```json\r\n{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"method\": \"debug_traceTransaction\",\r\n    \"params\": [\r\n        \"0x5ed744298c2932dc54cc870ae6f958febe4e02be2f4fc3134c032fde59f4bc88\",\r\n        {\r\n            \"tracer\": \"callTracer\",\r\n            \"timeout\": \"120s\"\r\n        }\r\n    ],\r\n    \"id\": 67\r\n}\r\n```\r\n\r\n> current implemention\r\n\r\n```json\r\n{\r\n    \"jsonrpc\": \"2.0\",\r\n    \"id\": 67,\r\n    \"result\": {\r\n        \"from\": \"0xb840fe2b3fd8f75275240c671d6ec659e4c9a500\",\r\n        \"gas\": \"0x95ba\",\r\n        \"gasUsed\": \"0xb411\",\r\n        \"to\": \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\r\n        \"input\": \"0xa9059cbb0000000000000000000000006c56ca94b534b1aa271a0221b765cc128349c8ca0000000000000000000000000000000000000000000000000000000000650a4a\",\r\n        \"value\": \"0x0\",\r\n        \"type\": \"CALL\"\r\n    }\r\n}\r\n```\r\n\r\ngas is `0x95ba`(38330) < gasUsed `0xb411`(46097)\r\n\r\n<img width=\"1284\" alt=\"image\" src=\"https://user-images.githubusercontent.com/3627395/229326711-12ebe7f5-47d8-4252-ac2d-ba8fcbbd8b0d.png\">\r\n",
    "merged_at": "2023-04-04T10:34:24Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/26969",
    "id": 1638512120,
    "number": 26969,
    "title": "metrics/librato: ensure resp.body closed",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2023-03-24T00:06:02Z",
    "updated_at": "2023-03-30T02:49:07Z",
    "closed_at": "2023-03-27T11:44:42Z",
    "draft": false,
    "body": null,
    "merged_at": "2023-03-27T11:44:42Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/26962",
    "id": 1637580023,
    "number": 26962,
    "title": "ethclient: reuse the common code ",
    "state": "closed",
    "locked": false,
    "comments": 4,
    "created_at": "2023-03-23T13:47:34Z",
    "updated_at": "2023-03-24T09:54:23Z",
    "closed_at": "2023-03-23T19:57:19Z",
    "draft": false,
    "body": null,
    "merged_at": null,
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/26957",
    "id": 1636925168,
    "number": 26957,
    "title": "website: correct leveldb spelling ",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2023-03-23T06:22:17Z",
    "updated_at": "2023-04-01T20:15:00Z",
    "closed_at": "2023-04-01T20:14:59Z",
    "draft": false,
    "body": null,
    "merged_at": "2023-04-01T20:14:59Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/26946",
    "id": 1635224438,
    "number": 26946,
    "title": "core/rawdb: update freezertable read meter",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2023-03-22T07:42:16Z",
    "updated_at": "2023-03-23T09:27:11Z",
    "closed_at": "2023-03-23T07:34:40Z",
    "draft": false,
    "body": "Seems the ancient reading meter is always 0, not updated",
    "merged_at": "2023-03-23T07:34:40Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/25996",
    "id": 1410491776,
    "number": 25996,
    "title": "eth/tracers: fix the issue prestate missing existing contract state",
    "state": "closed",
    "locked": false,
    "comments": 4,
    "created_at": "2022-10-16T13:36:37Z",
    "updated_at": "2022-10-21T15:55:52Z",
    "closed_at": "2022-10-21T09:48:54Z",
    "draft": false,
    "body": "The prestate tracer did not report accounts that existed at a given address prior to a contract being created at that address.\r\n\r\nSee more from https://github.com/ethereum/go-ethereum/pull/25422#discussion_r978789901",
    "merged_at": "2022-10-21T09:48:54Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/25991",
    "id": 1410171690,
    "number": 25991,
    "title": "eth/tracers: add withLog to callTracer",
    "state": "closed",
    "locked": false,
    "comments": 23,
    "created_at": "2022-10-15T13:43:48Z",
    "updated_at": "2022-11-02T06:59:59Z",
    "closed_at": "2022-11-01T11:03:26Z",
    "draft": false,
    "body": "implement #25967",
    "merged_at": "2022-11-01T11:03:26Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/25957",
    "id": 1402573956,
    "number": 25957,
    "title": "eth/tracers: fix the issue of panic in prestate with diffmode",
    "state": "closed",
    "locked": false,
    "comments": 4,
    "created_at": "2022-10-10T04:20:02Z",
    "updated_at": "2022-10-12T10:50:02Z",
    "closed_at": "2022-10-12T10:50:02Z",
    "draft": false,
    "body": "In some cases, the contract created may not be successful. eg in this tx [0x876a0668d1337e4734dbec13ce1407a918ccac7d1e76e47f82728d877fa5a819](https://etherscan.io/tx/0x876a0668d1337e4734dbec13ce1407a918ccac7d1e76e47f82728d877fa5a819), the inner contract was not creating. So don't need to delete the not existing contracts.",
    "merged_at": "2022-10-12T10:50:02Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/25884",
    "id": 1389320432,
    "number": 25884,
    "title": "eth/tracers: fix the issue of stateobject modified",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2022-09-28T13:01:07Z",
    "updated_at": "2022-09-29T01:18:27Z",
    "closed_at": "2022-09-28T15:52:40Z",
    "draft": false,
    "body": "Signed-off-by: Delweng <delweng@gmail.com>",
    "merged_at": "2022-09-28T15:52:40Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/25849",
    "id": 1382020561,
    "number": 25849,
    "title": "cmd/utils: make --authrpc.jwtsecret a DirectoryFlag",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2022-09-22T08:10:57Z",
    "updated_at": "2022-09-22T13:45:45Z",
    "closed_at": "2022-09-22T13:43:48Z",
    "draft": false,
    "body": "Currently, geth command line can't expand the argument such as `--authrpc.jwtsecret=~/.geth/jwt.secret`, use `flags.DirectoryFlag` instead",
    "merged_at": "2022-09-22T13:43:48Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/25475",
    "id": 1328144861,
    "number": 25475,
    "title": "node/config: rm not used path.Join",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2022-08-04T06:40:04Z",
    "updated_at": "2022-09-23T07:00:21Z",
    "closed_at": "2022-08-04T07:42:04Z",
    "draft": false,
    "body": "Signed-off-by: Delweng <delweng@gmail.com>",
    "merged_at": "2022-08-04T07:42:04Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/25474",
    "id": 1328139436,
    "number": 25474,
    "title": "golangci-lint: gosimple comment",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2022-08-04T06:34:16Z",
    "updated_at": "2022-08-11T08:29:14Z",
    "closed_at": "2022-08-11T08:29:13Z",
    "draft": false,
    "body": "This is a PR cherry-picked from https://github.com/ethereum/go-ethereum/pull/25406, but only changes some comment style",
    "merged_at": null,
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/erigontech/erigon/pull/4853",
    "id": 1321158924,
    "number": 4853,
    "title": "cmd/utils/flags: fix a typo",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2022-07-28T15:54:51Z",
    "updated_at": "2022-07-29T07:59:13Z",
    "closed_at": "2022-07-29T07:59:13Z",
    "draft": false,
    "body": "Signed-off-by: Delweng <delweng@gmail.com>",
    "merged_at": "2022-07-29T07:59:13Z",
    "repo": "erigon"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/25422",
    "id": 1319961882,
    "number": 25422,
    "title": "eth/tracers: add diffMode to prestateTracer",
    "state": "closed",
    "locked": false,
    "comments": 26,
    "created_at": "2022-07-27T18:25:24Z",
    "updated_at": "2022-10-09T09:51:29Z",
    "closed_at": "2022-10-06T00:05:44Z",
    "draft": false,
    "body": "This PR adds a new mode to the `prestateTracer` for emitting the modified parts of state within a transaction. It can be enabled by passing in `diffMode: true` as option.\r\n\r\n**Backwards compatibility**: There are 2 changes to the normal, i.e. prestate, mode of operation as well:\r\n\r\n1. The `code` and `storage` fields will be omitted when empty. This might break your client code, but should be trivial to fix. Sorry for any inconvenience.\r\n2. Coinbase is now included in prestate\r\n\r\nIn the new diff mode the result will contain 2 maps, `pre` and `post`:\r\n\r\n1. Any read-only access is omitted completely from the result. This mode is only concerned with state modifications.\r\n2. In `pre` you will find the state of an account before the tx started, and in `post` its state after tx execution finished.\r\n3. `post` will contain only the actually fields. e.g. if `nonce` hasn't changed it will be omitted from `post`.\r\n4. Deletion (i.e. account selfdestruct, or storage clearing) will be signified by inclusion in `pre` and omission in `post`.\r\n5. Insertion (i.e. account creation or new slots) will be signified by omission in `pre` and inclusion in `post`.\r\n\r\nFor example:\r\n\r\n```terminal\r\ncurl -X POST -H \"Content-Type: application/json\" --data '{\"method\":\"debug_traceTransaction\",\"params\":[\"0x40f1955ba3be49633461dd7d9a3cde7dc5de8e363deaf9a7febcd86b176706c5\", {\"tracer\": \"prestateTracer\", \"tracerConfig\": {\"diffMode\": true}}],\"id\":15295,\"jsonrpc\":\"2.0\"}' http://localhost:8545\r\n```\r\n\r\nAnd the result:\r\n\r\n```json\r\n{\r\n  \"jsonrpc\": \"2.0\",\r\n  \"id\": 15295,\r\n  \"result\": {\r\n    \"pre\": {\r\n      \"0x271682deb8c4e0901d1a1550ad2e64d568e69909\": {\r\n        \"balance\": \"0x0\",\r\n        \"nonce\": 1,\r\n        \"code\": \"0x[snip]\",\r\n        \"storage\": {\r\n          \"0xab0c1474578acc00c5949ddf697a838cc6c62a464cc6ea4517922e36aef6688d\": \"0x0000000000000000000000000000000000000000000000000000000000000e5d\"\r\n        }\r\n      },\r\n      \"0x2ed251752da7f24f33cfbd38438748bb8eeb44e1\": {\r\n        \"balance\": \"0x470de4df820000\",\r\n        \"nonce\": 1,\r\n        \"code\": \"0x[snip]\",\r\n        \"storage\": {\r\n          \"0x0000000000000000000000000000000000000000000000000000000000000003\": \"0x00000000000000000000000000000000000000000000000000000000633ed15b\",\r\n          \"0x0000000000000000000000000000000000000000000000000000000000000005\": \"0x0000000000000000000000000000000000000000000000000000000000000e5d\"\r\n        }\r\n      },\r\n      \"0x4675c7e5baafbffbca748158becba61ef3b0a263\": {\r\n        \"balance\": \"0x7e9168b5cd92e82\",\r\n        \"nonce\": 9725\r\n      },\r\n      \"0xb836223e20782ee1fc71e16d7890851d2060f0b7\": {\r\n        \"balance\": \"0x695ce0397d6e71f\",\r\n        \"nonce\": 1465\r\n      },\r\n      \"0xc3319dc5e1972bf03c59f9339b08c94083d63c57\": {\r\n        \"balance\": \"0x0\",\r\n        \"nonce\": 1,\r\n        \"code\": \"0x[snip]\"\r\n      }\r\n    },\r\n    \"post\": {\r\n      \"0x271682deb8c4e0901d1a1550ad2e64d568e69909\": {\r\n        \"storage\": {\r\n          \"0x7ffd7b250a080f8e8bbeba3eeb796e61525af3a01caf52d4f5a11400af5b5f12\": \"0x5cb013de12b71c99415612973d73c9e362e03d302965ce83efa65f705ec54ed5\",\r\n          \"0xab0c1474578acc00c5949ddf697a838cc6c62a464cc6ea4517922e36aef6688d\": \"0x0000000000000000000000000000000000000000000000000000000000000e5e\"\r\n        }\r\n      },\r\n      \"0x2ed251752da7f24f33cfbd38438748bb8eeb44e1\": {\r\n        \"storage\": {\r\n          \"0x0000000000000000000000000000000000000000000000000000000000000003\": \"0x00000000000000000000000000000000000000000000000000000000633eed7b\",\r\n          \"0x0000000000000000000000000000000000000000000000000000000000000005\": \"0x0000000000000000000000000000000000000000000000000000000000000e5e\"\r\n        }\r\n      },\r\n      \"0x4675c7e5baafbffbca748158becba61ef3b0a263\": {\r\n        \"balance\": \"0x7e92fa74024bf12\"\r\n      },\r\n      \"0xb836223e20782ee1fc71e16d7890851d2060f0b7\": {\r\n        \"balance\": \"0x68f408a5f85eb87\",\r\n        \"nonce\": 1466\r\n      },\r\n      \"0xc3319dc5e1972bf03c59f9339b08c94083d63c57\": {\r\n        \"storage\": {\r\n          \"0x2420d792dda573390c1fc095e0bae56d4fdf126a0c64052effd1cdcc565164c7\": \"0xa6f6671cdede2e81197d7a706b394c92c9c21514e4f8ef31779b46e1e3b5e139\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```",
    "merged_at": "2022-10-06T00:05:44Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum-optimism/optimism/pull/3097",
    "id": 1318087244,
    "number": 3097,
    "title": "feature: backport l2geth with go-ethereum native trace v1.10.20",
    "state": "closed",
    "locked": false,
    "comments": 9,
    "created_at": "2022-07-26T11:14:22Z",
    "updated_at": "2022-09-18T14:13:33Z",
    "closed_at": "2022-09-18T14:13:32Z",
    "draft": false,
    "body": "<!--\r\nPlease fill in each sections of this template, and delete any sections that are not relevant.\r\n\r\nNeed help?\r\nRefer to our contributing guidelines for additional information about making a good pull request:\r\nhttps://github.com/ethereum-optimism/.github/blob/master/CONTRIBUTING.md\r\n-->\r\n\r\n**Description**\r\nA clear and concise description of the features you're adding in this pull request.\r\n\r\n**Additional context**\r\nAdd any other context about the problem you're solving.\r\n\r\n**Metadata**\r\n- Fixes #[Link to Issue]\r\n",
    "merged_at": null,
    "repo": "optimism"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/25406",
    "id": 1317634275,
    "number": 25406,
    "title": "golangci-lint: add gocritic",
    "state": "closed",
    "locked": false,
    "comments": 2,
    "created_at": "2022-07-26T03:05:50Z",
    "updated_at": "2022-08-04T05:14:16Z",
    "closed_at": "2022-08-02T12:31:15Z",
    "draft": false,
    "body": null,
    "merged_at": null,
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/25405",
    "id": 1317628488,
    "number": 25405,
    "title": "cm/puppeth: fix the issue of ethstats maybe doesn't contains `:`",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2022-07-26T02:54:52Z",
    "updated_at": "2022-10-10T12:56:49Z",
    "closed_at": "2022-07-29T16:28:14Z",
    "draft": false,
    "body": "Signed-off-by: Delweng <delweng@gmail.com>",
    "merged_at": "2022-07-29T16:28:14Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/25312",
    "id": 1306827411,
    "number": 25312,
    "title": "golangci: add whitespace linter",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2022-07-16T14:50:03Z",
    "updated_at": "2022-08-03T22:37:14Z",
    "closed_at": "2022-07-25T10:14:03Z",
    "draft": false,
    "body": "Add whitespace linter ",
    "merged_at": "2022-07-25T10:14:03Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/prysmaticlabs/prysm/pull/10919",
    "id": 1279396411,
    "number": 10919,
    "title": "cmd/beacon-chain: add jwtcommands",
    "state": "closed",
    "locked": false,
    "comments": 5,
    "created_at": "2022-06-22T02:36:54Z",
    "updated_at": "2022-10-10T12:56:32Z",
    "closed_at": "2022-06-24T15:54:09Z",
    "draft": false,
    "body": "Signed-off-by: Delweng <delweng@gmail.com>\r\n\r\n<!-- Thanks for sending a PR! Before submitting:\r\n\r\n1. If this is your first PR, check out our contribution guide here https://docs.prylabs.network/docs/contribute/contribution-guidelines\r\n   You will then need to sign our Contributor License Agreement (CLA), which will show up as a comment from a bot in this pull request after you open it. We cannot review code without a signed CLA.\r\n2. Please file an associated tracking issue if this pull request is non-trivial and requires context for our team to understand. All features and most bug fixes should have\r\n   an associated issue with a design discussed and decided upon. Small bug\r\n   fixes and documentation improvements don't need issues.\r\n3. New features and bug fixes must have tests. Documentation may need to\r\n   be updated. If you're unsure what to update, send the PR, and we'll discuss\r\n   in review.\r\n4. Note that PRs updating dependencies and new Go versions are not accepted.\r\n   Please file an issue instead.\r\n-->\r\n\r\n**What type of PR is this?**\r\n\r\nFeature: add jwt subcommands into the beacon-chain main process\r\n\r\n\r\n**What does this PR do? Why is it needed?**\r\n\r\nDocuments from https://docs.prylabs.network/docs/install/install-with-script#step-3-generate-secret said:\r\n\r\n> This will download the Prysm client and make it executable. Use the following command to create your secret JWT token:\r\n> ./prysm.sh beacon-chain jwt generate-jwt-secret\r\n\r\nBut actually when I'm run this command, raise the exception as below:\r\n\r\n```\r\n$ ./prysm.sh beacon-chain jwt generate-jwt-secret\r\nLatest Prysm version is v2.1.2.\r\nBeacon chain is up to date.\r\nVerifying binary integrity.\r\nbeacon-chain-v2.1.2-linux-amd64: OK\r\ngpg: Signature made Mon 16 May 2022 07:13:15 PM UTC using RSA key ID F1A5036E\r\ngpg: Good signature from \"Preston Van Loon <preston@prysmaticlabs.com>\"\r\ngpg: WARNING: This key is not certified with a trusted signature!\r\ngpg:          There is no indication that the signature belongs to the owner.\r\nPrimary key fingerprint: 0AE0 051D 647B A3C1 A917  AF40 72E3 3E4D F1A5 036E\r\nVerified /md0/ropsten/consensus/prysm/dist/beacon-chain-v2.1.2-linux-amd64 has been signed by Prysmatic Labs.\r\nStarting Prysm beacon-chain jwt generate-jwt-secret\r\n[2022-06-22 02:35:20] ERROR main: unrecognized argument: jwt\r\n```\r\n\r\nafter some google and code review, found the [cmd/beacon-chain/jwt](cmd/beacon-chain/jwt) package was not included in the main beacon-chain process.\r\n\r\n**Which issues(s) does this PR fix?**\r\n\r\nFixes #\r\n\r\n**Other notes for review**\r\n",
    "merged_at": "2022-06-24T15:54:09Z",
    "repo": "prysm"
  },
  {
    "html_url": "https://github.com/prysmaticlabs/prysm/pull/10918",
    "id": 1279347472,
    "number": 10918,
    "title": "typo: convert tab to space",
    "state": "closed",
    "locked": false,
    "comments": 3,
    "created_at": "2022-06-22T01:56:30Z",
    "updated_at": "2022-06-27T21:53:32Z",
    "closed_at": "2022-06-27T21:53:32Z",
    "draft": false,
    "body": "Signed-off-by: Delweng <delweng@gmail.com>\r\n\r\n<!-- Thanks for sending a PR! Before submitting:\r\n\r\n1. If this is your first PR, check out our contribution guide here https://docs.prylabs.network/docs/contribute/contribution-guidelines\r\n   You will then need to sign our Contributor License Agreement (CLA), which will show up as a comment from a bot in this pull request after you open it. We cannot review code without a signed CLA.\r\n2. Please file an associated tracking issue if this pull request is non-trivial and requires context for our team to understand. All features and most bug fixes should have\r\n   an associated issue with a design discussed and decided upon. Small bug\r\n   fixes and documentation improvements don't need issues.\r\n3. New features and bug fixes must have tests. Documentation may need to\r\n   be updated. If you're unsure what to update, send the PR, and we'll discuss\r\n   in review.\r\n4. Note that PRs updating dependencies and new Go versions are not accepted.\r\n   Please file an issue instead.\r\n-->\r\n\r\n**What type of PR is this?**\r\n\r\n> Uncomment one line below and remove others.\r\n>\r\n> Bug fix\r\n> Feature\r\n> Documentation\r\n> Other\r\n\r\n**What does this PR do? Why is it needed?**\r\n\r\n**Which issues(s) does this PR fix?**\r\n\r\nFixes #\r\n\r\n**Other notes for review**\r\n",
    "merged_at": "2022-06-27T21:53:32Z",
    "repo": "prysm"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/19645",
    "id": 450318644,
    "number": 19645,
    "title": "eth: add debug_accountRange API",
    "state": "closed",
    "locked": false,
    "comments": 17,
    "created_at": "2019-05-30T13:51:45Z",
    "updated_at": "2021-11-11T04:02:26Z",
    "closed_at": "2020-03-31T10:08:45Z",
    "draft": false,
    "body": "",
    "merged_at": "2020-03-31T10:08:45Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/18078",
    "id": 379500126,
    "number": 18078,
    "title": "rpc: simplify suitableCallbacks",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2018-11-11T08:07:06Z",
    "updated_at": "2019-01-17T14:10:33Z",
    "closed_at": "2019-01-17T14:10:12Z",
    "draft": false,
    "body": "",
    "merged_at": null,
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/17998",
    "id": 374979463,
    "number": 17998,
    "title": "eth/downloader: progress in stateSync not used anymore",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2018-10-29T11:52:09Z",
    "updated_at": "2019-01-15T20:12:20Z",
    "closed_at": "2018-12-21T22:36:15Z",
    "draft": false,
    "body": "",
    "merged_at": "2018-12-21T22:36:15Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/17971",
    "id": 373427271,
    "number": 17971,
    "title": "eth/fetcher: blockFilter is not used anymore",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2018-10-24T11:06:15Z",
    "updated_at": "2019-01-26T13:32:46Z",
    "closed_at": "2019-01-26T13:32:46Z",
    "draft": false,
    "body": "similar to #17962 , @fjl ptal",
    "merged_at": "2019-01-26T13:32:46Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/17963",
    "id": 373031439,
    "number": 17963,
    "title": "eth/downloader: remove the expired id directly",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2018-10-23T14:28:40Z",
    "updated_at": "2018-11-07T13:30:20Z",
    "closed_at": "2018-11-07T13:30:20Z",
    "draft": false,
    "body": "",
    "merged_at": "2018-11-07T13:30:20Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/17962",
    "id": 373031213,
    "number": 17962,
    "title": "eth/downloader: SetBlocksIdle is not used",
    "state": "closed",
    "locked": false,
    "comments": 2,
    "created_at": "2018-10-23T14:28:18Z",
    "updated_at": "2018-11-07T08:57:17Z",
    "closed_at": "2018-10-23T23:27:50Z",
    "draft": false,
    "body": "",
    "merged_at": "2018-10-23T23:27:50Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/17956",
    "id": 372503827,
    "number": 17956,
    "title": "eth/downloader: fix comment typos",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2018-10-22T12:39:58Z",
    "updated_at": "2018-11-07T08:57:47Z",
    "closed_at": "2018-10-23T11:21:17Z",
    "draft": false,
    "body": "",
    "merged_at": "2018-10-23T11:21:17Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/17934",
    "id": 371118514,
    "number": 17934,
    "title": "accounts: HD Wallet path comment is mistaken",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2018-10-17T14:52:35Z",
    "updated_at": "2018-10-24T11:08:50Z",
    "closed_at": "2018-10-19T13:40:11Z",
    "draft": false,
    "body": "",
    "merged_at": "2018-10-19T13:40:11Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/17930",
    "id": 370961397,
    "number": 17930,
    "title": "accounts/keystore: delete the redundant keystore in filename",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2018-10-17T08:43:28Z",
    "updated_at": "2018-11-29T10:04:57Z",
    "closed_at": "2018-11-29T10:04:57Z",
    "draft": false,
    "body": "",
    "merged_at": "2018-11-29T10:04:57Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/17866",
    "id": 367732300,
    "number": 17866,
    "title": "core/types: Log.Index is the index of Block, not Receipt",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2018-10-08T10:44:18Z",
    "updated_at": "2018-10-24T11:09:10Z",
    "closed_at": "2018-10-08T11:15:20Z",
    "draft": false,
    "body": "",
    "merged_at": "2018-10-08T11:15:20Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/17785",
    "id": 365117701,
    "number": 17785,
    "title": "Fix/preimages not saved on copyed statedb",
    "state": "closed",
    "locked": false,
    "comments": 2,
    "created_at": "2018-09-29T09:54:13Z",
    "updated_at": "2019-06-13T09:05:26Z",
    "closed_at": "2019-06-13T09:05:25Z",
    "draft": false,
    "body": "I see, the `stateObject.updateTrie` all invoked by the miner, and there exists two stack trace:\r\n\r\n1. By `StateDB.Finalise`, and the full stack trace as below:\r\n\r\n    ```\r\n    goroutine 83 [running]:\r\n    github.com/ethereum/go-ethereum/core/state.(*stateObject).updateTrie(0xc009c46e00, 0x11d9ae0, 0xc000209ad0, 0xc000ce6f1c, 0x33b1d98976d74501)\r\n            /root/.go/src/github.com/ethereum/go-ethereum/build/_workspace/src/github.com/ethereum/go-ethereum/core/state/state_object.go:223 +0xcf\r\n    github.com/ethereum/go-ethereum/core/state.(*stateObject).updateRoot(0xc009c46e00, 0x11d9ae0, 0xc000209ad0)\r\n            /root/.go/src/github.com/ethereum/go-ethereum/build/_workspace/src/github.com/ethereum/go-ethereum/core/state/state_object.go:258 +0x43\r\n    github.com/ethereum/go-ethereum/core/state.(*StateDB).Finalise(0xc009c46c40, 0xc018596901)\r\n            /root/.go/src/github.com/ethereum/go-ethereum/build/_workspace/src/github.com/ethereum/go-ethereum/core/state/statedb.go:569 +0x1a2\r\n    github.com/ethereum/go-ethereum/core.ApplyTransaction(0xc0001e2180, 0x11ce740, 0xc000382000, 0xc00a8b3558, 0xc0001d8ff0, 0xc009c46c40, 0xc00a75c240, 0xc018578900, 0xc00a75c410, 0x0, ...)\r\n            /root/.go/src/github.com/ethereum/go-ethereum/build/_workspace/src/github.com/ethereum/go-ethereum/core/state_processor.go:106 +0x32a\r\n    github.com/ethereum/go-ethereum/miner.(*worker).commitTransaction(0xc0004da1c0, 0xc018578900, 0x0, 0x0, 0x73e9da8b01000000, 0xc0512796de, 0x0, 0x0, 0x440ee1, 0x100e9c8)\r\n            /root/.go/src/github.com/ethereum/go-ethereum/build/_workspace/src/github.com/ethereum/go-ethereum/miner/worker.go:695 +0x13a\r\n    github.com/ethereum/go-ethereum/miner.(*worker).commitTransactions(0xc0004da1c0, 0xc00035fd10, 0x0, 0x0, 0x1000000, 0xc0001d8fe0, 0xb1)\r\n            /root/.go/src/github.com/ethereum/go-ethereum/build/_workspace/src/github.com/ethereum/go-ethereum/miner/worker.go:765 +0x294\r\n    github.com/ethereum/go-ethereum/miner.(*worker).commitNewWork(0xc0004da1c0, 0xc0001d8fe0, 0x1, 0x5baf3a7d)\r\n            /root/.go/src/github.com/ethereum/go-ethereum/build/_workspace/src/github.com/ethereum/go-ethereum/miner/worker.go:933 +0xb75\r\n    github.com/ethereum/go-ethereum/miner.(*worker).mainLoop(0xc0004da1c0)\r\n            /root/.go/src/github.com/ethereum/go-ethereum/build/_workspace/src/github.com/ethereum/go-ethereum/miner/worker.go:411 +0xba1\r\n    created by github.com/ethereum/go-ethereum/miner.newWorker\r\n            /root/.go/src/github.com/ethereum/go-ethereum/build/_workspace/src/github.com/ethereum/go-ethereum/miner/worker.go:219 +0x506\r\n    ```\r\n    which uses `w.current.state`, and after the `updateTrie` was\r\n    invoked, the `stateObject.dirtyStorage` turned out to be an empty map, and the items are updated to the SecureTrie.\r\n    **You only update the Trie, but not commited it, some metadata are only in SecureTrie's cache, not persistenced.**\r\n\r\n2. By `StateDB.CommitTrie`, and the full stack trace as below:\r\n\r\n    ```\r\n    goroutine 85 [running]:\r\n    github.com/ethereum/go-ethereum/core/state.(*stateObject).updateTrie(0xc009c47260, 0x11d9ae0, 0xc000209ad0, 0x177614d290fdfd56, 0xcb009d0df74936b9)\r\n            /root/.go/src/github.com/ethereum/go-ethereum/build/_workspace/src/github.com/ethereum/go-ethereum/core/state/state_object.go:223 +0xcf\r\n    github.com/ethereum/go-ethereum/core/state.(*stateObject).CommitTrie(0xc009c47260, 0x11d9ae0, 0xc000209ad0, 0xaa71a542df75c534, 0xc2398056166a4ff7)\r\n            /root/.go/src/github.com/ethereum/go-ethereum/build/_workspace/src/github.com/ethereum/go-ethereum/core/state/state_object.go:265 +0x5a\r\n    github.com/ethereum/go-ethereum/core/state.(*StateDB).Commit(0xc009c46fc0, 0xc002031a01, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)\r\n            /root/.go/src/github.com/ethereum/go-ethereum/build/_workspace/src/github.com/ethereum/go-ethereum/core/state/statedb.go:622 +0x30b\r\n    github.com/ethereum/go-ethereum/core.(*BlockChain).WriteBlockWithState(0xc000382000, 0xc000d8c240, 0xc01855a0c8, 0x1, 0x1, 0xc009c46fc0, 0x0, 0x0, 0x0)\r\n            /root/.go/src/github.com/ethereum/go-ethereum/build/_workspace/src/github.com/ethereum/go-ethereum/core/blockchain.go:909 +0x502\r\n    github.com/ethereum/go-ethereum/miner.(*worker).resultLoop(0xc0004da1c0)\r\n            /root/.go/src/github.com/ethereum/go-ethereum/build/_workspace/src/github.com/ethereum/go-ethereum/miner/worker.go:580 +0x628\r\n    created by github.com/ethereum/go-ethereum/miner.newWorker\r\n            /root/.go/src/github.com/ethereum/go-ethereum/build/_workspace/src/github.com/ethereum/go-ethereum/miner/worker.go:221 +0x557\r\n    ```\r\n    which uses `w.current.state.Copy()`, a deep copy of `w.current.state`. So there exists two objects of `StateDB`.\r\n\r\nSo far so good. After the 2th `CommitTrie` invoked, I want to use `debug.dumpBlock` to find the storage of deployed contract, but it\r\nfailed to print only one no key value, seems I'm missing the preimages\r\nof all the storage key.\r\n\r\nAfter digging into the implement of SecureTrie, inside the `SecureTrie.Commit`, it will insert the preimages down to Database, but it didn't do it.\r\nFinds it depends on `len(t.getSecKeyCache())`, which will decide to use the old `secKeyCache`(copyed from the `w.current.state`) or make a new map by the `t.secKeyCacheOwner`.\r\n\r\nBut after you copyed a new StateDB, the owner is changed, in the meanwhile, you want to Commit the Trie, only the trie is saved to DB, the preimages are abandoned.",
    "merged_at": null,
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/17784",
    "id": 365104007,
    "number": 17784,
    "title": "cmd/swarm: remove swarm binary",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2018-09-29T06:47:07Z",
    "updated_at": "2018-10-24T11:09:27Z",
    "closed_at": "2018-09-29T20:15:32Z",
    "draft": false,
    "body": "",
    "merged_at": "2018-09-29T20:15:32Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/17780",
    "id": 364794416,
    "number": 17780,
    "title": "eth: return the statedb after ApplyMessage inside api_tracer",
    "state": "closed",
    "locked": false,
    "comments": 8,
    "created_at": "2018-09-28T08:40:33Z",
    "updated_at": "2019-08-08T08:42:02Z",
    "closed_at": "2019-08-08T08:41:36Z",
    "draft": false,
    "body": "The `statedb` is parent's, so it should be ApplyMessage,\r\nthen with `statedb.Finalise` to get a new one.",
    "merged_at": null,
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/17703",
    "id": 361656343,
    "number": 17703,
    "title": "cmd/geth: typo export -> import",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2018-09-19T09:23:52Z",
    "updated_at": "2018-09-19T10:29:41Z",
    "closed_at": "2018-09-19T10:29:41Z",
    "draft": false,
    "body": "",
    "merged_at": "2018-09-19T10:29:41Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/17510",
    "id": 354024130,
    "number": 17510,
    "title": "eth/downloader: use intermediate variable for better readability",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2018-08-25T16:12:23Z",
    "updated_at": "2018-09-29T20:16:05Z",
    "closed_at": "2018-09-29T20:13:40Z",
    "draft": false,
    "body": "",
    "merged_at": "2018-09-29T20:13:40Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/17509",
    "id": 354023057,
    "number": 17509,
    "title": "docs: remove the duplicate 'the' in annotations",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2018-08-25T15:57:38Z",
    "updated_at": "2018-08-28T01:37:51Z",
    "closed_at": "2018-08-27T08:49:29Z",
    "draft": false,
    "body": "",
    "merged_at": "2018-08-27T08:49:29Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/17508",
    "id": 354022101,
    "number": 17508,
    "title": "core,eth,trie: use common/prque instead of karalabe's",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2018-08-25T15:43:25Z",
    "updated_at": "2018-09-05T02:47:56Z",
    "closed_at": "2018-09-03T15:33:22Z",
    "draft": false,
    "body": "",
    "merged_at": "2018-09-03T15:33:22Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/17236",
    "id": 343971493,
    "number": 17236,
    "title": "core: fix comment typo",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2018-07-24T10:10:35Z",
    "updated_at": "2018-10-24T11:09:57Z",
    "closed_at": "2018-07-24T10:17:12Z",
    "draft": false,
    "body": "",
    "merged_at": "2018-07-24T10:17:12Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/17230",
    "id": 343580018,
    "number": 17230,
    "title": "p2p: token is useless in xxxEncHandshake",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2018-07-23T10:41:43Z",
    "updated_at": "2018-07-23T15:36:09Z",
    "closed_at": "2018-07-23T15:36:09Z",
    "draft": false,
    "body": "",
    "merged_at": "2018-07-23T15:36:09Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/17223",
    "id": 343412311,
    "number": 17223,
    "title": "p2p: use tuple instead of index of for range",
    "state": "closed",
    "locked": false,
    "comments": 2,
    "created_at": "2018-07-22T14:54:37Z",
    "updated_at": "2018-07-23T10:44:07Z",
    "closed_at": "2018-07-23T08:06:22Z",
    "draft": false,
    "body": "",
    "merged_at": null,
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/17151",
    "id": 339437071,
    "number": 17151,
    "title": "rpc: url.Parse can't parse filepath in windows",
    "state": "closed",
    "locked": false,
    "comments": 4,
    "created_at": "2018-07-09T12:53:54Z",
    "updated_at": "2018-07-23T10:43:56Z",
    "closed_at": "2018-07-10T12:52:57Z",
    "draft": false,
    "body": "As #17141 said, CI failed in Windowss after PR #17041 merged, because #17041 introduced a new test case `TestNewSwarm` in [swarm_test.go#L38](https://github.com/ethereum/go-ethereum/blob/master/swarm/swarm_test.go#L38), [diff](https://github.com/ethereum/go-ethereum/pull/17041/files#diff-a690be1dbdc6e4dac043558611dd8cfeR35). AFAIK, this bug exists for a long time, long before PR #17041, and it happened in that PR. \r\n\r\n",
    "merged_at": null,
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/17149",
    "id": 339397399,
    "number": 17149,
    "title": "cmd: typo fixed, isntance -> instance",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2018-07-09T10:43:43Z",
    "updated_at": "2018-07-09T14:35:00Z",
    "closed_at": "2018-07-09T14:35:00Z",
    "draft": false,
    "body": "",
    "merged_at": "2018-07-09T14:35:00Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/17148",
    "id": 339363827,
    "number": 17148,
    "title": "cmd/geth,internal:  set cpu number when geth starting",
    "state": "closed",
    "locked": false,
    "comments": 7,
    "created_at": "2018-07-09T09:04:04Z",
    "updated_at": "2018-12-13T10:05:03Z",
    "closed_at": "2018-10-16T00:02:53Z",
    "draft": false,
    "body": "",
    "merged_at": "2018-10-16T00:02:53Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/17145",
    "id": 339202794,
    "number": 17145,
    "title": "rpc: quick exit if no methods/subscriptions given",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2018-07-08T07:02:20Z",
    "updated_at": "2018-08-01T15:57:54Z",
    "closed_at": "2018-07-24T00:00:55Z",
    "draft": false,
    "body": "",
    "merged_at": "2018-07-24T00:00:55Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/17136",
    "id": 338968763,
    "number": 17136,
    "title": "cmd: fix a spelling mistake",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2018-07-06T14:52:45Z",
    "updated_at": "2018-07-09T08:57:45Z",
    "closed_at": "2018-07-09T08:41:29Z",
    "draft": false,
    "body": "",
    "merged_at": "2018-07-09T08:41:29Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/17006",
    "id": 332959839,
    "number": 17006,
    "title": "core: remove deadcode",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2018-06-16T04:35:00Z",
    "updated_at": "2018-06-19T11:41:14Z",
    "closed_at": "2018-06-19T11:41:14Z",
    "draft": false,
    "body": "",
    "merged_at": "2018-06-19T11:41:14Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/17005",
    "id": 332959152,
    "number": 17005,
    "title": "swarm: chunk.C maybe nil",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2018-06-16T04:18:48Z",
    "updated_at": "2018-06-19T12:00:00Z",
    "closed_at": "2018-06-19T12:00:00Z",
    "draft": false,
    "body": "",
    "merged_at": null,
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/17004",
    "id": 332958739,
    "number": 17004,
    "title": "consensus: move test use only var/func to testfile",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2018-06-16T04:08:52Z",
    "updated_at": "2019-03-13T19:17:52Z",
    "closed_at": "2018-07-24T00:14:16Z",
    "draft": false,
    "body": "",
    "merged_at": "2018-07-24T00:14:16Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/17003",
    "id": 332956687,
    "number": 17003,
    "title": "signer: remove useless errorWrapper",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2018-06-16T03:22:34Z",
    "updated_at": "2018-06-19T11:48:11Z",
    "closed_at": "2018-06-19T11:48:11Z",
    "draft": false,
    "body": "",
    "merged_at": "2018-06-19T11:48:11Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/16991",
    "id": 332457989,
    "number": 16991,
    "title": "cmd/faucet, cmd/puppeth: authGitHub/protips is not used anymore",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2018-06-14T15:40:53Z",
    "updated_at": "2018-06-15T08:14:56Z",
    "closed_at": "2018-06-15T08:14:56Z",
    "draft": false,
    "body": "According to https://github.com/ethereum/go-ethereum/commit/327dcd3622efd472c4d168cda657c55ef8e19889, the GitHub auth is disabled, so `authGitHub` maybe also useless.",
    "merged_at": "2018-06-15T08:14:56Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/16990",
    "id": 332457133,
    "number": 16990,
    "title": "accounts: remove deadcode isSigned",
    "state": "closed",
    "locked": false,
    "comments": 2,
    "created_at": "2018-06-14T15:38:55Z",
    "updated_at": "2018-06-20T09:46:30Z",
    "closed_at": "2018-06-20T09:46:30Z",
    "draft": false,
    "body": "This function is not used anymore, should we remove it?",
    "merged_at": "2018-06-20T09:46:30Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/16989",
    "id": 332447103,
    "number": 16989,
    "title": "ethclient: golint of error variable name",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2018-06-14T15:14:20Z",
    "updated_at": "2018-06-14T15:44:28Z",
    "closed_at": "2018-06-14T15:44:28Z",
    "draft": false,
    "body": "",
    "merged_at": null,
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/16987",
    "id": 332410121,
    "number": 16987,
    "title": "accounts: inintroduce derivationPathBase to represents 0x80000000",
    "state": "closed",
    "locked": false,
    "comments": 4,
    "created_at": "2018-06-14T13:45:49Z",
    "updated_at": "2018-06-14T14:13:57Z",
    "closed_at": "2018-06-14T14:13:33Z",
    "draft": false,
    "body": "",
    "merged_at": null,
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/16986",
    "id": 332408831,
    "number": 16986,
    "title": "accounts/keystore: move two if conditions to one",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2018-06-14T13:42:33Z",
    "updated_at": "2018-06-14T14:23:54Z",
    "closed_at": "2018-06-14T14:23:54Z",
    "draft": false,
    "body": "",
    "merged_at": null,
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/16985",
    "id": 332399908,
    "number": 16985,
    "title": "accounts/keystore: assign schema as const instead of var",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2018-06-14T13:19:57Z",
    "updated_at": "2018-06-14T14:24:36Z",
    "closed_at": "2018-06-14T14:24:35Z",
    "draft": false,
    "body": "",
    "merged_at": "2018-06-14T14:24:35Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/16980",
    "id": 332345360,
    "number": 16980,
    "title": "core/tx_pool: reduce judgement levels",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2018-06-14T10:35:01Z",
    "updated_at": "2018-06-14T11:20:29Z",
    "closed_at": "2018-06-14T10:46:44Z",
    "draft": false,
    "body": "",
    "merged_at": "2018-06-14T10:46:44Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/16970",
    "id": 331940371,
    "number": 16970,
    "title": "cmd/geth: don't repeat yourself",
    "state": "closed",
    "locked": false,
    "comments": 5,
    "created_at": "2018-06-13T10:45:36Z",
    "updated_at": "2018-07-24T00:09:25Z",
    "closed_at": "2018-07-24T00:09:25Z",
    "draft": false,
    "body": "",
    "merged_at": "2018-07-24T00:09:25Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/16969",
    "id": 331919062,
    "number": 16969,
    "title": "eth: annotation typo",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2018-06-13T09:44:14Z",
    "updated_at": "2018-07-08T07:04:14Z",
    "closed_at": "2018-06-13T14:02:29Z",
    "draft": false,
    "body": "",
    "merged_at": "2018-06-13T14:02:29Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/16914",
    "id": 329882596,
    "number": 16914,
    "title": "core/rawdb: wrap db key",
    "state": "closed",
    "locked": false,
    "comments": 2,
    "created_at": "2018-06-06T14:04:24Z",
    "updated_at": "2018-06-11T13:06:27Z",
    "closed_at": "2018-06-11T13:06:27Z",
    "draft": false,
    "body": "**What's this PR works for**\r\n \r\n* make the db.Action(dbKey) clear  and concise\r\n* reduce the depulicate use of append, [accessors_chain.go#L138](https://github.com/ethereum/go-ethereum/blob/master/core/rawdb/accessors_chain.go#L138)",
    "merged_at": "2018-06-11T13:06:27Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/16870",
    "id": 328811996,
    "number": 16870,
    "title": "build: set the number of go testing process",
    "state": "closed",
    "locked": false,
    "comments": 5,
    "created_at": "2018-06-03T08:59:35Z",
    "updated_at": "2019-04-04T08:12:30Z",
    "closed_at": "2019-03-27T13:28:54Z",
    "draft": false,
    "body": "**What's this PR works for:**\r\n\r\nrun testing in concurrent mode.",
    "merged_at": null,
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/16869",
    "id": 328810681,
    "number": 16869,
    "title": "all: don't use me, this, self as receiver names",
    "state": "closed",
    "locked": false,
    "comments": 4,
    "created_at": "2018-06-03T08:36:58Z",
    "updated_at": "2018-06-04T22:29:09Z",
    "closed_at": "2018-06-04T22:29:02Z",
    "draft": false,
    "body": "**What's this PR works for:**\r\n\r\nGet ride of golint's warning: \"don't use me, this, self as receiver names\"",
    "merged_at": null,
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/16867",
    "id": 328791176,
    "number": 16867,
    "title": "les, light: limit single line code length",
    "state": "closed",
    "locked": false,
    "comments": 1,
    "created_at": "2018-06-03T01:40:21Z",
    "updated_at": "2018-06-04T07:26:18Z",
    "closed_at": "2018-06-04T07:26:18Z",
    "draft": false,
    "body": "",
    "merged_at": null,
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/16804",
    "id": 326120146,
    "number": 16804,
    "title": "trie:  fix golint warnings",
    "state": "closed",
    "locked": false,
    "comments": 2,
    "created_at": "2018-05-24T13:23:25Z",
    "updated_at": "2018-05-30T01:24:40Z",
    "closed_at": "2018-05-29T15:48:43Z",
    "draft": false,
    "body": "",
    "merged_at": "2018-05-29T15:48:43Z",
    "repo": "go-ethereum"
  },
  {
    "html_url": "https://github.com/ethereum/go-ethereum/pull/16802",
    "id": 326043758,
    "number": 16802,
    "title": "fix(typo): some typo mistake",
    "state": "closed",
    "locked": false,
    "comments": 0,
    "created_at": "2018-05-24T09:44:57Z",
    "updated_at": "2018-07-08T07:03:19Z",
    "closed_at": "2018-05-24T12:55:21Z",
    "draft": false,
    "body": "",
    "merged_at": "2018-05-24T12:55:21Z",
    "repo": "go-ethereum"
  }
]
